#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_FluidFlux

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPL_FluidFlux.BPL_FluidFlux_C.SetTexture2DConfig
// 0x0018 (0x0018 - 0x0000)
struct BPL_FluidFlux_C_SetTexture2DConfig final
{
public:
	class UTexture2D*                             RenderTargetObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                Filter;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SRGB;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               Address_X;                                         // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               Address_Y;                                         // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureMipGenSettings                        Mip_Gen_Settings;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_SetTexture2DConfig) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_SetTexture2DConfig");
static_assert(sizeof(BPL_FluidFlux_C_SetTexture2DConfig) == 0x000018, "Wrong size on BPL_FluidFlux_C_SetTexture2DConfig");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, RenderTargetObject) == 0x000000, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::RenderTargetObject' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, Filter) == 0x000008, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::Filter' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, SRGB) == 0x000009, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::SRGB' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, Address_X) == 0x00000A, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::Address_X' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, Address_Y) == 0x00000B, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::Address_Y' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, Mip_Gen_Settings) == 0x00000C, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::Mip_Gen_Settings' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetTexture2DConfig, __WorldContext) == 0x000010, "Member 'BPL_FluidFlux_C_SetTexture2DConfig::__WorldContext' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.SetRenderTargetConfig
// 0x0018 (0x0018 - 0x0000)
struct BPL_FluidFlux_C_SetRenderTargetConfig final
{
public:
	class UTextureRenderTarget2D*                 RenderTargetObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                Filter;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SRGB;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               Address_X;                                         // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               Address_Y;                                         // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_SetRenderTargetConfig) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_SetRenderTargetConfig");
static_assert(sizeof(BPL_FluidFlux_C_SetRenderTargetConfig) == 0x000018, "Wrong size on BPL_FluidFlux_C_SetRenderTargetConfig");
static_assert(offsetof(BPL_FluidFlux_C_SetRenderTargetConfig, RenderTargetObject) == 0x000000, "Member 'BPL_FluidFlux_C_SetRenderTargetConfig::RenderTargetObject' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRenderTargetConfig, Filter) == 0x000008, "Member 'BPL_FluidFlux_C_SetRenderTargetConfig::Filter' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRenderTargetConfig, SRGB) == 0x000009, "Member 'BPL_FluidFlux_C_SetRenderTargetConfig::SRGB' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRenderTargetConfig, Address_X) == 0x00000A, "Member 'BPL_FluidFlux_C_SetRenderTargetConfig::Address_X' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRenderTargetConfig, Address_Y) == 0x00000B, "Member 'BPL_FluidFlux_C_SetRenderTargetConfig::Address_Y' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRenderTargetConfig, __WorldContext) == 0x000010, "Member 'BPL_FluidFlux_C_SetRenderTargetConfig::__WorldContext' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.SetRectTransform2D
// 0x0170 (0x0170 - 0x0000)
struct BPL_FluidFlux_C_SetRectTransform2D final
{
public:
	class UMaterialInstanceDynamic*               Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InTransform;                                       // 0x0010(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_SetRectTransform2D) == 0x000010, "Wrong alignment on BPL_FluidFlux_C_SetRectTransform2D");
static_assert(sizeof(BPL_FluidFlux_C_SetRectTransform2D) == 0x000170, "Wrong size on BPL_FluidFlux_C_SetRectTransform2D");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, Target) == 0x000000, "Member 'BPL_FluidFlux_C_SetRectTransform2D::Target' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, InTransform) == 0x000010, "Member 'BPL_FluidFlux_C_SetRectTransform2D::InTransform' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, __WorldContext) == 0x000070, "Member 'BPL_FluidFlux_C_SetRectTransform2D::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakTransform_Location) == 0x000078, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_X) == 0x0000C0, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_Z) == 0x0000D0, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_GetForwardVector_ReturnValue) == 0x0000D8, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_Z_1) == 0x000100, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_X_2) == 0x000108, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_Y_2) == 0x000110, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_BreakVector_Z_2) == 0x000118, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, K2Node_MakeStruct_LinearColor) == 0x000120, "Member 'BPL_FluidFlux_C_SetRectTransform2D::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_MakeColor_ReturnValue) == 0x000130, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_MakeColor_B_ImplicitCast) == 0x000140, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_MakeColor_A_ImplicitCast) == 0x000144, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, K2Node_MakeStruct_A_ImplicitCast) == 0x000148, "Member 'BPL_FluidFlux_C_SetRectTransform2D::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_MakeColor_R_ImplicitCast) == 0x00014C, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_MakeColor_G_ImplicitCast) == 0x000150, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000154, "Member 'BPL_FluidFlux_C_SetRectTransform2D::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, K2Node_MakeStruct_R_ImplicitCast) == 0x000158, "Member 'BPL_FluidFlux_C_SetRectTransform2D::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, K2Node_MakeStruct_G_ImplicitCast) == 0x00015C, "Member 'BPL_FluidFlux_C_SetRectTransform2D::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_SetRectTransform2D, K2Node_MakeStruct_B_ImplicitCast) == 0x000160, "Member 'BPL_FluidFlux_C_SetRectTransform2D::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.RecreateRenderTarget
// 0x0080 (0x0080 - 0x0000)
struct BPL_FluidFlux_C_RecreateRenderTarget final
{
public:
	class UTextureRenderTarget2D*                 CurrentTexture;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ClearColor;                                        // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         LOD;                                               // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GenerateMipmaps;                                   // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 newTexture;                                        // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         D;                                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         H;                                                 // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         W;                                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 TextureRenderTarget;                               // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRenderTarget_TheSame;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_RecreateRenderTarget) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_RecreateRenderTarget");
static_assert(sizeof(BPL_FluidFlux_C_RecreateRenderTarget) == 0x000080, "Wrong size on BPL_FluidFlux_C_RecreateRenderTarget");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CurrentTexture) == 0x000000, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CurrentTexture' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, Width) == 0x000008, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::Width' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, Height) == 0x00000C, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::Height' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, Format) == 0x000010, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::Format' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, ClearColor) == 0x000014, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::ClearColor' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, LOD) == 0x000024, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::LOD' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, GenerateMipmaps) == 0x000025, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::GenerateMipmaps' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, __WorldContext) == 0x000028, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, newTexture) == 0x000030, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::newTexture' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, D) == 0x000038, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::D' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, H) == 0x00003C, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::H' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, W) == 0x000040, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::W' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, TextureRenderTarget) == 0x000048, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x000050, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_Round_ReturnValue) == 0x000060, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_Divide_IntInt_ReturnValue) == 0x000068, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00006C, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000070, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_RecreateRenderTarget, CallFunc_CheckRenderTarget_TheSame) == 0x000078, "Member 'BPL_FluidFlux_C_RecreateRenderTarget::CallFunc_CheckRenderTarget_TheSame' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.IsValuePowerOfTwo
// 0x0028 (0x0028 - 0x0000)
struct BPL_FluidFlux_C_IsValuePowerOfTwo final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_IsValuePowerOfTwo) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_IsValuePowerOfTwo");
static_assert(sizeof(BPL_FluidFlux_C_IsValuePowerOfTwo) == 0x000028, "Wrong size on BPL_FluidFlux_C_IsValuePowerOfTwo");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, Value) == 0x000000, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::Value' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, __WorldContext) == 0x000008, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, Result) == 0x000010, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::Result' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, CallFunc_And_IntInt_ReturnValue) == 0x00001C, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsValuePowerOfTwo, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BPL_FluidFlux_C_IsValuePowerOfTwo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.IsPointPowerOfTwo
// 0x0018 (0x0018 - 0x0000)
struct BPL_FluidFlux_C_IsPointPowerOfTwo final
{
public:
	struct FIntPoint                              Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValuePowerOfTwo_Result;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValuePowerOfTwo_Result_1;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_IsPointPowerOfTwo) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_IsPointPowerOfTwo");
static_assert(sizeof(BPL_FluidFlux_C_IsPointPowerOfTwo) == 0x000018, "Wrong size on BPL_FluidFlux_C_IsPointPowerOfTwo");
static_assert(offsetof(BPL_FluidFlux_C_IsPointPowerOfTwo, Value) == 0x000000, "Member 'BPL_FluidFlux_C_IsPointPowerOfTwo::Value' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsPointPowerOfTwo, __WorldContext) == 0x000008, "Member 'BPL_FluidFlux_C_IsPointPowerOfTwo::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsPointPowerOfTwo, Result) == 0x000010, "Member 'BPL_FluidFlux_C_IsPointPowerOfTwo::Result' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsPointPowerOfTwo, CallFunc_IsValuePowerOfTwo_Result) == 0x000011, "Member 'BPL_FluidFlux_C_IsPointPowerOfTwo::CallFunc_IsValuePowerOfTwo_Result' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsPointPowerOfTwo, CallFunc_IsValuePowerOfTwo_Result_1) == 0x000012, "Member 'BPL_FluidFlux_C_IsPointPowerOfTwo::CallFunc_IsValuePowerOfTwo_Result_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_IsPointPowerOfTwo, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BPL_FluidFlux_C_IsPointPowerOfTwo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.GetUndefiniedHeight
// 0x0010 (0x0010 - 0x0000)
struct BPL_FluidFlux_C_GetUndefiniedHeight final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewParam;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_GetUndefiniedHeight) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_GetUndefiniedHeight");
static_assert(sizeof(BPL_FluidFlux_C_GetUndefiniedHeight) == 0x000010, "Wrong size on BPL_FluidFlux_C_GetUndefiniedHeight");
static_assert(offsetof(BPL_FluidFlux_C_GetUndefiniedHeight, __WorldContext) == 0x000000, "Member 'BPL_FluidFlux_C_GetUndefiniedHeight::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetUndefiniedHeight, NewParam) == 0x000008, "Member 'BPL_FluidFlux_C_GetUndefiniedHeight::NewParam' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.GetEngineVersionInt
// 0x0048 (0x0048 - 0x0000)
struct BPL_FluidFlux_C_GetEngineVersionInt final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Integer;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEngineVersion_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_GetEngineVersionInt) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_GetEngineVersionInt");
static_assert(sizeof(BPL_FluidFlux_C_GetEngineVersionInt) == 0x000048, "Wrong size on BPL_FluidFlux_C_GetEngineVersionInt");
static_assert(offsetof(BPL_FluidFlux_C_GetEngineVersionInt, __WorldContext) == 0x000000, "Member 'BPL_FluidFlux_C_GetEngineVersionInt::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetEngineVersionInt, Integer) == 0x000008, "Member 'BPL_FluidFlux_C_GetEngineVersionInt::Integer' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetEngineVersionInt, CallFunc_GetEngineVersion_ReturnValue) == 0x000010, "Member 'BPL_FluidFlux_C_GetEngineVersionInt::CallFunc_GetEngineVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetEngineVersionInt, CallFunc_GetSubstring_ReturnValue) == 0x000020, "Member 'BPL_FluidFlux_C_GetEngineVersionInt::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetEngineVersionInt, CallFunc_Replace_ReturnValue) == 0x000030, "Member 'BPL_FluidFlux_C_GetEngineVersionInt::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetEngineVersionInt, CallFunc_Conv_StringToInt_ReturnValue) == 0x000040, "Member 'BPL_FluidFlux_C_GetEngineVersionInt::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.CheckRenderTarget
// 0x0038 (0x0038 - 0x0000)
struct BPL_FluidFlux_C_CheckRenderTarget final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CurrentRenderTarget;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TheSame;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 TextureRenderTarget;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_CheckRenderTarget) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_CheckRenderTarget");
static_assert(sizeof(BPL_FluidFlux_C_CheckRenderTarget) == 0x000038, "Wrong size on BPL_FluidFlux_C_CheckRenderTarget");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, Width) == 0x000000, "Member 'BPL_FluidFlux_C_CheckRenderTarget::Width' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, Height) == 0x000004, "Member 'BPL_FluidFlux_C_CheckRenderTarget::Height' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, Format) == 0x000008, "Member 'BPL_FluidFlux_C_CheckRenderTarget::Format' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, CurrentRenderTarget) == 0x000010, "Member 'BPL_FluidFlux_C_CheckRenderTarget::CurrentRenderTarget' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, __WorldContext) == 0x000018, "Member 'BPL_FluidFlux_C_CheckRenderTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, TheSame) == 0x000020, "Member 'BPL_FluidFlux_C_CheckRenderTarget::TheSame' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, TextureRenderTarget) == 0x000028, "Member 'BPL_FluidFlux_C_CheckRenderTarget::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BPL_FluidFlux_C_CheckRenderTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BPL_FluidFlux_C_CheckRenderTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000032, "Member 'BPL_FluidFlux_C_CheckRenderTarget::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'BPL_FluidFlux_C_CheckRenderTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_CheckRenderTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x000034, "Member 'BPL_FluidFlux_C_CheckRenderTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.MakeVolumeLocalTransform
// 0x0150 (0x0150 - 0x0000)
struct BPL_FluidFlux_C_MakeVolumeLocalTransform final
{
public:
	struct FVector                                ExtraSize;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffsetScale;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             NewParam;                                          // 0x0040(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_MakeVolumeLocalTransform) == 0x000010, "Wrong alignment on BPL_FluidFlux_C_MakeVolumeLocalTransform");
static_assert(sizeof(BPL_FluidFlux_C_MakeVolumeLocalTransform) == 0x000150, "Wrong size on BPL_FluidFlux_C_MakeVolumeLocalTransform");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, ExtraSize) == 0x000000, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::ExtraSize' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, Scale) == 0x000018, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::Scale' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, ZOffsetScale) == 0x000030, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::ZOffsetScale' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, __WorldContext) == 0x000038, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, NewParam) == 0x000040, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::NewParam' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_BreakVector_X) == 0x0000A0, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B8, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_MakeVolumeLocalTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BPL_FluidFlux_C_MakeVolumeLocalTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BPL_FluidFlux.BPL_FluidFlux_C.GetBordersVector
// 0x00A0 (0x00A0 - 0x0000)
struct BPL_FluidFlux_C_GetBordersVector final
{
public:
	int32                                         StateAreaBorders;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColor;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_3;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_2;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_3;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_FluidFlux_C_GetBordersVector) == 0x000008, "Wrong alignment on BPL_FluidFlux_C_GetBordersVector");
static_assert(sizeof(BPL_FluidFlux_C_GetBordersVector) == 0x0000A0, "Wrong size on BPL_FluidFlux_C_GetBordersVector");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, StateAreaBorders) == 0x000000, "Member 'BPL_FluidFlux_C_GetBordersVector::StateAreaBorders' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, __WorldContext) == 0x000008, "Member 'BPL_FluidFlux_C_GetBordersVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, LinearColor) == 0x000010, "Member 'BPL_FluidFlux_C_GetBordersVector::LinearColor' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_MakeLiteralInt_ReturnValue) == 0x000020, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000024, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_And_IntInt_ReturnValue) == 0x000028, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_And_IntInt_ReturnValue_1) == 0x00002C, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000038, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000040, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x000048, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_MakeLiteralInt_ReturnValue_3) == 0x00004C, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_MakeLiteralInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_And_IntInt_ReturnValue_2) == 0x000050, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_And_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_And_IntInt_ReturnValue_3) == 0x000054, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_And_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000058, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x000059, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_Conv_BoolToDouble_ReturnValue_2) == 0x000060, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_Conv_BoolToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_Conv_BoolToDouble_ReturnValue_3) == 0x000068, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_Conv_BoolToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, K2Node_MakeStruct_LinearColor) == 0x000070, "Member 'BPL_FluidFlux_C_GetBordersVector::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000080, "Member 'BPL_FluidFlux_C_GetBordersVector::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, K2Node_MakeStruct_B_ImplicitCast) == 0x000090, "Member 'BPL_FluidFlux_C_GetBordersVector::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, K2Node_MakeStruct_A_ImplicitCast) == 0x000094, "Member 'BPL_FluidFlux_C_GetBordersVector::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, K2Node_MakeStruct_R_ImplicitCast) == 0x000098, "Member 'BPL_FluidFlux_C_GetBordersVector::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPL_FluidFlux_C_GetBordersVector, K2Node_MakeStruct_G_ImplicitCast) == 0x00009C, "Member 'BPL_FluidFlux_C_GetBordersVector::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");

}

