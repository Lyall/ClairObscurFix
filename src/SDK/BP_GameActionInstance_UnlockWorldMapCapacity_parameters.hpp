#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_UnlockWorldMapCapacity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_WorldMapExplorationCapacity_structs.hpp"


namespace SDK::Params
{

// Function BP_GameActionInstance_UnlockWorldMapCapacity.BP_GameActionInstance_UnlockWorldMapCapacity_C.ExecuteGameAction
// 0x0008 (0x0008 - 0x0000)
struct BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction final
{
public:
	const class APlayerController*                Controller;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction");
static_assert(sizeof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction) == 0x000008, "Wrong size on BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction, Controller) == 0x000000, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteGameAction::Controller' has a wrong offset!");

// Function BP_GameActionInstance_UnlockWorldMapCapacity.BP_GameActionInstance_UnlockWorldMapCapacity_C.ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity
// 0x0038 (0x0038 - 0x0000)
struct BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                K2Node_Event_Controller;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameAction_UnlockWorldMapCapacity_C* K2Node_DynamicCast_AsUnlock_World_Map_Capacity;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGameInstance_BP_J_RPG_GI_Custom; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity) == 0x000008, "Wrong alignment on BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity");
static_assert(sizeof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity) == 0x000038, "Wrong size on BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, EntryPoint) == 0x000000, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, K2Node_Event_Controller) == 0x000008, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000010, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, K2Node_DynamicCast_AsUnlock_World_Map_Capacity) == 0x000020, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::K2Node_DynamicCast_AsUnlock_World_Map_Capacity' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity, CallFunc_GetCustomGameInstance_BP_J_RPG_GI_Custom) == 0x000030, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_ExecuteUbergraph_BP_GameActionInstance_UnlockWorldMapCapacity::CallFunc_GetCustomGameInstance_BP_J_RPG_GI_Custom' has a wrong offset!");

// Function BP_GameActionInstance_UnlockWorldMapCapacity.BP_GameActionInstance_UnlockWorldMapCapacity_C.GetDebugString
// 0x0190 (0x0190 - 0x0000)
struct BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 local_AbilitiesAsString;                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class UBP_GameAction_UnlockWorldMapCapacity_C* K2Node_DynamicCast_AsUnlock_World_Map_Capacity;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A8(0x0010)()
	E_WorldMapExplorationCapacity                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugString_ReturnValue;               // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_PadString_Result;                         // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString) == 0x000008, "Wrong alignment on BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString");
static_assert(sizeof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString) == 0x000190, "Wrong size on BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, local_AbilitiesAsString) == 0x000010, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::local_AbilitiesAsString' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, K2Node_DynamicCast_AsUnlock_World_Map_Capacity) == 0x000088, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::K2Node_DynamicCast_AsUnlock_World_Map_Capacity' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_GetDisplayName_ReturnValue) == 0x000098, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A8, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000108, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000148, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_GetDebugString_ReturnValue) == 0x000160, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_GetDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_PadString_Result) == 0x000170, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_PadString_Result' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000180, "Member 'BP_GameActionInstance_UnlockWorldMapCapacity_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

}

