#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxOceanWave

#include "Basic.hpp"

#include "BP_FluxOceanWave_classes.hpp"
#include "BP_FluxOceanWave_parameters.hpp"


namespace SDK
{

// Function BP_FluxOceanWave.BP_FluxOceanWave_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.UpdateTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::UpdateTexture(double Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "UpdateTexture");

	Params::BP_FluxOceanWave_C_UpdateTexture Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.UpdateModifierMaterials
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UMaterialInstanceDynamic*>&Materials                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    UseVelocityMap                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::UpdateModifierMaterials(const TArray<class UMaterialInstanceDynamic*>& Materials, bool UseVelocityMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "UpdateModifierMaterials");

	Params::BP_FluxOceanWave_C_UpdateModifierMaterials Parms{};

	Parms.Materials = std::move(Materials);
	Parms.UseVelocityMap = UseVelocityMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.TogleDebugGround
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::TogleDebugGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "TogleDebugGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.ToggleUpdateSimulation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::ToggleUpdateSimulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "ToggleUpdateSimulation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.SetZLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  New_Location_Z                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ApplyToSurface                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::SetZLocation(double New_Location_Z, bool ApplyToSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "SetZLocation");

	Params::BP_FluxOceanWave_C_SetZLocation Parms{};

	Parms.New_Location_Z = New_Location_Z;
	Parms.ApplyToSurface = ApplyToSurface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.SetWaveTextureAndArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::SetWaveTextureAndArea(class UTextureRenderTarget2D* Texture, const struct FLinearColor& Area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "SetWaveTextureAndArea");

	Params::BP_FluxOceanWave_C_SetWaveTextureAndArea Parms{};

	Parms.Texture = Texture;
	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.SetWaveTexture
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::SetWaveTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "SetWaveTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.SetWaveProfile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPDA_FluxWaveProfile_C*           Profile                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::SetWaveProfile(class UPDA_FluxWaveProfile_C* Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "SetWaveProfile");

	Params::BP_FluxOceanWave_C_SetWaveProfile Parms{};

	Parms.Profile = Profile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.SetNiagaraData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                System                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    RequreWave                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::SetNiagaraData(class UNiagaraComponent* System, bool RequreWave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "SetNiagaraData");

	Params::BP_FluxOceanWave_C_SetNiagaraData Parms{};

	Parms.System = System;
	Parms.RequreWave = RequreWave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "ReceiveTick");

	Params::BP_FluxOceanWave_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FluxOceanWave_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorUpdateLoop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::OnEditorUpdateLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorUpdateLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorStopSimulation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::OnEditorStopSimulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorStopSimulation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorShowSimulation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::OnEditorShowSimulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorShowSimulation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorSelectionChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::OnEditorSelectionChanged(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorSelectionChanged");

	Params::BP_FluxOceanWave_C_OnEditorSelectionChanged Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorRestartSimulation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::OnEditorRestartSimulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorRestartSimulation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorPostLoad
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::OnEditorPostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorPostLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorModifierChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::OnEditorModifierChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorModifierChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.OnEditorIterateSimulation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Iterations                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::OnEditorIterateSimulation(int32 Iterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "OnEditorIterateSimulation");

	Params::BP_FluxOceanWave_C_OnEditorIterateSimulation Parms{};

	Parms.Iterations = Iterations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.InitializeMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ApplyToSurface                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::InitializeMaterials(bool ApplyToSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "InitializeMaterials");

	Params::BP_FluxOceanWave_C_InitializeMaterials Parms{};

	Parms.ApplyToSurface = ApplyToSurface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.InitializeGenerator
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::InitializeGenerator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "InitializeGenerator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.InitializeEditor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::InitializeEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "InitializeEditor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.GetWaveTextureMaterials
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>*MaterialInstances                                      (Parm, OutParm)

void ABP_FluxOceanWave_C::GetWaveTextureMaterials(TArray<class UMaterialInstanceDynamic*>* MaterialInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "GetWaveTextureMaterials");

	Params::BP_FluxOceanWave_C_GetWaveTextureMaterials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaterialInstances != nullptr)
		*MaterialInstances = std::move(Parms.MaterialInstances);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.ExecuteUbergraph_BP_FluxOceanWave
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::ExecuteUbergraph_BP_FluxOceanWave(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "ExecuteUbergraph_BP_FluxOceanWave");

	Params::BP_FluxOceanWave_C_ExecuteUbergraph_BP_FluxOceanWave Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.CanRenderWave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanRender                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FluxOceanWave_C::CanRenderWave(bool* CanRender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "CanRenderWave");

	Params::BP_FluxOceanWave_C_CanRenderWave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanRender != nullptr)
		*CanRender = Parms.CanRender;
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.ApplyToSurfaces
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FluxOceanWave_C::ApplyToSurfaces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "ApplyToSurfaces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.SetMaterialData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>&Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_FluxOceanWave_C::SetMaterialData(TArray<class UMaterialInstanceDynamic*>& Materials) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "SetMaterialData");

	Params::BP_FluxOceanWave_C_SetMaterialData Parms{};

	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.GetSurfaceHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ABP_FluxOceanWave_C::GetSurfaceHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "GetSurfaceHeight");

	Params::BP_FluxOceanWave_C_GetSurfaceHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FluxOceanWave.BP_FluxOceanWave_C.ExportWaveTexture
// (Private, BlueprintCallable, BlueprintEvent, Const)

void ABP_FluxOceanWave_C::ExportWaveTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxOceanWave_C", "ExportWaveTexture");

	UObject::ProcessEvent(Func, nullptr);
}

}

