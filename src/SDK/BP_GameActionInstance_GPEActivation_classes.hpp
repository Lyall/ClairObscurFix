#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_GPEActivation

#include "Basic.hpp"

#include "SandFall_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameActionInstance_GPEActivation.BP_GameActionInstance_GPEActivation_C
// 0x0010 (0x0050 - 0x0040)
class UBP_GameActionInstance_GPEActivation_C final : public UGameActionInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0040(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         NumberOfGPEToExecute;                              // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfGPEExecuted;                               // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteGameAction(const class APlayerController* Controller);
	void ExecuteUbergraph_BP_GameActionInstance_GPEActivation(int32 EntryPoint);
	void OnGPEBehaviorExecuted();
	void ProcessGPEsActivations(const class APlayerController* Controller);
	void ProcessGPEsDeactivations(const class APlayerController* Controller);
	void UpdateGPECount();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameActionInstance_GPEActivation_C">();
	}
	static class UBP_GameActionInstance_GPEActivation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GameActionInstance_GPEActivation_C>();
	}
};
static_assert(alignof(UBP_GameActionInstance_GPEActivation_C) == 0x000008, "Wrong alignment on UBP_GameActionInstance_GPEActivation_C");
static_assert(sizeof(UBP_GameActionInstance_GPEActivation_C) == 0x000050, "Wrong size on UBP_GameActionInstance_GPEActivation_C");
static_assert(offsetof(UBP_GameActionInstance_GPEActivation_C, UberGraphFrame) == 0x000040, "Member 'UBP_GameActionInstance_GPEActivation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GameActionInstance_GPEActivation_C, NumberOfGPEToExecute) == 0x000048, "Member 'UBP_GameActionInstance_GPEActivation_C::NumberOfGPEToExecute' has a wrong offset!");
static_assert(offsetof(UBP_GameActionInstance_GPEActivation_C, NumberOfGPEExecuted) == 0x00004C, "Member 'UBP_GameActionInstance_GPEActivation_C::NumberOfGPEExecuted' has a wrong offset!");

}

