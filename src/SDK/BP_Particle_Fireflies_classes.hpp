#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Particle_Fireflies

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Particle_Fireflies.BP_Particle_Fireflies_C
// 0x0098 (0x0328 - 0x0290)
class ABP_Particle_Fireflies_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_amount;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_spawn_radius;                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Size;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Fireflies_Color;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_emissive;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_lifetime_Increase;                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Turbulence_X;                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Turbulence_Y;                            // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Turbulence_Z;                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Turbulence_Speed_X;                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Turbulence_Speed_Y;                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Turbulence_Speed_Z;                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Light_Intensity;                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fireflies_Light_Radius;                            // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Particle_Fireflies(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Particle_Fireflies_C">();
	}
	static class ABP_Particle_Fireflies_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Particle_Fireflies_C>();
	}
};
static_assert(alignof(ABP_Particle_Fireflies_C) == 0x000008, "Wrong alignment on ABP_Particle_Fireflies_C");
static_assert(sizeof(ABP_Particle_Fireflies_C) == 0x000328, "Wrong size on ABP_Particle_Fireflies_C");
static_assert(offsetof(ABP_Particle_Fireflies_C, UberGraphFrame) == 0x000290, "Member 'ABP_Particle_Fireflies_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Sphere) == 0x000298, "Member 'ABP_Particle_Fireflies_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Billboard) == 0x0002A0, "Member 'ABP_Particle_Fireflies_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, ParticleSystem) == 0x0002A8, "Member 'ABP_Particle_Fireflies_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_amount) == 0x0002B0, "Member 'ABP_Particle_Fireflies_C::Fireflies_amount' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_spawn_radius) == 0x0002B8, "Member 'ABP_Particle_Fireflies_C::Fireflies_spawn_radius' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Size) == 0x0002C0, "Member 'ABP_Particle_Fireflies_C::Fireflies_Size' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Color) == 0x0002C8, "Member 'ABP_Particle_Fireflies_C::Fireflies_Color' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_emissive) == 0x0002D8, "Member 'ABP_Particle_Fireflies_C::Fireflies_emissive' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_lifetime_Increase) == 0x0002E0, "Member 'ABP_Particle_Fireflies_C::Fireflies_lifetime_Increase' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Turbulence_X) == 0x0002E8, "Member 'ABP_Particle_Fireflies_C::Fireflies_Turbulence_X' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Turbulence_Y) == 0x0002F0, "Member 'ABP_Particle_Fireflies_C::Fireflies_Turbulence_Y' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Turbulence_Z) == 0x0002F8, "Member 'ABP_Particle_Fireflies_C::Fireflies_Turbulence_Z' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Turbulence_Speed_X) == 0x000300, "Member 'ABP_Particle_Fireflies_C::Fireflies_Turbulence_Speed_X' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Turbulence_Speed_Y) == 0x000308, "Member 'ABP_Particle_Fireflies_C::Fireflies_Turbulence_Speed_Y' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Turbulence_Speed_Z) == 0x000310, "Member 'ABP_Particle_Fireflies_C::Fireflies_Turbulence_Speed_Z' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Light_Intensity) == 0x000318, "Member 'ABP_Particle_Fireflies_C::Fireflies_Light_Intensity' has a wrong offset!");
static_assert(offsetof(ABP_Particle_Fireflies_C, Fireflies_Light_Radius) == 0x000320, "Member 'ABP_Particle_Fireflies_C::Fireflies_Light_Radius' has a wrong offset!");

}

