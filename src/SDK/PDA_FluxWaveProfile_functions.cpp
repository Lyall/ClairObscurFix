#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxWaveProfile

#include "Basic.hpp"

#include "PDA_FluxWaveProfile_classes.hpp"
#include "PDA_FluxWaveProfile_parameters.hpp"


namespace SDK
{

// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.SetWaveProfileData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         WaveProfilesForward                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         WaveProfilesInverse                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              WaveProfileDecode_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Frames_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WaveWidth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WaveHeight_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxWaveProfile_C::SetWaveProfileData(class UTexture* WaveProfilesForward, class UTexture* WaveProfilesInverse, const struct FLinearColor& WaveProfileDecode_0, int32 Frames_0, int32 WaveWidth, int32 WaveHeight_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "SetWaveProfileData");

	Params::PDA_FluxWaveProfile_C_SetWaveProfileData Parms{};

	Parms.WaveProfilesForward = WaveProfilesForward;
	Parms.WaveProfilesInverse = WaveProfilesInverse;
	Parms.WaveProfileDecode_0 = std::move(WaveProfileDecode_0);
	Parms.Frames_0 = Frames_0;
	Parms.WaveWidth = WaveWidth;
	Parms.WaveHeight_0 = WaveHeight_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.GetExternalReferences
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UTexture*>*                Objects                                                (Parm, OutParm)

void UPDA_FluxWaveProfile_C::GetExternalReferences(TArray<class UTexture*>* Objects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "GetExternalReferences");

	Params::PDA_FluxWaveProfile_C_GetExternalReferences Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Objects != nullptr)
		*Objects = std::move(Parms.Objects);
}


// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.ExecuteUbergraph_PDA_FluxWaveProfile
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxWaveProfile_C::ExecuteUbergraph_PDA_FluxWaveProfile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "ExecuteUbergraph_PDA_FluxWaveProfile");

	Params::PDA_FluxWaveProfile_C_ExecuteUbergraph_PDA_FluxWaveProfile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.CopyPropertiesToObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Destination                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxWaveProfile_C::CopyPropertiesToObject(class UObject* Destination, bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "CopyPropertiesToObject");

	Params::PDA_FluxWaveProfile_C_CopyPropertiesToObject Parms{};

	Parms.Destination = Destination;

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.ClearExternalReferences
// (Public, BlueprintCallable, BlueprintEvent)

void UPDA_FluxWaveProfile_C::ClearExternalReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "ClearExternalReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.ApplyWaveProfileNiagaraData
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UNiagaraComponent*                NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxWaveProfile_C::ApplyWaveProfileNiagaraData(class UNiagaraComponent* NiagaraSystem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "ApplyWaveProfileNiagaraData");

	Params::PDA_FluxWaveProfile_C_ApplyWaveProfileNiagaraData Parms{};

	Parms.NiagaraSystem = NiagaraSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxWaveProfile.PDA_FluxWaveProfile_C.ApplyWaveProfileMaterialData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>&Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UPDA_FluxWaveProfile_C::ApplyWaveProfileMaterialData(TArray<class UMaterialInstanceDynamic*>& Materials) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxWaveProfile_C", "ApplyWaveProfileMaterialData");

	Params::PDA_FluxWaveProfile_C_ApplyWaveProfileMaterialData Parms{};

	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}

}

