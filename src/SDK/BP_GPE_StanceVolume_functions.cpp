#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_StanceVolume

#include "Basic.hpp"

#include "BP_GPE_StanceVolume_classes.hpp"
#include "BP_GPE_StanceVolume_parameters.hpp"


namespace SDK
{

// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_GPE_StanceVolume_C::BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_GPE_StanceVolume_C_BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_GPE_StanceVolume_C_BndEvt__BP_GPE_StanceVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.ChangeStanceForALSBaseCharacter
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALSBaseCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::ChangeStanceForALSBaseCharacter(class AALSBaseCharacter* Character, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "ChangeStanceForALSBaseCharacter");

	Params::BP_GPE_StanceVolume_C_ChangeStanceForALSBaseCharacter Parms{};

	Parms.Character = Character;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.ChangeStanceForCharacterWorld
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       CharacterWorld                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::ChangeStanceForCharacterWorld(class ABP_jRPG_Character_World_C* CharacterWorld, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "ChangeStanceForCharacterWorld");

	Params::BP_GPE_StanceVolume_C_ChangeStanceForCharacterWorld Parms{};

	Parms.CharacterWorld = CharacterWorld;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.ExecuteUbergraph_BP_GPE_StanceVolume
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::ExecuteUbergraph_BP_GPE_StanceVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "ExecuteUbergraph_BP_GPE_StanceVolume");

	Params::BP_GPE_StanceVolume_C_ExecuteUbergraph_BP_GPE_StanceVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.SetALSCharacterToCrouching
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALSBaseCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::SetALSCharacterToCrouching(class AALSBaseCharacter* Character, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "SetALSCharacterToCrouching");

	Params::BP_GPE_StanceVolume_C_SetALSCharacterToCrouching Parms{};

	Parms.Character = Character;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.SetALSCharacterToStanding
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALSBaseCharacter*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::SetALSCharacterToStanding(class AALSBaseCharacter* Character, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "SetALSCharacterToStanding");

	Params::BP_GPE_StanceVolume_C_SetALSCharacterToStanding Parms{};

	Parms.Character = Character;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.SetCharacterWorldToStanceCrouching
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       CharacterWorld                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::SetCharacterWorldToStanceCrouching(class ABP_jRPG_Character_World_C* CharacterWorld, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "SetCharacterWorldToStanceCrouching");

	Params::BP_GPE_StanceVolume_C_SetCharacterWorldToStanceCrouching Parms{};

	Parms.CharacterWorld = CharacterWorld;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.SetCharacterWorldToStanceStanding
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       CharacterWorld                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GPE_StanceVolume_C::SetCharacterWorldToStanceStanding(class ABP_jRPG_Character_World_C* CharacterWorld, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "SetCharacterWorldToStanceStanding");

	Params::BP_GPE_StanceVolume_C_SetCharacterWorldToStanceStanding Parms{};

	Parms.CharacterWorld = CharacterWorld;
	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GPE_StanceVolume.BP_GPE_StanceVolume_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GPE_StanceVolume_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GPE_StanceVolume_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

