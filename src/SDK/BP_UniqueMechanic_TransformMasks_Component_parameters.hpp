#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueMechanic_TransformMasks_Component

#include "Basic.hpp"

#include "E_Transform_Masks_Mechanic_structs.hpp"
#include "EBattleContext_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.Achievement_HasCastOverchargeSkill
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill final
{
public:
	class UBP_SkillState_C*                       SkillState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill) == 0x000008, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill, SkillState) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_Achievement_HasCastOverchargeSkill::SkillState' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.Achievement_UnlockMonocoWheel
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel final
{
public:
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel) == 0x000018, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel, CallFunc_GetAchievementManager_ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel, Temp_int_Variable) == 0x00000C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_Achievement_UnlockMonocoWheel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.AddMeter
// 0x001C (0x001C - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_AddMeter final
{
public:
	int32                                         MeterToAdd;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateUI_Instantly_;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_rawMeterToAddBeforeModulo;                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter) == 0x000004, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_AddMeter");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter) == 0x00001C, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_AddMeter");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, MeterToAdd) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::MeterToAdd' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, UpdateUI_Instantly_) == 0x000004, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::UpdateUI_Instantly_' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, Reason) == 0x000005, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, local_rawMeterToAddBeforeModulo) == 0x000008, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::local_rawMeterToAddBeforeModulo' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeter, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeter::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.AddMeterFromSkill
// 0x0108 (0x0108 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill final
{
public:
	class ABP_Battle_SkillScript_C*               SkillScript;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_FindSkillComponentsByClass_Array;         // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillDataComponent_MaskMechanic_C*  K2Node_DynamicCast_AsBP_Skill_Data_Component_Mask_Mechanic; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill) == 0x000108, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, SkillScript) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::SkillScript' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_FindSkillComponentsByClass_Array) == 0x000060, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_FindSkillComponentsByClass_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000080, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, K2Node_DynamicCast_AsBP_Skill_Data_Component_Mask_Mechanic) == 0x000088, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::K2Node_DynamicCast_AsBP_Skill_Data_Component_Mask_Mechanic' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_AddMeterFromSkill::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.BuildInversedMaskMap
// 0x00A8 (0x00A8 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap final
{
public:
	TMap<int32, E_Transform_Masks_Mechanic>       NewParam;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_Transform_Masks_Mechanic                    local_currentMask;                                 // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewLocalVar;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    CallFunc_Map_Find_Value;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    CallFunc_Map_Find_Value_1;                         // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap) == 0x0000A8, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, NewParam) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::NewParam' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, local_currentMask) == 0x000050, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::local_currentMask' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, NewLocalVar) == 0x000054, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, Temp_int_Variable) == 0x000080, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Array_Get_Item) == 0x000084, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Map_Find_Value) == 0x000088, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Map_Find_ReturnValue) == 0x000089, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Map_Find_Value_1) == 0x00008A, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Map_Find_ReturnValue_1) == 0x00008B, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000091, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_BuildInversedMaskMap::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.CreatePortraitWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget final
{
public:
	class UUserWidget*                            CreatedUserWidget;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_MaskWidget_C*                      CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget) == 0x000020, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget, CreatedUserWidget) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget::CreatedUserWidget' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget, SlotIndex) == 0x000008, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_CreatePortraitWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component
// 0x0088 (0x0088 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UniqueMechanic_TransformMasks_C*   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_SkillState_C* SkillState)> K2Node_CreateDelegate_OutputDelegate_2;      // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       K2Node_CustomEvent_SkillState;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillOvercharged_IsOvercharged;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAchievementUnlocked_ReturnValue;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component) == 0x000088, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, EntryPoint) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000010, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000060, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_CustomEvent_SkillState) == 0x000068, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_CustomEvent_SkillState' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_GetAchievementManager_ReturnValue) == 0x000070, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_IsSkillOvercharged_IsOvercharged) == 0x000078, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_IsSkillOvercharged_IsOvercharged' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_IsAchievementUnlocked_ReturnValue) == 0x00007A, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_IsAchievementUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_Not_PreBool_ReturnValue) == 0x00007B, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, K2Node_Event_EndPlayReason) == 0x000080, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ExecuteUbergraph_BP_UniqueMechanic_TransformMasks_Component::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.GetMaskList
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList final
{
public:
	TArray<E_Transform_Masks_Mechanic>            MaskList_0;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList) == 0x000010, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList, MaskList_0) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_GetMaskList::MaskList_0' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.GetMaskMap
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap final
{
public:
	TMap<int32, E_Transform_Masks_Mechanic>       Mask_Map_0;                                        // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap) == 0x000050, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap, Mask_Map_0) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_GetMaskMap::Mask_Map_0' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.GetMaxMeter
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter final
{
public:
	int32                                         MaxMeter_0;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter) == 0x000004, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter) == 0x000004, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter, MaxMeter_0) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_GetMaxMeter::MaxMeter_0' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.GetStartingPosition
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition final
{
public:
	int32                                         StartingPosition;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition) == 0x000004, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition) == 0x000004, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition, StartingPosition) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_GetStartingPosition::StartingPosition' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.OverrideAddMeter
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter) == 0x000004, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter) == 0x000004, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter, NewValue) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideAddMeter::NewValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.OverrideCurrentMask
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask final
{
public:
	E_Transform_Masks_Mechanic                    NewMask;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask) == 0x000004, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask) == 0x000008, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask, NewMask) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask::NewMask' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMask::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.OverrideCurrentMeter
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter) == 0x000004, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter) == 0x000004, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter, NewValue) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideCurrentMeter::NewValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.OverrideMaskList
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList final
{
public:
	TArray<E_Transform_Masks_Mechanic>            NewMaskList;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList) == 0x000018, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList, NewMaskList) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList::NewMaskList' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList, CallFunc_Array_IsEmpty_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskList::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.OverrideMaskMap
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap final
{
public:
	TMap<int32, E_Transform_Masks_Mechanic>       NewMaskMap;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap) == 0x000050, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap, NewMaskMap) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_OverrideMaskMap::NewMaskMap' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_UniqueMechanic_TransformMasks_Component.BP_UniqueMechanic_TransformMasks_Component_C.UpdateCurrentMask
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    CallFunc_Array_Get_Item;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask) == 0x000008, "Wrong alignment on BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask");
static_assert(sizeof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask) == 0x000018, "Wrong size on BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000008, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask, CallFunc_Array_Get_Item) == 0x000012, "Member 'BP_UniqueMechanic_TransformMasks_Component_C_UpdateCurrentMask::CallFunc_Array_Get_Item' has a wrong offset!");

}

