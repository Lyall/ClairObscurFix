#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameAction_GPEActivation

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "BP_PDT_GameAction_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameAction_GPEActivation.BP_GameAction_GPEActivation_C
// 0x0028 (0x0058 - 0x0030)
class UBP_GameAction_GPEActivation_C final : public UBP_PDT_GameAction_C
{
public:
	struct FGPEInterfacesSoftReferences           GameplayElementsToActivate;                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	struct FGPEInterfacesSoftReferences           GameplayElementsToDeactivate;                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          InverseActivationAfterExecution;                   // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitForBehaviorExecution;                          // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	TSubclassOf<class UGameActionInstance> GetInstanceClass();
	void ValidateGameAction(TArray<class FText>& ErrorMessages, class FString& PropertyPath, bool& ExploreAssetChildren);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameAction_GPEActivation_C">();
	}
	static class UBP_GameAction_GPEActivation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GameAction_GPEActivation_C>();
	}
};
static_assert(alignof(UBP_GameAction_GPEActivation_C) == 0x000008, "Wrong alignment on UBP_GameAction_GPEActivation_C");
static_assert(sizeof(UBP_GameAction_GPEActivation_C) == 0x000058, "Wrong size on UBP_GameAction_GPEActivation_C");
static_assert(offsetof(UBP_GameAction_GPEActivation_C, GameplayElementsToActivate) == 0x000030, "Member 'UBP_GameAction_GPEActivation_C::GameplayElementsToActivate' has a wrong offset!");
static_assert(offsetof(UBP_GameAction_GPEActivation_C, GameplayElementsToDeactivate) == 0x000040, "Member 'UBP_GameAction_GPEActivation_C::GameplayElementsToDeactivate' has a wrong offset!");
static_assert(offsetof(UBP_GameAction_GPEActivation_C, InverseActivationAfterExecution) == 0x000050, "Member 'UBP_GameAction_GPEActivation_C::InverseActivationAfterExecution' has a wrong offset!");
static_assert(offsetof(UBP_GameAction_GPEActivation_C, WaitForBehaviorExecution) == 0x000051, "Member 'UBP_GameAction_GPEActivation_C::WaitForBehaviorExecution' has a wrong offset!");

}

