#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Spline_Fences

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Spline_Fences.BP_Spline_Fences_C
// 0x0028 (0x02B8 - 0x0290)
class ABP_Spline_Fences_C final : public AActor
{
public:
	class USplineComponent*                       Spline;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Mesh_Fences;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCollisionNeeded;                                 // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WPODisableDistance;                                // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Spline_Fences_C">();
	}
	static class ABP_Spline_Fences_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Spline_Fences_C>();
	}
};
static_assert(alignof(ABP_Spline_Fences_C) == 0x000008, "Wrong alignment on ABP_Spline_Fences_C");
static_assert(sizeof(ABP_Spline_Fences_C) == 0x0002B8, "Wrong size on ABP_Spline_Fences_C");
static_assert(offsetof(ABP_Spline_Fences_C, Spline) == 0x000290, "Member 'ABP_Spline_Fences_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_Spline_Fences_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_Spline_Fences_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Spline_Fences_C, Length) == 0x0002A0, "Member 'ABP_Spline_Fences_C::Length' has a wrong offset!");
static_assert(offsetof(ABP_Spline_Fences_C, Mesh_Fences) == 0x0002A8, "Member 'ABP_Spline_Fences_C::Mesh_Fences' has a wrong offset!");
static_assert(offsetof(ABP_Spline_Fences_C, IsCollisionNeeded) == 0x0002B0, "Member 'ABP_Spline_Fences_C::IsCollisionNeeded' has a wrong offset!");
static_assert(offsetof(ABP_Spline_Fences_C, WPODisableDistance) == 0x0002B4, "Member 'ABP_Spline_Fences_C::WPODisableDistance' has a wrong offset!");

}

