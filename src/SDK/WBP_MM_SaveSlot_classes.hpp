#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MM_SaveSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MM_SaveSlot.WBP_MM_SaveSlot_C
// 0x0068 (0x0370 - 0x0308)
class UWBP_MM_SaveSlot_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_BaseButton_C*                      BaseButton;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDynamicEntryBox*                       CharactersDynamicEntryBox;                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DateText;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       EmptySlotText;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FinishedGameCount_C*               FinishedGameCount;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       FinishedGameCountSeparator;                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MM_LevelIcon_C*                    LevelImage;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    LevelTitle;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlaytimeText;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             SlotGrid;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_SaveSlotViewItem_C* SaveSlotItem, const struct FVector2D& AbsolutePos)> OnSaveItemNavigated; // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void SetSlotEnabled(bool IsEnabled);
	void SetEmptyState(bool IsEmpty);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void LoadSaveEntryData(class UBP_SaveSlotViewItem_C* SaveSlotItem);
	void GenerateCharacterMarkers(TArray<struct FS_jRPG_PartySlot>& Party);
	void ExecuteUbergraph_WBP_MM_SaveSlot(int32 EntryPoint);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void BndEvt__WBP_MM_SaveSlot_BaseButton_K2Node_ComponentBoundEvent_1_OnButtonBaseFocused__DelegateSignature(class UCommonButtonBase* Button);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MM_SaveSlot_C">();
	}
	static class UWBP_MM_SaveSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MM_SaveSlot_C>();
	}
};
static_assert(alignof(UWBP_MM_SaveSlot_C) == 0x000008, "Wrong alignment on UWBP_MM_SaveSlot_C");
static_assert(sizeof(UWBP_MM_SaveSlot_C) == 0x000370, "Wrong size on UWBP_MM_SaveSlot_C");
static_assert(offsetof(UWBP_MM_SaveSlot_C, UberGraphFrame) == 0x000308, "Member 'UWBP_MM_SaveSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, BaseButton) == 0x000310, "Member 'UWBP_MM_SaveSlot_C::BaseButton' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, CharactersDynamicEntryBox) == 0x000318, "Member 'UWBP_MM_SaveSlot_C::CharactersDynamicEntryBox' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, DateText) == 0x000320, "Member 'UWBP_MM_SaveSlot_C::DateText' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, EmptySlotText) == 0x000328, "Member 'UWBP_MM_SaveSlot_C::EmptySlotText' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, FinishedGameCount) == 0x000330, "Member 'UWBP_MM_SaveSlot_C::FinishedGameCount' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, FinishedGameCountSeparator) == 0x000338, "Member 'UWBP_MM_SaveSlot_C::FinishedGameCountSeparator' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, LevelImage) == 0x000340, "Member 'UWBP_MM_SaveSlot_C::LevelImage' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, LevelTitle) == 0x000348, "Member 'UWBP_MM_SaveSlot_C::LevelTitle' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, PlaytimeText) == 0x000350, "Member 'UWBP_MM_SaveSlot_C::PlaytimeText' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, SlotGrid) == 0x000358, "Member 'UWBP_MM_SaveSlot_C::SlotGrid' has a wrong offset!");
static_assert(offsetof(UWBP_MM_SaveSlot_C, OnSaveItemNavigated) == 0x000360, "Member 'UWBP_MM_SaveSlot_C::OnSaveItemNavigated' has a wrong offset!");

}

