#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponSkin_Sciel_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_WeaponSkin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WeaponSkin_Sciel_Base.BP_WeaponSkin_Sciel_Base_C
// 0x0058 (0x04D0 - 0x0478)
class ABP_WeaponSkin_Sciel_Base_C final : public ABP_WeaponSkin_C
{
public:
	class UNiagaraComponent*                      FX_CardState;                                      // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_L1;                                          // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_R2;                                          // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_R5;                                          // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_R4;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_L;                                           // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_R3;                                          // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CardColor;                                         // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CardEmissiveColor;                                 // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetAllTrailsOnWeaponL(TArray<class UNiagaraComponent*>* TrailsArrayL);
	void GetAllTrailsOnWeaponR(TArray<class UNiagaraComponent*>* TrailsArrayR);
	void GetAllWeaponRParts(TArray<class UMeshComponent*>* MeshComponentR);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WeaponSkin_Sciel_Base_C">();
	}
	static class ABP_WeaponSkin_Sciel_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WeaponSkin_Sciel_Base_C>();
	}
};
static_assert(alignof(ABP_WeaponSkin_Sciel_Base_C) == 0x000008, "Wrong alignment on ABP_WeaponSkin_Sciel_Base_C");
static_assert(sizeof(ABP_WeaponSkin_Sciel_Base_C) == 0x0004D0, "Wrong size on ABP_WeaponSkin_Sciel_Base_C");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, FX_CardState) == 0x000478, "Member 'ABP_WeaponSkin_Sciel_Base_C::FX_CardState' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, Trail_L1) == 0x000480, "Member 'ABP_WeaponSkin_Sciel_Base_C::Trail_L1' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, Trail_R2) == 0x000488, "Member 'ABP_WeaponSkin_Sciel_Base_C::Trail_R2' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, Trail_R5) == 0x000490, "Member 'ABP_WeaponSkin_Sciel_Base_C::Trail_R5' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, Trail_R4) == 0x000498, "Member 'ABP_WeaponSkin_Sciel_Base_C::Trail_R4' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, Trail_L) == 0x0004A0, "Member 'ABP_WeaponSkin_Sciel_Base_C::Trail_L' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, Trail_R3) == 0x0004A8, "Member 'ABP_WeaponSkin_Sciel_Base_C::Trail_R3' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, CardColor) == 0x0004B0, "Member 'ABP_WeaponSkin_Sciel_Base_C::CardColor' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Sciel_Base_C, CardEmissiveColor) == 0x0004C0, "Member 'ABP_WeaponSkin_Sciel_Base_C::CardEmissiveColor' has a wrong offset!");

}

