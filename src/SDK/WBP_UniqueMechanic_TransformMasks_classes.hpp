#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UniqueMechanic_TransformMasks

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "UMG_classes.hpp"
#include "E_Transform_Masks_Mechanic_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_UniqueMechanic_TransformMasks.WBP_UniqueMechanic_TransformMasks_C
// 0x0080 (0x0360 - 0x02E0)
class UWBP_UniqueMechanic_TransformMasks_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_TurnStart;                                    // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_MaskWheel_C*                       WBP_MaskWheel;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Name_UniqueMechanics_C*            WBP_Name_UniqueMechanics;                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_UniqueMechanic_TransformMasks_Component_C* TransformMasksMechanicComponent;            // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsAppearing;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_RedMask_TurnStart;                              // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_BlueMask_TurnStart;                             // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_GreenMask_TurnStart;                            // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_PurpleMask_TurnStart;                           // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_GoldMask_TurnStart;                             // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void Appear();
	void Disappear();
	void ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks(int32 EntryPoint);
	void Finished_E4BF4F284A79DC135C88F4870F78BDD0();
	void LoadMasksWheel(TArray<E_Transform_Masks_Mechanic>& MaskList);
	void UpdateTransformUI(E_Transform_Masks_Mechanic Mask, int32 CurrentMeter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_UniqueMechanic_TransformMasks_C">();
	}
	static class UWBP_UniqueMechanic_TransformMasks_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_UniqueMechanic_TransformMasks_C>();
	}
};
static_assert(alignof(UWBP_UniqueMechanic_TransformMasks_C) == 0x000008, "Wrong alignment on UWBP_UniqueMechanic_TransformMasks_C");
static_assert(sizeof(UWBP_UniqueMechanic_TransformMasks_C) == 0x000360, "Wrong size on UWBP_UniqueMechanic_TransformMasks_C");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_UniqueMechanic_TransformMasks_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, Anim_TurnStart) == 0x0002E8, "Member 'UWBP_UniqueMechanic_TransformMasks_C::Anim_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, WBP_MaskWheel) == 0x0002F0, "Member 'UWBP_UniqueMechanic_TransformMasks_C::WBP_MaskWheel' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, WBP_Name_UniqueMechanics) == 0x0002F8, "Member 'UWBP_UniqueMechanic_TransformMasks_C::WBP_Name_UniqueMechanics' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, TransformMasksMechanicComponent) == 0x000300, "Member 'UWBP_UniqueMechanic_TransformMasks_C::TransformMasksMechanicComponent' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, IsAppearing) == 0x000308, "Member 'UWBP_UniqueMechanic_TransformMasks_C::IsAppearing' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, SD_RedMask_TurnStart) == 0x000310, "Member 'UWBP_UniqueMechanic_TransformMasks_C::SD_RedMask_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, SD_BlueMask_TurnStart) == 0x000320, "Member 'UWBP_UniqueMechanic_TransformMasks_C::SD_BlueMask_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, SD_GreenMask_TurnStart) == 0x000330, "Member 'UWBP_UniqueMechanic_TransformMasks_C::SD_GreenMask_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, SD_PurpleMask_TurnStart) == 0x000340, "Member 'UWBP_UniqueMechanic_TransformMasks_C::SD_PurpleMask_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_UniqueMechanic_TransformMasks_C, SD_GoldMask_TurnStart) == 0x000350, "Member 'UWBP_UniqueMechanic_TransformMasks_C::SD_GoldMask_TurnStart' has a wrong offset!");

}

