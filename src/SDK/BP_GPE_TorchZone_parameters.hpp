#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_TorchZone

#include "Basic.hpp"

#include "E_jRPG_CharacterWorldCapability_structs.hpp"
#include "S_jRPG_Character_World_Movement_Data_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GPE_TorchZone.BP_GPE_TorchZone_C.BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_GPE_TorchZone.BP_GPE_TorchZone_C.BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_TorchZone_C_BndEvt__FrostZone_Box_ZoneLimits_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_GPE_TorchZone.BP_GPE_TorchZone_C.ExecuteUbergraph_BP_GPE_TorchZone
// 0x0158 (0x0158 - 0x0000)
struct BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWindDirectionalSource*                 K2Node_DynamicCast_AsWind_Directional_Source;      // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone) == 0x000008, "Wrong alignment on BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone");
static_assert(sizeof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone) == 0x000158, "Wrong size on BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, EntryPoint) == 0x000000, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000140, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_DynamicCast_AsWind_Directional_Source) == 0x000148, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_DynamicCast_AsWind_Directional_Source' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000151, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, CallFunc_IsValid_ReturnValue) == 0x000152, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone, CallFunc_IsValid_ReturnValue_1) == 0x000153, "Member 'BP_GPE_TorchZone_C_ExecuteUbergraph_BP_GPE_TorchZone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GPE_TorchZone.BP_GPE_TorchZone_C.OnPlayerEnteringTorchZone
// 0x0080 (0x0080 - 0x0000)
struct BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Character_World_Movement_Data  K2Node_MakeStruct_S_jRPG_Character_World_Movement_Data; // 0x0020(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_CharacterWorldCapability, bool>   K2Node_MakeMap_Map;                                // 0x0030(0x0050)()
};
static_assert(alignof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone) == 0x000008, "Wrong alignment on BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone");
static_assert(sizeof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone) == 0x000080, "Wrong size on BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, Actor) == 0x000000, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::Actor' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, K2Node_MakeStruct_S_jRPG_Character_World_Movement_Data) == 0x000020, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::K2Node_MakeStruct_S_jRPG_Character_World_Movement_Data' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone, K2Node_MakeMap_Map) == 0x000030, "Member 'BP_GPE_TorchZone_C_OnPlayerEnteringTorchZone::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_GPE_TorchZone.BP_GPE_TorchZone_C.OnPlayerExitingTorchZone
// 0x0078 (0x0078 - 0x0000)
struct BP_GPE_TorchZone_C_OnPlayerExitingTorchZone final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_jRPG_CharacterWorldCapability, bool>   K2Node_MakeMap_Map;                                // 0x0018(0x0050)()
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone) == 0x000008, "Wrong alignment on BP_GPE_TorchZone_C_OnPlayerExitingTorchZone");
static_assert(sizeof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone) == 0x000078, "Wrong size on BP_GPE_TorchZone_C_OnPlayerExitingTorchZone");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone, Actor) == 0x000000, "Member 'BP_GPE_TorchZone_C_OnPlayerExitingTorchZone::Actor' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000008, "Member 'BP_GPE_TorchZone_C_OnPlayerExitingTorchZone::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GPE_TorchZone_C_OnPlayerExitingTorchZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone, K2Node_MakeMap_Map) == 0x000018, "Member 'BP_GPE_TorchZone_C_OnPlayerExitingTorchZone::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone, CallFunc_GetPlayerPawn_ReturnValue) == 0x000068, "Member 'BP_GPE_TorchZone_C_OnPlayerExitingTorchZone::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_TorchZone_C_OnPlayerExitingTorchZone, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'BP_GPE_TorchZone_C_OnPlayerExitingTorchZone::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

