#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_ManorInsideDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_jRPG_InteractionObject_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GPE_ManorInsideDoor.BP_GPE_ManorInsideDoor_C
// 0x00B0 (0x03A0 - 0x02F0)
class ABP_GPE_ManorInsideDoor_C final : public ABP_jRPG_InteractionObject_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_GPE_ManorInsideDoor_C;           // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCustomNavModifierComponent*            CustomNavModifier;                                 // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box_Overlapping;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door_Left;                                      // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door_Right;                                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door_Frame_AB;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_LerpFloatTrack_0BEE93404D3F4B3806071A80ABF317CC; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_0BEE93404D3F4B3806071A80ABF317CC; // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LeftDoorRotationOpen;                              // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RightDoorRotationOpen;                             // 0x0348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LeftDoorBaseRotation;                              // 0x0360(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RightDoorbaseRotation;                             // 0x0378(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                             AudioDoorOpen;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             AudioDoorLocked;                                   // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GPE_ManorInsideDoor(int32 EntryPoint);
	void OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant);
	void OnObjectInteractionStateLoaded(bool InteractionState);
	void Timeline__EventTrack__EventFunc();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void UpdateLeftDoorRotation(double Alpha);
	void UpdateRightDoorRotation(double Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GPE_ManorInsideDoor_C">();
	}
	static class ABP_GPE_ManorInsideDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GPE_ManorInsideDoor_C>();
	}
};
static_assert(alignof(ABP_GPE_ManorInsideDoor_C) == 0x000008, "Wrong alignment on ABP_GPE_ManorInsideDoor_C");
static_assert(sizeof(ABP_GPE_ManorInsideDoor_C) == 0x0003A0, "Wrong size on ABP_GPE_ManorInsideDoor_C");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, UberGraphFrame_BP_GPE_ManorInsideDoor_C) == 0x0002F0, "Member 'ABP_GPE_ManorInsideDoor_C::UberGraphFrame_BP_GPE_ManorInsideDoor_C' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, CustomNavModifier) == 0x0002F8, "Member 'ABP_GPE_ManorInsideDoor_C::CustomNavModifier' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, Box_Overlapping) == 0x000300, "Member 'ABP_GPE_ManorInsideDoor_C::Box_Overlapping' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, SM_Door_Left) == 0x000308, "Member 'ABP_GPE_ManorInsideDoor_C::SM_Door_Left' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, SM_Door_Right) == 0x000310, "Member 'ABP_GPE_ManorInsideDoor_C::SM_Door_Right' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, SM_Door_Frame_AB) == 0x000318, "Member 'ABP_GPE_ManorInsideDoor_C::SM_Door_Frame_AB' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, Timeline_LerpFloatTrack_0BEE93404D3F4B3806071A80ABF317CC) == 0x000320, "Member 'ABP_GPE_ManorInsideDoor_C::Timeline_LerpFloatTrack_0BEE93404D3F4B3806071A80ABF317CC' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, Timeline__Direction_0BEE93404D3F4B3806071A80ABF317CC) == 0x000324, "Member 'ABP_GPE_ManorInsideDoor_C::Timeline__Direction_0BEE93404D3F4B3806071A80ABF317CC' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, Timeline) == 0x000328, "Member 'ABP_GPE_ManorInsideDoor_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, LeftDoorRotationOpen) == 0x000330, "Member 'ABP_GPE_ManorInsideDoor_C::LeftDoorRotationOpen' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, RightDoorRotationOpen) == 0x000348, "Member 'ABP_GPE_ManorInsideDoor_C::RightDoorRotationOpen' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, LeftDoorBaseRotation) == 0x000360, "Member 'ABP_GPE_ManorInsideDoor_C::LeftDoorBaseRotation' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, RightDoorbaseRotation) == 0x000378, "Member 'ABP_GPE_ManorInsideDoor_C::RightDoorbaseRotation' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, AudioDoorOpen) == 0x000390, "Member 'ABP_GPE_ManorInsideDoor_C::AudioDoorOpen' has a wrong offset!");
static_assert(offsetof(ABP_GPE_ManorInsideDoor_C, AudioDoorLocked) == 0x000398, "Member 'ABP_GPE_ManorInsideDoor_C::AudioDoorLocked' has a wrong offset!");

}

