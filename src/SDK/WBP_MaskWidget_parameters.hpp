#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MaskWidget

#include "Basic.hpp"

#include "E_Transform_Masks_Mechanic_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MaskWidget.WBP_MaskWidget_C.ExecuteUbergraph_WBP_MaskWidget
// 0x0050 (0x0050 - 0x0000)
struct WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_Transform_Masks_Mechanic PreviousMask, E_Transform_Masks_Mechanic NewMask, int32 NewMeter)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UniqueMechanic_TransformMasks_Component_C* K2Node_CustomEvent_TransformMaskComponent;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    K2Node_CustomEvent_PreviousMask;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    K2Node_CustomEvent_NewMask;                        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NewMeter;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget) == 0x000008, "Wrong alignment on WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget");
static_assert(sizeof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget) == 0x000050, "Wrong size on WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, EntryPoint) == 0x000000, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000008, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_GetNiagaraComponent_ReturnValue_1) == 0x000020, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_GetNiagaraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, K2Node_CustomEvent_TransformMaskComponent) == 0x000030, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::K2Node_CustomEvent_TransformMaskComponent' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, K2Node_CustomEvent_PreviousMask) == 0x000040, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::K2Node_CustomEvent_PreviousMask' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, K2Node_CustomEvent_NewMask) == 0x000041, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::K2Node_CustomEvent_NewMask' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, K2Node_CustomEvent_NewMeter) == 0x000044, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::K2Node_CustomEvent_NewMeter' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000048, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00004C, "Member 'WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.GetMaskColor
// 0x004C (0x004C - 0x0000)
struct WBP_MaskWidget_C_GetMaskColor final
{
public:
	E_Transform_Masks_Mechanic                    Mask;                                              // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_GetMaskColor) == 0x000004, "Wrong alignment on WBP_MaskWidget_C_GetMaskColor");
static_assert(sizeof(WBP_MaskWidget_C_GetMaskColor) == 0x00004C, "Wrong size on WBP_MaskWidget_C_GetMaskColor");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, Mask) == 0x000000, "Member 'WBP_MaskWidget_C_GetMaskColor::Mask' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, Color) == 0x000004, "Member 'WBP_MaskWidget_C_GetMaskColor::Color' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, Temp_bool_Variable) == 0x000014, "Member 'WBP_MaskWidget_C_GetMaskColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, Temp_struct_Variable) == 0x000018, "Member 'WBP_MaskWidget_C_GetMaskColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, CallFunc_Map_Find_Value) == 0x000028, "Member 'WBP_MaskWidget_C_GetMaskColor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'WBP_MaskWidget_C_GetMaskColor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_GetMaskColor, K2Node_Select_Default) == 0x00003C, "Member 'WBP_MaskWidget_C_GetMaskColor::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.OnSetMask
// 0x0008 (0x0008 - 0x0000)
struct WBP_MaskWidget_C_OnSetMask final
{
public:
	E_Transform_Masks_Mechanic                    PreviousMask;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    NewMask;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewMeter;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_OnSetMask) == 0x000004, "Wrong alignment on WBP_MaskWidget_C_OnSetMask");
static_assert(sizeof(WBP_MaskWidget_C_OnSetMask) == 0x000008, "Wrong size on WBP_MaskWidget_C_OnSetMask");
static_assert(offsetof(WBP_MaskWidget_C_OnSetMask, PreviousMask) == 0x000000, "Member 'WBP_MaskWidget_C_OnSetMask::PreviousMask' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_OnSetMask, NewMask) == 0x000001, "Member 'WBP_MaskWidget_C_OnSetMask::NewMask' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_OnSetMask, NewMeter) == 0x000004, "Member 'WBP_MaskWidget_C_OnSetMask::NewMeter' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MaskWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MaskWidget_C_PreConstruct");
static_assert(sizeof(WBP_MaskWidget_C_PreConstruct) == 0x000001, "Wrong size on WBP_MaskWidget_C_PreConstruct");
static_assert(offsetof(WBP_MaskWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MaskWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.SetBrushFromLazyTexture
// 0x0080 (0x0080 - 0x0000)
struct WBP_MaskWidget_C_SetBrushFromLazyTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              InactiveTexture;                                   // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              ActiveTexture;                                     // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsActiveAtStart;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0058(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_SetBrushFromLazyTexture) == 0x000008, "Wrong alignment on WBP_MaskWidget_C_SetBrushFromLazyTexture");
static_assert(sizeof(WBP_MaskWidget_C_SetBrushFromLazyTexture) == 0x000080, "Wrong size on WBP_MaskWidget_C_SetBrushFromLazyTexture");
static_assert(offsetof(WBP_MaskWidget_C_SetBrushFromLazyTexture, InactiveTexture) == 0x000000, "Member 'WBP_MaskWidget_C_SetBrushFromLazyTexture::InactiveTexture' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetBrushFromLazyTexture, ActiveTexture) == 0x000028, "Member 'WBP_MaskWidget_C_SetBrushFromLazyTexture::ActiveTexture' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetBrushFromLazyTexture, IsActiveAtStart) == 0x000050, "Member 'WBP_MaskWidget_C_SetBrushFromLazyTexture::IsActiveAtStart' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetBrushFromLazyTexture, Temp_bool_Variable) == 0x000051, "Member 'WBP_MaskWidget_C_SetBrushFromLazyTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetBrushFromLazyTexture, K2Node_Select_Default) == 0x000058, "Member 'WBP_MaskWidget_C_SetBrushFromLazyTexture::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.SetCurrentMask
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_MaskWidget_C_SetCurrentMask final
{
public:
	E_Transform_Masks_Mechanic                    CurrentMask;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActiveAtStart;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetMaskColor_Color;                       // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value_1;                         // 0x00B0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_SetCurrentMask) == 0x000008, "Wrong alignment on WBP_MaskWidget_C_SetCurrentMask");
static_assert(sizeof(WBP_MaskWidget_C_SetCurrentMask) == 0x0000E0, "Wrong size on WBP_MaskWidget_C_SetCurrentMask");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CurrentMask) == 0x000000, "Member 'WBP_MaskWidget_C_SetCurrentMask::CurrentMask' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, IsActiveAtStart) == 0x000001, "Member 'WBP_MaskWidget_C_SetCurrentMask::IsActiveAtStart' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_real_Variable) == 0x000004, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_GetMaskColor_Color) == 0x00000C, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_GetMaskColor_Color' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_real_Variable_1) == 0x00001C, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000020, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000030, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_bool_Variable) == 0x000040, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, K2Node_Select_Default) == 0x000044, "Member 'WBP_MaskWidget_C_SetCurrentMask::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_real_Variable_2) == 0x000048, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000050, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_GetNiagaraComponent_ReturnValue_1) == 0x000058, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_GetNiagaraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_real_Variable_3) == 0x000060, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_bool_Variable_1) == 0x000064, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_real_Variable_4) == 0x000068, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, K2Node_Select_Default_1) == 0x00006C, "Member 'WBP_MaskWidget_C_SetCurrentMask::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_real_Variable_5) == 0x000070, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, Temp_bool_Variable_2) == 0x000074, "Member 'WBP_MaskWidget_C_SetCurrentMask::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, K2Node_Select_Default_2) == 0x000078, "Member 'WBP_MaskWidget_C_SetCurrentMask::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_Map_Find_Value) == 0x000080, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_Map_Find_Value_1) == 0x0000B0, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_Map_Find_ReturnValue_1) == 0x0000D8, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetCurrentMask, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'WBP_MaskWidget_C_SetCurrentMask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.SetIsActive
// 0x0058 (0x0058 - 0x0000)
struct WBP_MaskWidget_C_SetIsActive final
{
public:
	bool                                          IsActive_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0018(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_SetIsActive) == 0x000008, "Wrong alignment on WBP_MaskWidget_C_SetIsActive");
static_assert(sizeof(WBP_MaskWidget_C_SetIsActive) == 0x000058, "Wrong size on WBP_MaskWidget_C_SetIsActive");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, IsActive_0) == 0x000000, "Member 'WBP_MaskWidget_C_SetIsActive::IsActive_0' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_bool_Variable) == 0x000001, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_byte_Variable) == 0x000002, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, K2Node_Select_Default) == 0x000004, "Member 'WBP_MaskWidget_C_SetIsActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_MaskWidget_C_SetIsActive::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_bool_Variable_1) == 0x000010, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_byte_Variable_2) == 0x000011, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000012, "Member 'WBP_MaskWidget_C_SetIsActive::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, K2Node_Select_Default_1) == 0x000018, "Member 'WBP_MaskWidget_C_SetIsActive::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_byte_Variable_3) == 0x000040, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, CallFunc_PlayAnimation_ReturnValue_1) == 0x000048, "Member 'WBP_MaskWidget_C_SetIsActive::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, Temp_bool_Variable_2) == 0x000050, "Member 'WBP_MaskWidget_C_SetIsActive::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MaskWidget_C_SetIsActive, K2Node_Select_Default_2) == 0x000051, "Member 'WBP_MaskWidget_C_SetIsActive::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_MaskWidget.WBP_MaskWidget_C.SetMaskComponent
// 0x0008 (0x0008 - 0x0000)
struct WBP_MaskWidget_C_SetMaskComponent final
{
public:
	class UBP_UniqueMechanic_TransformMasks_Component_C* TransformMaskComponent_0;                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MaskWidget_C_SetMaskComponent) == 0x000008, "Wrong alignment on WBP_MaskWidget_C_SetMaskComponent");
static_assert(sizeof(WBP_MaskWidget_C_SetMaskComponent) == 0x000008, "Wrong size on WBP_MaskWidget_C_SetMaskComponent");
static_assert(offsetof(WBP_MaskWidget_C_SetMaskComponent, TransformMaskComponent_0) == 0x000000, "Member 'WBP_MaskWidget_C_SetMaskComponent::TransformMaskComponent_0' has a wrong offset!");

}

