#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_FluxSurfacePreset

#include "Basic.hpp"

#include "PDA_FluxSurfacePreset_classes.hpp"
#include "PDA_FluxSurfacePreset_parameters.hpp"


namespace SDK
{

// Function PDA_FluxSurfacePreset.PDA_FluxSurfacePreset_C.SetSurfaceColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>&Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    Postfix                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPDA_FluxSurfacePreset_C::SetSurfaceColor(TArray<class UMaterialInstanceDynamic*>& Materials, const class FString& Postfix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxSurfacePreset_C", "SetSurfaceColor");

	Params::PDA_FluxSurfacePreset_C_SetSurfaceColor Parms{};

	Parms.Materials = std::move(Materials);
	Parms.Postfix = std::move(Postfix);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function PDA_FluxSurfacePreset.PDA_FluxSurfacePreset_C.SetEditorOwner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxSurfacePreset_C::SetEditorOwner(class AActor* Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxSurfacePreset_C", "SetEditorOwner");

	Params::PDA_FluxSurfacePreset_C_SetEditorOwner Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxSurfacePreset.PDA_FluxSurfacePreset_C.LoadFromMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPDA_FluxSurfacePreset_C::LoadFromMaterial(class UMaterialInstanceDynamic* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxSurfacePreset_C", "LoadFromMaterial");

	Params::PDA_FluxSurfacePreset_C_LoadFromMaterial Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PDA_FluxSurfacePreset.PDA_FluxSurfacePreset_C.ApplyToSurfaceMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPDA_FluxSurfacePreset_C::ApplyToSurfaceMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxSurfacePreset_C", "ApplyToSurfaceMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PDA_FluxSurfacePreset.PDA_FluxSurfacePreset_C.ApplyMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>&MaterialInstances                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    Postfix                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPDA_FluxSurfacePreset_C::ApplyMaterial(TArray<class UMaterialInstanceDynamic*>& MaterialInstances, const class FString& Postfix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PDA_FluxSurfacePreset_C", "ApplyMaterial");

	Params::PDA_FluxSurfacePreset_C_ApplyMaterial Parms{};

	Parms.MaterialInstances = std::move(MaterialInstances);
	Parms.Postfix = std::move(Postfix);

	UObject::ProcessEvent(Func, &Parms);

	MaterialInstances = std::move(Parms.MaterialInstances);
}

}

