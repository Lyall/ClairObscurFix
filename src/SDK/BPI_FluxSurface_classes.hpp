#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FluxSurface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_FluxSurface.BPI_FluxSurface_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_FluxSurface_C final
{
public:
	void SpawnSplashAtLocation(const struct FVector& Location, int32 Type);
	void SetStateHeightWetMap(class UTexture* Texture);
	void SetSimulationState(class UPDA_FluxSimulationState_C* State);
	void SetColorPreset(int32 Index_0, class UPDA_FluxSurfacePreset_C* Preset);
	void SetCoastlineState(class UPDA_FluxCoastlineState_C* State);
	void OnGlassMeshChanged();
	void InitializeAllStates();
	void GetColorPreset(int32 Index_0, class UPDA_FluxSurfacePreset_C** Preset);
	void ApplySurfaceNiagaraData(class UNiagaraComponent* ParticleSystem, bool RequiredGround, bool RequiredWave);
	void ApplySurfaceMaterialData(const TArray<class UMaterialInstanceDynamic*>& Materials);
	void ApplyPainter();
	void ApplyMask();
	void ApplyColorProfiles();

	void GetVolumeCollision(class UPrimitiveComponent** Volume) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_FluxSurface_C">();
	}
	static class IBPI_FluxSurface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_FluxSurface_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_FluxSurface_C) == 0x000001, "Wrong alignment on IBPI_FluxSurface_C");
static_assert(sizeof(IBPI_FluxSurface_C) == 0x000001, "Wrong size on IBPI_FluxSurface_C");

}

