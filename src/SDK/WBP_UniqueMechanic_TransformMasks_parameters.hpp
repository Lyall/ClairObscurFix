#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UniqueMechanic_TransformMasks

#include "Basic.hpp"

#include "E_Transform_Masks_Mechanic_structs.hpp"
#include "SandFall_structs.hpp"
#include "S_UniqueMechanic_Transform_Masks_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_UniqueMechanic_TransformMasks.WBP_UniqueMechanic_TransformMasks_C.ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks
// 0x0058 (0x0058 - 0x0000)
struct WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          Temp_struct_Variable;                              // 0x0008(0x0010)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    Temp_byte_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default;                             // 0x0040(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks) == 0x000008, "Wrong alignment on WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks");
static_assert(sizeof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks) == 0x000058, "Wrong size on WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, EntryPoint) == 0x000000, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, Temp_struct_Variable) == 0x000008, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000028, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000030, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, Temp_byte_Variable) == 0x00003A, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, K2Node_Select_Default) == 0x000040, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'WBP_UniqueMechanic_TransformMasks_C_ExecuteUbergraph_WBP_UniqueMechanic_TransformMasks::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_UniqueMechanic_TransformMasks.WBP_UniqueMechanic_TransformMasks_C.LoadMasksWheel
// 0x0010 (0x0010 - 0x0000)
struct WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel final
{
public:
	TArray<E_Transform_Masks_Mechanic>            MaskList;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel) == 0x000008, "Wrong alignment on WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel");
static_assert(sizeof(WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel) == 0x000010, "Wrong size on WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel, MaskList) == 0x000000, "Member 'WBP_UniqueMechanic_TransformMasks_C_LoadMasksWheel::MaskList' has a wrong offset!");

// Function WBP_UniqueMechanic_TransformMasks.WBP_UniqueMechanic_TransformMasks_C.UpdateTransformUI
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI final
{
public:
	E_Transform_Masks_Mechanic                    Mask;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentMeter;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UniqueMechanic_Transform_Masks      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Transform_Masks_Mechanic                    Temp_byte_Variable;                                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00B8(0x0014)()
};
static_assert(alignof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI) == 0x000008, "Wrong alignment on WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI");
static_assert(sizeof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI) == 0x0000D0, "Wrong size on WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Mask) == 0x000000, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Mask' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, CurrentMeter) == 0x000004, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::CurrentMeter' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_struct_Variable) == 0x000008, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_struct_Variable_1) == 0x000030, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_struct_Variable_2) == 0x000064, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_struct_Variable_3) == 0x000074, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_struct_Variable_4) == 0x000084, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_struct_Variable_5) == 0x000094, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, Temp_byte_Variable) == 0x0000A4, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, K2Node_Select_Default) == 0x0000A8, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI, K2Node_MakeStruct_SlateColor) == 0x0000B8, "Member 'WBP_UniqueMechanic_TransformMasks_C_UpdateTransformUI::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

