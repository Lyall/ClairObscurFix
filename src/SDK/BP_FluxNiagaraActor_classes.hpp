#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxNiagaraActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FluxNiagaraActor.BP_FluxNiagaraActor_C
// 0x0098 (0x0328 - 0x0290)
class ABP_FluxNiagaraActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialBillboardComponent*            MaterialBillboard;                                 // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Volume;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VolumeSize;                                        // 0x02B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FVector& position, double Water, const struct FVector& Velocity)> OnWaterEvent; // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        SpawnRate;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReceiveEventFrequency;                             // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DelayedInitialization;                             // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseGroundMap;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 InteractionClass;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractionActor;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          UseInteraction;                                    // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseWaveMap;                                        // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Niagara;                                           // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Translucent_Sort_Priority;                         // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void StartReadback();
	void RestartNiagara();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem_0, const struct FVector& SimulationPositionOffset);
	void ReceiveBeginPlay();
	void OverlapingInteraction();
	void InitializeNiagara(class AActor* SurfaceAbstract);
	void InitializeCollisions();
	void GetWorldSurface(class AActor** SurfaceAbstract);
	void ExecuteUbergraph_BP_FluxNiagaraActor(int32 EntryPoint);
	void BndEvt__BP_FluxNiagara_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_FluxNiagara_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ApplyNiagaraData();
	void AdjustSize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FluxNiagaraActor_C">();
	}
	static class ABP_FluxNiagaraActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FluxNiagaraActor_C>();
	}
};
static_assert(alignof(ABP_FluxNiagaraActor_C) == 0x000008, "Wrong alignment on ABP_FluxNiagaraActor_C");
static_assert(sizeof(ABP_FluxNiagaraActor_C) == 0x000328, "Wrong size on ABP_FluxNiagaraActor_C");
static_assert(offsetof(ABP_FluxNiagaraActor_C, UberGraphFrame) == 0x000290, "Member 'ABP_FluxNiagaraActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, MaterialBillboard) == 0x000298, "Member 'ABP_FluxNiagaraActor_C::MaterialBillboard' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, Volume) == 0x0002A0, "Member 'ABP_FluxNiagaraActor_C::Volume' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, Scene) == 0x0002A8, "Member 'ABP_FluxNiagaraActor_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, VolumeSize) == 0x0002B0, "Member 'ABP_FluxNiagaraActor_C::VolumeSize' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, OnWaterEvent) == 0x0002C8, "Member 'ABP_FluxNiagaraActor_C::OnWaterEvent' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, SpawnRate) == 0x0002D8, "Member 'ABP_FluxNiagaraActor_C::SpawnRate' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, NiagaraSystem) == 0x0002E0, "Member 'ABP_FluxNiagaraActor_C::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, ReceiveEventFrequency) == 0x0002E8, "Member 'ABP_FluxNiagaraActor_C::ReceiveEventFrequency' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, DelayedInitialization) == 0x0002F0, "Member 'ABP_FluxNiagaraActor_C::DelayedInitialization' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, UseGroundMap) == 0x0002F8, "Member 'ABP_FluxNiagaraActor_C::UseGroundMap' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, InteractionClass) == 0x000300, "Member 'ABP_FluxNiagaraActor_C::InteractionClass' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, InteractionActor) == 0x000308, "Member 'ABP_FluxNiagaraActor_C::InteractionActor' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, UseInteraction) == 0x000310, "Member 'ABP_FluxNiagaraActor_C::UseInteraction' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, UseWaveMap) == 0x000311, "Member 'ABP_FluxNiagaraActor_C::UseWaveMap' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, Niagara) == 0x000318, "Member 'ABP_FluxNiagaraActor_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_FluxNiagaraActor_C, Translucent_Sort_Priority) == 0x000320, "Member 'ABP_FluxNiagaraActor_C::Translucent_Sort_Priority' has a wrong offset!");

}

