#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxSurface

#include "Basic.hpp"

#include "BS_FluxSplashData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BS_MeshDefinition_structs.hpp"
#include "Engine_structs.hpp"
#include "BE_UnderwaterVisibility_structs.hpp"


namespace SDK::Params
{

// Function BP_FluxSurface.BP_FluxSurface_C.UserConstructionScript
// 0x0068 (0x0068 - 0x0000)
struct BP_FluxSurface_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBE_UnderwaterVisibility                      Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASkyLight*>                      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	EBE_UnderwaterVisibility                      Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyLight*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ASkyLight>               CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_FluxSurface_C_UserConstructionScript");
static_assert(sizeof(BP_FluxSurface_C_UserConstructionScript) == 0x000068, "Wrong size on BP_FluxSurface_C_UserConstructionScript");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000001, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_2) == 0x000002, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_byte_Variable) == 0x000003, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_3) == 0x000004, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_4) == 0x000005, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_5) == 0x000006, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_6) == 0x000007, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000008, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_bool_Variable_7) == 0x00000A, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, K2Node_Select_Default) == 0x00000B, "Member 'BP_FluxSurface_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, Temp_byte_Variable_1) == 0x000020, "Member 'BP_FluxSurface_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000030, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000058, "Member 'BP_FluxSurface_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_FluxSurface_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.UpdateHeightMap
// 0x0020 (0x0020 - 0x0000)
struct BP_FluxSurface_C_UpdateHeightMap final
{
public:
	class UTexture*                               Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_UpdateHeightMap) == 0x000008, "Wrong alignment on BP_FluxSurface_C_UpdateHeightMap");
static_assert(sizeof(BP_FluxSurface_C_UpdateHeightMap) == 0x000020, "Wrong size on BP_FluxSurface_C_UpdateHeightMap");
static_assert(offsetof(BP_FluxSurface_C_UpdateHeightMap, Value) == 0x000000, "Member 'BP_FluxSurface_C_UpdateHeightMap::Value' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateHeightMap, Temp_int_Variable) == 0x000008, "Member 'BP_FluxSurface_C_UpdateHeightMap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateHeightMap, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FluxSurface_C_UpdateHeightMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateHeightMap, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_FluxSurface_C_UpdateHeightMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateHeightMap, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_FluxSurface_C_UpdateHeightMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateHeightMap, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FluxSurface_C_UpdateHeightMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.UpdateCamera
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FluxSurface_C_UpdateCamera final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AudioNearSurface;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NewAmbientAudio;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LCameraComponent;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CamraNearSurface;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetUndefiniedHeight_NewParam;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBE_UnderwaterVisibility                      Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_UpdateCamera) == 0x000008, "Wrong alignment on BP_FluxSurface_C_UpdateCamera");
static_assert(sizeof(BP_FluxSurface_C_UpdateCamera) == 0x0000D0, "Wrong size on BP_FluxSurface_C_UpdateCamera");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, DeltaTime) == 0x000000, "Member 'BP_FluxSurface_C_UpdateCamera::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, AudioNearSurface) == 0x000008, "Member 'BP_FluxSurface_C_UpdateCamera::AudioNearSurface' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, NewAmbientAudio) == 0x000010, "Member 'BP_FluxSurface_C_UpdateCamera::NewAmbientAudio' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, LCameraComponent) == 0x000018, "Member 'BP_FluxSurface_C_UpdateCamera::LCameraComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CamraNearSurface) == 0x000020, "Member 'BP_FluxSurface_C_UpdateCamera::CamraNearSurface' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00002A, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_IsValid_ReturnValue_2) == 0x00002B, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'BP_FluxSurface_C_UpdateCamera::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002D, "Member 'BP_FluxSurface_C_UpdateCamera::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, Temp_bool_Variable) == 0x00002E, "Member 'BP_FluxSurface_C_UpdateCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_GetUndefiniedHeight_NewParam) == 0x000038, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_GetUndefiniedHeight_NewParam' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000041, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000042, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, Temp_byte_Variable) == 0x000050, "Member 'BP_FluxSurface_C_UpdateCamera::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000051, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, K2Node_Select_Default) == 0x000053, "Member 'BP_FluxSurface_C_UpdateCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000054, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_IsValid_ReturnValue_3) == 0x000055, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000058, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000060, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_GetCameraLocation_ReturnValue) == 0x000068, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BreakVector_X) == 0x000080, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BreakVector_Z) == 0x000090, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BreakVector_X_1) == 0x000098, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x0000B8, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x0000BC, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_Lerp_A_ImplicitCast) == 0x0000C0, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x0000C8, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_UpdateCamera, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000CC, "Member 'BP_FluxSurface_C_UpdateCamera::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SpawnSplashAtLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_FluxSurface_C_SpawnSplashAtLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SpawnSplashAtLocation) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SpawnSplashAtLocation");
static_assert(sizeof(BP_FluxSurface_C_SpawnSplashAtLocation) == 0x000020, "Wrong size on BP_FluxSurface_C_SpawnSplashAtLocation");
static_assert(offsetof(BP_FluxSurface_C_SpawnSplashAtLocation, Location) == 0x000000, "Member 'BP_FluxSurface_C_SpawnSplashAtLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SpawnSplashAtLocation, Type) == 0x000018, "Member 'BP_FluxSurface_C_SpawnSplashAtLocation::Type' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SpawnSplash
// 0x0030 (0x0030 - 0x0000)
struct BP_FluxSurface_C_SpawnSplash final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBS_FluxSplashData                     BS_FluxSplashData;                                 // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SpawnSplash) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SpawnSplash");
static_assert(sizeof(BP_FluxSurface_C_SpawnSplash) == 0x000030, "Wrong size on BP_FluxSurface_C_SpawnSplash");
static_assert(offsetof(BP_FluxSurface_C_SpawnSplash, Location) == 0x000000, "Member 'BP_FluxSurface_C_SpawnSplash::Location' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SpawnSplash, BS_FluxSplashData) == 0x000018, "Member 'BP_FluxSurface_C_SpawnSplash::BS_FluxSplashData' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SpawnSplash, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000028, "Member 'BP_FluxSurface_C_SpawnSplash::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetWaveTextureAndArea
// 0x0018 (0x0018 - 0x0000)
struct BP_FluxSurface_C_SetWaveTextureAndArea final
{
public:
	class UTextureRenderTarget2D*                 Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Area;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetWaveTextureAndArea) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetWaveTextureAndArea");
static_assert(sizeof(BP_FluxSurface_C_SetWaveTextureAndArea) == 0x000018, "Wrong size on BP_FluxSurface_C_SetWaveTextureAndArea");
static_assert(offsetof(BP_FluxSurface_C_SetWaveTextureAndArea, Texture) == 0x000000, "Member 'BP_FluxSurface_C_SetWaveTextureAndArea::Texture' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetWaveTextureAndArea, Area) == 0x000008, "Member 'BP_FluxSurface_C_SetWaveTextureAndArea::Area' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetWaveProfile
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_SetWaveProfile final
{
public:
	class UPDA_FluxWaveProfile_C*                 Profile;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetWaveProfile) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetWaveProfile");
static_assert(sizeof(BP_FluxSurface_C_SetWaveProfile) == 0x000008, "Wrong size on BP_FluxSurface_C_SetWaveProfile");
static_assert(offsetof(BP_FluxSurface_C_SetWaveProfile, Profile) == 0x000000, "Member 'BP_FluxSurface_C_SetWaveProfile::Profile' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetStateHeightWetMap
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_SetStateHeightWetMap final
{
public:
	class UTexture*                               Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetStateHeightWetMap) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetStateHeightWetMap");
static_assert(sizeof(BP_FluxSurface_C_SetStateHeightWetMap) == 0x000008, "Wrong size on BP_FluxSurface_C_SetStateHeightWetMap");
static_assert(offsetof(BP_FluxSurface_C_SetStateHeightWetMap, Texture) == 0x000000, "Member 'BP_FluxSurface_C_SetStateHeightWetMap::Texture' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetSimulationState
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_SetSimulationState final
{
public:
	class UPDA_FluxSimulationState_C*             State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetSimulationState) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetSimulationState");
static_assert(sizeof(BP_FluxSurface_C_SetSimulationState) == 0x000008, "Wrong size on BP_FluxSurface_C_SetSimulationState");
static_assert(offsetof(BP_FluxSurface_C_SetSimulationState, State) == 0x000000, "Member 'BP_FluxSurface_C_SetSimulationState::State' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetNiagaraData
// 0x0060 (0x0060 - 0x0000)
struct BP_FluxSurface_C_SetNiagaraData final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RequiredGround;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequiredWave;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSurfaceHeight_SurfaceHeight;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSurfaceHeight_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Get_Cut_Mask_Mask;                        // 0x0030(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetNiagaraData) == 0x000010, "Wrong alignment on BP_FluxSurface_C_SetNiagaraData");
static_assert(sizeof(BP_FluxSurface_C_SetNiagaraData) == 0x000060, "Wrong size on BP_FluxSurface_C_SetNiagaraData");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, NiagaraSystem) == 0x000000, "Member 'BP_FluxSurface_C_SetNiagaraData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, RequiredGround) == 0x000008, "Member 'BP_FluxSurface_C_SetNiagaraData::RequiredGround' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, RequiredWave) == 0x000009, "Member 'BP_FluxSurface_C_SetNiagaraData::RequiredWave' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_GetSurfaceHeight_SurfaceHeight) == 0x000010, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_GetSurfaceHeight_SurfaceHeight' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_IsValid_ReturnValue_2) == 0x000018, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_IsValid_ReturnValue_3) == 0x000019, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_GetSurfaceHeight_ReturnValue) == 0x000020, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_GetSurfaceHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_Get_Cut_Mask_Mask) == 0x000030, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_Get_Cut_Mask_Mask' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_IsValid_ReturnValue_4) == 0x000050, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000054, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetNiagaraData, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000058, "Member 'BP_FluxSurface_C_SetNiagaraData::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetInteractionsTexture
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_SetInteractionsTexture final
{
public:
	class UTextureRenderTarget2D*                 Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetInteractionsTexture) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetInteractionsTexture");
static_assert(sizeof(BP_FluxSurface_C_SetInteractionsTexture) == 0x000008, "Wrong size on BP_FluxSurface_C_SetInteractionsTexture");
static_assert(offsetof(BP_FluxSurface_C_SetInteractionsTexture, Texture) == 0x000000, "Member 'BP_FluxSurface_C_SetInteractionsTexture::Texture' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetInteractionsArea
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxSurface_C_SetInteractionsArea final
{
public:
	struct FLinearColor                           Area;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetInteractionsArea) == 0x000004, "Wrong alignment on BP_FluxSurface_C_SetInteractionsArea");
static_assert(sizeof(BP_FluxSurface_C_SetInteractionsArea) == 0x000010, "Wrong size on BP_FluxSurface_C_SetInteractionsArea");
static_assert(offsetof(BP_FluxSurface_C_SetInteractionsArea, Area) == 0x000000, "Member 'BP_FluxSurface_C_SetInteractionsArea::Area' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetColorPreset
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxSurface_C_SetColorPreset final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_FluxSurfacePreset_C*               Preset;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetColorPreset) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetColorPreset");
static_assert(sizeof(BP_FluxSurface_C_SetColorPreset) == 0x000010, "Wrong size on BP_FluxSurface_C_SetColorPreset");
static_assert(offsetof(BP_FluxSurface_C_SetColorPreset, Index_0) == 0x000000, "Member 'BP_FluxSurface_C_SetColorPreset::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetColorPreset, Preset) == 0x000008, "Member 'BP_FluxSurface_C_SetColorPreset::Preset' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetCoastlineState
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_SetCoastlineState final
{
public:
	class UPDA_FluxCoastlineState_C*              State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetCoastlineState) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetCoastlineState");
static_assert(sizeof(BP_FluxSurface_C_SetCoastlineState) == 0x000008, "Wrong size on BP_FluxSurface_C_SetCoastlineState");
static_assert(offsetof(BP_FluxSurface_C_SetCoastlineState, State) == 0x000000, "Member 'BP_FluxSurface_C_SetCoastlineState::State' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.SetCameraUnderVisibility
// 0x0078 (0x0078 - 0x0000)
struct BP_FluxSurface_C_SetCameraUnderVisibility final
{
public:
	bool                                          PostProcessVolume;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BottomSurface;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ViewTargetActor;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_FluxCameraEvents_C> K2Node_DynamicCast_AsBPI_Flux_Camera_Events;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_SetCameraUnderVisibility) == 0x000008, "Wrong alignment on BP_FluxSurface_C_SetCameraUnderVisibility");
static_assert(sizeof(BP_FluxSurface_C_SetCameraUnderVisibility) == 0x000078, "Wrong size on BP_FluxSurface_C_SetCameraUnderVisibility");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, PostProcessVolume) == 0x000000, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::PostProcessVolume' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, BottomSurface) == 0x000001, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::BottomSurface' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, Controller) == 0x000008, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::Controller' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, ViewTargetActor) == 0x000010, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, Temp_int_Variable) == 0x000018, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, Temp_int_Variable_1) == 0x000024, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_IsValid_ReturnValue_2) == 0x00003E, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_GetViewTarget_ReturnValue) == 0x000040, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, K2Node_DynamicCast_AsBPI_Flux_Camera_Events) == 0x000050, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::K2Node_DynamicCast_AsBPI_Flux_Camera_Events' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_SetCameraUnderVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_FluxSurface_C_SetCameraUnderVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.RemovePostprocess
// 0x0068 (0x0068 - 0x0000)
struct BP_FluxSurface_C_RemovePostprocess final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_RemovePostprocess) == 0x000008, "Wrong alignment on BP_FluxSurface_C_RemovePostprocess");
static_assert(sizeof(BP_FluxSurface_C_RemovePostprocess) == 0x000068, "Wrong size on BP_FluxSurface_C_RemovePostprocess");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_FluxSurface_C_RemovePostprocess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_FluxSurface_C_RemovePostprocess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, K2Node_MakeStruct_WeightedBlendable) == 0x000030, "Member 'BP_FluxSurface_C_RemovePostprocess::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_Array_RemoveItem_ReturnValue) == 0x000040, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, K2Node_DynamicCast_AsMaterial_Instance) == 0x000048, "Member 'BP_FluxSurface_C_RemovePostprocess::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_FluxSurface_C_RemovePostprocess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_RemovePostprocess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000058, "Member 'BP_FluxSurface_C_RemovePostprocess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FluxSurface_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FluxSurface_C_ReceiveTick");
static_assert(sizeof(BP_FluxSurface_C_ReceiveTick) == 0x000004, "Wrong size on BP_FluxSurface_C_ReceiveTick");
static_assert(offsetof(BP_FluxSurface_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FluxSurface_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_FluxSurface_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_FluxSurface_C_ReceiveEndPlay");
static_assert(sizeof(BP_FluxSurface_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_FluxSurface_C_ReceiveEndPlay");
static_assert(offsetof(BP_FluxSurface_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_FluxSurface_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.OffsetWorld
// 0x0078 (0x0078 - 0x0000)
struct BP_FluxSurface_C_OffsetWorld final
{
public:
	struct FIntVector                             NewWorldOriginLocation;                            // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_OffsetWorld) == 0x000008, "Wrong alignment on BP_FluxSurface_C_OffsetWorld");
static_assert(sizeof(BP_FluxSurface_C_OffsetWorld) == 0x000078, "Wrong size on BP_FluxSurface_C_OffsetWorld");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, NewWorldOriginLocation) == 0x000000, "Member 'BP_FluxSurface_C_OffsetWorld::NewWorldOriginLocation' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x00002C, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000072, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_BooleanOR_ReturnValue) == 0x000073, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_OffsetWorld, CallFunc_BooleanOR_ReturnValue_1) == 0x000074, "Member 'BP_FluxSurface_C_OffsetWorld::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.LoadMesh
// 0x0098 (0x0098 - 0x0000)
struct BP_FluxSurface_C_LoadMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Map_Find_Value;                           // 0x0008(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             CallFunc_Map_Find_Value_1;                         // 0x0050(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_LoadMesh) == 0x000008, "Wrong alignment on BP_FluxSurface_C_LoadMesh");
static_assert(sizeof(BP_FluxSurface_C_LoadMesh) == 0x000098, "Wrong size on BP_FluxSurface_C_LoadMesh");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, K2Node_DynamicCast_AsStatic_Mesh) == 0x000040, "Member 'BP_FluxSurface_C_LoadMesh::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_FluxSurface_C_LoadMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_Map_Find_Value_1) == 0x000050, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_Map_Find_ReturnValue_1) == 0x000078, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000079, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000080, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000088, "Member 'BP_FluxSurface_C_LoadMesh::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_FluxSurface_C_LoadMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000091, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_LoadMesh, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000092, "Member 'BP_FluxSurface_C_LoadMesh::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.InitializeVolumes
// 0x0EB0 (0x0EB0 - 0x0000)
struct BP_FluxSurface_C_InitializeVolumes final
{
public:
	struct FVector                                AreaSize;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0018(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeVolumeLocalTransform_NewParam;        // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeVolumeLocalTransform_NewParam_1;      // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x02F0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundAttenuationSettings              CallFunc_BP_GetAttenuationSettingsToApply_OutAttenuationSettings; // 0x0408(0x03D0)()
	bool                                          CallFunc_BP_GetAttenuationSettingsToApply_ReturnValue; // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundAttenuationSettings              K2Node_SetFieldsInStruct_StructOut;                // 0x07E0(0x03D0)()
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0BB0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA9[0x7];                                      // 0x0CA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0CB0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA9[0x7];                                      // 0x0DA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0DB0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA9[0x3];                                      // 0x0EA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_SetFieldsInStruct_FalloffDistance_ImplicitCast; // 0x0EAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_InitializeVolumes) == 0x000010, "Wrong alignment on BP_FluxSurface_C_InitializeVolumes");
static_assert(sizeof(BP_FluxSurface_C_InitializeVolumes) == 0x000EB0, "Wrong size on BP_FluxSurface_C_InitializeVolumes");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, AreaSize) == 0x000000, "Member 'BP_FluxSurface_C_InitializeVolumes::AreaSize' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000018, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000128, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_MakeVolumeLocalTransform_NewParam) == 0x000140, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_MakeVolumeLocalTransform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0001A0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector_X) == 0x0001B0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector_Y) == 0x0001B8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector_Z) == 0x0001C0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0001C8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector2D_X) == 0x0001E0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector2D_Y) == 0x0001E8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_MakeVector_ReturnValue) == 0x0001F0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000208, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_MakeVolumeLocalTransform_NewParam_1) == 0x000220, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_MakeVolumeLocalTransform_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector_X_1) == 0x000280, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector_Y_1) == 0x000288, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BreakVector_Z_1) == 0x000290, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0002A0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_MakeVector_ReturnValue_1) == 0x0002B8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002D0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_IsValid_ReturnValue) == 0x0002E8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0002F0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0003E8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_IsValid_ReturnValue_1) == 0x000400, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BP_GetAttenuationSettingsToApply_OutAttenuationSettings) == 0x000408, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BP_GetAttenuationSettingsToApply_OutAttenuationSettings' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_BP_GetAttenuationSettingsToApply_ReturnValue) == 0x0007D8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_BP_GetAttenuationSettingsToApply_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, K2Node_SetFieldsInStruct_StructOut) == 0x0007E0, "Member 'BP_FluxSurface_C_InitializeVolumes::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000BB0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_IsValid_ReturnValue_2) == 0x000CA8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000CB0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_IsValid_ReturnValue_3) == 0x000DA8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000DB0, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, CallFunc_IsValid_ReturnValue_4) == 0x000EA8, "Member 'BP_FluxSurface_C_InitializeVolumes::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeVolumes, K2Node_SetFieldsInStruct_FalloffDistance_ImplicitCast) == 0x000EAC, "Member 'BP_FluxSurface_C_InitializeVolumes::K2Node_SetFieldsInStruct_FalloffDistance_ImplicitCast' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.InitializeSurfaces
// 0x0840 (0x0840 - 0x0000)
struct BP_FluxSurface_C_InitializeSurfaces final
{
public:
	struct FVector                                AreaSize;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LTransform;                                        // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8[0x8];                                      // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0xF];                                      // 0x0251(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0260(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x02C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x03C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0420(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0488(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0580(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x05E0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x06E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0748(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FluxSurface_C_InitializeSurfaces) == 0x000010, "Wrong alignment on BP_FluxSurface_C_InitializeSurfaces");
static_assert(sizeof(BP_FluxSurface_C_InitializeSurfaces) == 0x000840, "Wrong size on BP_FluxSurface_C_InitializeSurfaces");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, AreaSize) == 0x000000, "Member 'BP_FluxSurface_C_InitializeSurfaces::AreaSize' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, LTransform) == 0x000020, "Member 'BP_FluxSurface_C_InitializeSurfaces::LTransform' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000198, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_BreakVector_X) == 0x0001B0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_BreakVector_Y) == 0x0001B8, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_BreakVector_Z) == 0x0001C0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_MakeVector_ReturnValue) == 0x0001D0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_MakeTransform_ReturnValue) == 0x0001F0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_IsValid_ReturnValue_1) == 0x000250, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_ComposeTransforms_ReturnValue) == 0x000260, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0002C0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_MakeTransform_ReturnValue_1) == 0x0003C0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_MakeTransform_ReturnValue_2) == 0x000420, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_IsValid_ReturnValue_2) == 0x000480, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000481, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000488, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000580, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x0005E0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_IsValid_ReturnValue_3) == 0x0006D8, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_ComposeTransforms_ReturnValue_2) == 0x0006E0, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_IsValid_ReturnValue_4) == 0x000740, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeSurfaces, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000748, "Member 'BP_FluxSurface_C_InitializeSurfaces::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.InitializeStates
// 0x0310 (0x0310 - 0x0000)
struct BP_FluxSurface_C_InitializeStates final
{
public:
	TArray<class UMaterialInstanceDynamic*>       LocalMaterials;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	class USkyLightComponent*                     SkyLightComponent;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AreaLocation;                                      // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AreaSize;                                          // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyLightComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UMaterialInstanceDynamic*         Temp_object_Variable_1;                            // 0x00A0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSurfaceHeight_SurfaceHeight;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_FluxSurface_C>    K2Node_DynamicCast_AsBPI_Flux_Surface;             // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_FluxSurface_C>    K2Node_DynamicCast_AsBPI_Flux_Surface_1;           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FluxNiagaraActor_C*                 K2Node_DynamicCast_AsBP_Flux_Niagara_Actor;        // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0210(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_InitializeStates) == 0x000010, "Wrong alignment on BP_FluxSurface_C_InitializeStates");
static_assert(sizeof(BP_FluxSurface_C_InitializeStates) == 0x000310, "Wrong size on BP_FluxSurface_C_InitializeStates");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, LocalMaterials) == 0x000000, "Member 'BP_FluxSurface_C_InitializeStates::LocalMaterials' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, SkyLightComponent) == 0x000010, "Member 'BP_FluxSurface_C_InitializeStates::SkyLightComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, AreaLocation) == 0x000018, "Member 'BP_FluxSurface_C_InitializeStates::AreaLocation' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, AreaSize) == 0x000030, "Member 'BP_FluxSurface_C_InitializeStates::AreaSize' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, Temp_int_Variable) == 0x000048, "Member 'BP_FluxSurface_C_InitializeStates::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, Temp_object_Variable) == 0x000050, "Member 'BP_FluxSurface_C_InitializeStates::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, Temp_int_Variable_1) == 0x000064, "Member 'BP_FluxSurface_C_InitializeStates::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000078, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000080, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_AsActor) == 0x000088, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000091, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, Temp_object_Variable_1) == 0x0000A0, "Member 'BP_FluxSurface_C_InitializeStates::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue_2) == 0x0000A9, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_FluxSurface_C_InitializeStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue_3) == 0x0000B0, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_GetSurfaceHeight_SurfaceHeight) == 0x0000B8, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_GetSurfaceHeight_SurfaceHeight' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_AsBPI_Flux_Surface) == 0x0000C0, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_AsBPI_Flux_Surface' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue_4) == 0x0000D1, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_AsBPI_Flux_Surface_1) == 0x0000D8, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_AsBPI_Flux_Surface_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000FD, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000100, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000118, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_BoxOverlapActors_OutActors) == 0x000140, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_BoxOverlapActors_ReturnValue) == 0x000150, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue_5) == 0x000151, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_AsBP_Flux_Niagara_Actor) == 0x000160, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_AsBP_Flux_Niagara_Actor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'BP_FluxSurface_C_InitializeStates::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_Get_Item_2) == 0x000170, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_IsValid_ReturnValue_6) == 0x000178, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_Length_ReturnValue_2) == 0x00017C, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Less_IntInt_ReturnValue_1) == 0x000180, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000181, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'BP_FluxSurface_C_InitializeStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A0, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001A4, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000210, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000308, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeStates, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00030C, "Member 'BP_FluxSurface_C_InitializeStates::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.InitializeOverlaping
// 0x0180 (0x0180 - 0x0000)
struct BP_FluxSurface_C_InitializeOverlaping final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           Temp_object_Variable;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FluxNiagaraActor_C*                 K2Node_DynamicCast_AsBP_Flux_Niagara_Actor;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00F8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0110(0x0010)(ReferenceParm)
	class ABP_FluxSurface_C*                      K2Node_DynamicCast_AsBP_Flux_Surface;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FluxNiagaraActor_C*                 K2Node_DynamicCast_AsBP_Flux_Niagara_Actor_1;      // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_FluxDataComponent_C*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FluxDataComponent_C*                CallFunc_Array_Get_Item_3;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_InitializeOverlaping) == 0x000010, "Wrong alignment on BP_FluxSurface_C_InitializeOverlaping");
static_assert(sizeof(BP_FluxSurface_C_InitializeOverlaping) == 0x000180, "Wrong size on BP_FluxSurface_C_InitializeOverlaping");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Loop_Counter_Variable_2) == 0x000014, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_object_Variable) == 0x000020, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, Temp_object_Variable_1) == 0x000038, "Member 'BP_FluxSurface_C_InitializeOverlaping::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_ComponentOverlapActors_OutActors) == 0x0000C0, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_ComponentOverlapActors_ReturnValue) == 0x0000D0, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_DynamicCast_AsBP_Flux_Niagara_Actor) == 0x0000E0, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_DynamicCast_AsBP_Flux_Niagara_Actor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000F8, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000110, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_DynamicCast_AsBP_Flux_Surface) == 0x000120, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_DynamicCast_AsBP_Flux_Surface' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_DynamicCast_AsBP_Flux_Niagara_Actor_1) == 0x000140, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_DynamicCast_AsBP_Flux_Niagara_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'BP_FluxSurface_C_InitializeOverlaping::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Less_IntInt_ReturnValue_1) == 0x000149, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000150, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Length_ReturnValue_2) == 0x000160, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Get_Item_3) == 0x000168, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Less_IntInt_ReturnValue_2) == 0x000170, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Array_Length_ReturnValue_3) == 0x000174, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_InitializeOverlaping, CallFunc_Less_IntInt_ReturnValue_3) == 0x000178, "Member 'BP_FluxSurface_C_InitializeOverlaping::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.GetWaveTextureMaterials
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxSurface_C_GetWaveTextureMaterials final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MaterialInstances_0;                               // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_FluxSurface_C_GetWaveTextureMaterials) == 0x000008, "Wrong alignment on BP_FluxSurface_C_GetWaveTextureMaterials");
static_assert(sizeof(BP_FluxSurface_C_GetWaveTextureMaterials) == 0x000010, "Wrong size on BP_FluxSurface_C_GetWaveTextureMaterials");
static_assert(offsetof(BP_FluxSurface_C_GetWaveTextureMaterials, MaterialInstances_0) == 0x000000, "Member 'BP_FluxSurface_C_GetWaveTextureMaterials::MaterialInstances_0' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.GetSimulationState
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_GetSimulationState final
{
public:
	class UPDA_FluxSimulationState_C*             State;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_GetSimulationState) == 0x000008, "Wrong alignment on BP_FluxSurface_C_GetSimulationState");
static_assert(sizeof(BP_FluxSurface_C_GetSimulationState) == 0x000008, "Wrong size on BP_FluxSurface_C_GetSimulationState");
static_assert(offsetof(BP_FluxSurface_C_GetSimulationState, State) == 0x000000, "Member 'BP_FluxSurface_C_GetSimulationState::State' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.GetColorPreset
// 0x0020 (0x0020 - 0x0000)
struct BP_FluxSurface_C_GetColorPreset final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_FluxSurfacePreset_C*               Preset;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPDA_FluxSurfacePreset_C*         K2Node_Select_Default;                             // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_GetColorPreset) == 0x000008, "Wrong alignment on BP_FluxSurface_C_GetColorPreset");
static_assert(sizeof(BP_FluxSurface_C_GetColorPreset) == 0x000020, "Wrong size on BP_FluxSurface_C_GetColorPreset");
static_assert(offsetof(BP_FluxSurface_C_GetColorPreset, Index_0) == 0x000000, "Member 'BP_FluxSurface_C_GetColorPreset::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GetColorPreset, Preset) == 0x000008, "Member 'BP_FluxSurface_C_GetColorPreset::Preset' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GetColorPreset, Temp_int_Variable) == 0x000010, "Member 'BP_FluxSurface_C_GetColorPreset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GetColorPreset, K2Node_Select_Default) == 0x000018, "Member 'BP_FluxSurface_C_GetColorPreset::K2Node_Select_Default' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.GetCoastlineState
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_GetCoastlineState final
{
public:
	class UPDA_FluxCoastlineState_C*              State;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_GetCoastlineState) == 0x000008, "Wrong alignment on BP_FluxSurface_C_GetCoastlineState");
static_assert(sizeof(BP_FluxSurface_C_GetCoastlineState) == 0x000008, "Wrong size on BP_FluxSurface_C_GetCoastlineState");
static_assert(offsetof(BP_FluxSurface_C_GetCoastlineState, State) == 0x000000, "Member 'BP_FluxSurface_C_GetCoastlineState::State' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.GenerateMesh
// 0x0190 (0x0190 - 0x0000)
struct BP_FluxSurface_C_GenerateMesh final
{
public:
	class UPDA_FluxSimulationState_C*             State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBS_MeshDefinition                     Mesh;                                              // 0x0008(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0070(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_GenerateMesh_Vetticles;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateMesh_Polygons;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_GenerateMesh) == 0x000008, "Wrong alignment on BP_FluxSurface_C_GenerateMesh");
static_assert(sizeof(BP_FluxSurface_C_GenerateMesh) == 0x000190, "Wrong size on BP_FluxSurface_C_GenerateMesh");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, State) == 0x000000, "Member 'BP_FluxSurface_C_GenerateMesh::State' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, Mesh) == 0x000008, "Member 'BP_FluxSurface_C_GenerateMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000070, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_GenerateMesh_Vetticles) == 0x000168, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_GenerateMesh_Vetticles' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_GenerateMesh_Polygons) == 0x00016C, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_GenerateMesh_Polygons' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_Conv_IntToString_ReturnValue) == 0x000170, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_GenerateMesh, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'BP_FluxSurface_C_GenerateMesh::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ExecuteUbergraph_BP_FluxSurface
// 0x0330 (0x0330 - 0x0000)
struct BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_Event_Texture_2;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Area_1;                               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPDA_FluxWaveProfile_C*                 K2Node_Event_Profile;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_Event_Texture_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Area;                                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0090(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class UBP_FluxDataComponent_C*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_FluxDataComponent_C*                CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FluxNiagaraActor_C*                 K2Node_DynamicCast_AsBP_Flux_Niagara_Actor;        // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      K2Node_Event_ParticleSystem;                       // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequiredGround;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RequiredWave;                         // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Event_Texture;                              // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Type;                                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBS_FluxSplashData                     CallFunc_Map_Find_Value;                           // 0x0200(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_FluxSimulationState_C*             K2Node_Event_State_1;                              // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Get_Cut_Mask_Mask;                        // 0x0230(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_X;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_FluxWorldPainter_C> K2Node_DynamicCast_AsBPI_Flux_World_Painter;     // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_Event_Materials;                            // 0x02E0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_FluxCoastlineState_C*              K2Node_Event_State;                                // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Index;                                // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPDA_FluxSurfacePreset_C*               K2Node_Event_Preset;                               // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateCamera_DeltaTime_ImplicitCast;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface) == 0x000010, "Wrong alignment on BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface");
static_assert(sizeof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface) == 0x000330, "Wrong size on BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, EntryPoint) == 0x000000, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_int_Variable) == 0x000004, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_int_Variable_1) == 0x000008, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_object_Variable) == 0x000018, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_int_Variable_2) == 0x000020, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_int_Variable_3) == 0x000024, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Texture_2) == 0x000038, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Texture_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Area_1) == 0x000040, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Area_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Profile) == 0x000050, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Profile' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Texture_1) == 0x000058, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Texture_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Area) == 0x000060, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Area' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000070, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_ComponentBoundEvent_OtherActor) == 0x000078, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_ComponentBoundEvent_OtherComp) == 0x000080, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000088, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_ComponentBoundEvent_bFromSweep) == 0x00008C, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_ComponentBoundEvent_SweepResult) == 0x000090, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000188, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Length_ReturnValue) == 0x0001A0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_DynamicCast_AsBP_Flux_Niagara_Actor) == 0x0001A8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_DynamicCast_AsBP_Flux_Niagara_Actor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_DeltaSeconds) == 0x0001B4, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_ParticleSystem) == 0x0001B8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_RequiredGround) == 0x0001C0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_RequiredGround' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_RequiredWave) == 0x0001C1, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_RequiredWave' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Texture) == 0x0001C8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Texture' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Location) == 0x0001D0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Type) == 0x0001E8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Length_ReturnValue_1) == 0x0001F8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Less_IntInt_ReturnValue) == 0x0001FC, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Map_Find_Value) == 0x000200, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Map_Find_ReturnValue) == 0x000210, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_State_1) == 0x000218, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_State_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, Temp_int_Loop_Counter_Variable) == 0x000220, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Less_IntInt_ReturnValue_1) == 0x000224, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Add_IntInt_ReturnValue_4) == 0x000228, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Get_Cut_Mask_Mask) == 0x000230, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Get_Cut_Mask_Mask' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Get_Item_2) == 0x000250, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_BreakVector4_X) == 0x000258, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_BreakVector4_Y) == 0x000260, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_BreakVector4_Z) == 0x000268, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_BreakVector4_W) == 0x000270, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Length_ReturnValue_2) == 0x000278, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_MakeStruct_LinearColor) == 0x00027C, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Less_IntInt_ReturnValue_2) == 0x00028C, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00028D, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000290, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_DynamicCast_AsActor) == 0x000298, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_DynamicCast_bSuccess_1) == 0x0002A0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_DynamicCast_AsBPI_Flux_World_Painter) == 0x0002A8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_DynamicCast_AsBPI_Flux_World_Painter' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_DynamicCast_bSuccess_2) == 0x0002B8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Get_Item_3) == 0x0002C0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Length_ReturnValue_3) == 0x0002C8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002CC, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Get_Item_4) == 0x0002D0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Array_Length_ReturnValue_4) == 0x0002D8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Materials) == 0x0002E0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Materials' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_Less_IntInt_ReturnValue_4) == 0x0002F0, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_State) == 0x0002F8, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_EndPlayReason) == 0x000300, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Index) == 0x000304, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_Event_Preset) == 0x000308, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_Event_Preset' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_SwitchInteger_CmpSuccess) == 0x000310, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, CallFunc_UpdateCamera_DeltaTime_ImplicitCast) == 0x000318, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::CallFunc_UpdateCamera_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_MakeStruct_R_ImplicitCast) == 0x000320, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_MakeStruct_G_ImplicitCast) == 0x000324, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_MakeStruct_B_ImplicitCast) == 0x000328, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface, K2Node_MakeStruct_A_ImplicitCast) == 0x00032C, "Member 'BP_FluxSurface_C_ExecuteUbergraph_BP_FluxSurface::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.DetectCurrentCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_FluxSurface_C_DetectCurrentCamera final
{
public:
	class USceneComponent*                        LNewCameraComponent;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_DetectCurrentCamera) == 0x000008, "Wrong alignment on BP_FluxSurface_C_DetectCurrentCamera");
static_assert(sizeof(BP_FluxSurface_C_DetectCurrentCamera) == 0x000018, "Wrong size on BP_FluxSurface_C_DetectCurrentCamera");
static_assert(offsetof(BP_FluxSurface_C_DetectCurrentCamera, LNewCameraComponent) == 0x000000, "Member 'BP_FluxSurface_C_DetectCurrentCamera::LNewCameraComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_DetectCurrentCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_FluxSurface_C_DetectCurrentCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_DetectCurrentCamera, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'BP_FluxSurface_C_DetectCurrentCamera::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_DetectCurrentCamera, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000011, "Member 'BP_FluxSurface_C_DetectCurrentCamera::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_DetectCurrentCamera, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000012, "Member 'BP_FluxSurface_C_DetectCurrentCamera::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.CreateMaterialsForMesh
// 0x00C8 (0x00C8 - 0x0000)
struct BP_FluxSurface_C_CreateMaterialsForMesh final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicWaterBodyMaterial_Material;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_CreateMaterialsForMesh) == 0x000008, "Wrong alignment on BP_FluxSurface_C_CreateMaterialsForMesh");
static_assert(sizeof(BP_FluxSurface_C_CreateMaterialsForMesh) == 0x0000C8, "Wrong size on BP_FluxSurface_C_CreateMaterialsForMesh");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, Temp_int_Variable) == 0x000000, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, Temp_int_Variable_1) == 0x000004, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, Temp_bool_Variable) == 0x000008, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, Temp_bool_Variable_1) == 0x000010, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_AddUnique_ReturnValue) == 0x000014, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_2) == 0x000019, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, K2Node_Select_Default) == 0x00001C, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_3) == 0x000020, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000038, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_4) == 0x000040, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_5) == 0x000041, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000048, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_6) == 0x000050, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, K2Node_Select_Default_1) == 0x000058, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000060, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_7) == 0x000074, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000080, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_8) == 0x000088, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicWaterBodyMaterial_Material) == 0x000090, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicWaterBodyMaterial_Material' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_IsValid_ReturnValue_9) == 0x000098, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x0000A0, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_Add_ReturnValue_2) == 0x0000AC, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_Array_Add_ReturnValue_3) == 0x0000B8, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x0000C0, "Member 'BP_FluxSurface_C_CreateMaterialsForMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.CreateMaterialsForGlass
// 0x0058 (0x0058 - 0x0000)
struct BP_FluxSurface_C_CreateMaterialsForGlass final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMaterialInstanceDynamic*         Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_FluxSurfaceMeshActor_C> K2Node_DynamicCast_AsBPI_Flux_Surface_Mesh_Actor; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_GetGlassMaterials_NewParam;               // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_FluxSurface_C_CreateMaterialsForGlass) == 0x000008, "Wrong alignment on BP_FluxSurface_C_CreateMaterialsForGlass");
static_assert(sizeof(BP_FluxSurface_C_CreateMaterialsForGlass) == 0x000058, "Wrong size on BP_FluxSurface_C_CreateMaterialsForGlass");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, Temp_object_Variable) == 0x000010, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, CallFunc_Array_RemoveItem_ReturnValue) == 0x000018, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, K2Node_DynamicCast_AsBPI_Flux_Surface_Mesh_Actor) == 0x000030, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::K2Node_DynamicCast_AsBPI_Flux_Surface_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterialsForGlass, CallFunc_GetGlassMaterials_NewParam) == 0x000048, "Member 'BP_FluxSurface_C_CreateMaterialsForGlass::CallFunc_GetGlassMaterials_NewParam' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.CreateMaterials
// 0x0078 (0x0078 - 0x0000)
struct BP_FluxSurface_C_CreateMaterials final
{
public:
	TArray<class UMaterialInstanceDynamic*>       NewLocalVar_0;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_CreateMaterials) == 0x000008, "Wrong alignment on BP_FluxSurface_C_CreateMaterials");
static_assert(sizeof(BP_FluxSurface_C_CreateMaterials) == 0x000078, "Wrong size on BP_FluxSurface_C_CreateMaterials");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, NewLocalVar_0) == 0x000000, "Member 'BP_FluxSurface_C_CreateMaterials::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000014, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000018, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_IsValid_ReturnValue_3) == 0x00002A, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000030, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000038, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_IsValid_ReturnValue_4) == 0x000048, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_IsValid_ReturnValue_5) == 0x000050, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_Add_ReturnValue_1) == 0x000054, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_Add_ReturnValue_2) == 0x000058, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000060, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_Array_Add_ReturnValue_3) == 0x000068, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000070, "Member 'BP_FluxSurface_C_CreateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.CreateDynamicWaterBodyMaterial
// 0x0030 (0x0030 - 0x0000)
struct BP_FluxSurface_C_CreateDynamicWaterBodyMaterial final
{
public:
	class AActor*                                 WaterBodyActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_FluxSurfaceMeshActor_C> K2Node_DynamicCast_AsBPI_Flux_Surface_Mesh_Actor; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial) == 0x000008, "Wrong alignment on BP_FluxSurface_C_CreateDynamicWaterBodyMaterial");
static_assert(sizeof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial) == 0x000030, "Wrong size on BP_FluxSurface_C_CreateDynamicWaterBodyMaterial");
static_assert(offsetof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial, WaterBodyActor) == 0x000000, "Member 'BP_FluxSurface_C_CreateDynamicWaterBodyMaterial::WaterBodyActor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial, Material) == 0x000008, "Member 'BP_FluxSurface_C_CreateDynamicWaterBodyMaterial::Material' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial, K2Node_DynamicCast_AsBPI_Flux_Surface_Mesh_Actor) == 0x000010, "Member 'BP_FluxSurface_C_CreateDynamicWaterBodyMaterial::K2Node_DynamicCast_AsBPI_Flux_Surface_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FluxSurface_C_CreateDynamicWaterBodyMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_CreateDynamicWaterBodyMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'BP_FluxSurface_C_CreateDynamicWaterBodyMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ConstructSurfaceMesh
// 0x0100 (0x0100 - 0x0000)
struct BP_FluxSurface_C_ConstructSurfaceMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0080(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue_1;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBoundsScale_NewBoundsScale_ImplicitCast; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ConstructSurfaceMesh) == 0x000010, "Wrong alignment on BP_FluxSurface_C_ConstructSurfaceMesh");
static_assert(sizeof(BP_FluxSurface_C_ConstructSurfaceMesh) == 0x000100, "Wrong size on BP_FluxSurface_C_ConstructSurfaceMesh");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, Temp_struct_Variable) == 0x000010, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, Temp_struct_Variable_1) == 0x000080, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_AddComponent_ReturnValue_1) == 0x0000E8, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_SetBoundsScale_NewBoundsScale_ImplicitCast) == 0x0000F0, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_SetBoundsScale_NewBoundsScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0000F4, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ConstructSurfaceMesh, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x0000F8, "Member 'BP_FluxSurface_C_ConstructSurfaceMesh::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.CanRenderWave
// 0x0001 (0x0001 - 0x0000)
struct BP_FluxSurface_C_CanRenderWave final
{
public:
	bool                                          CanRender;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_CanRenderWave) == 0x000001, "Wrong alignment on BP_FluxSurface_C_CanRenderWave");
static_assert(sizeof(BP_FluxSurface_C_CanRenderWave) == 0x000001, "Wrong size on BP_FluxSurface_C_CanRenderWave");
static_assert(offsetof(BP_FluxSurface_C_CanRenderWave, CanRender) == 0x000000, "Member 'BP_FluxSurface_C_CanRenderWave::CanRender' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.CanRenderInteractions
// 0x0001 (0x0001 - 0x0000)
struct BP_FluxSurface_C_CanRenderInteractions final
{
public:
	bool                                          CanRender;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_CanRenderInteractions) == 0x000001, "Wrong alignment on BP_FluxSurface_C_CanRenderInteractions");
static_assert(sizeof(BP_FluxSurface_C_CanRenderInteractions) == 0x000001, "Wrong size on BP_FluxSurface_C_CanRenderInteractions");
static_assert(offsetof(BP_FluxSurface_C_CanRenderInteractions, CanRender) == 0x000000, "Member 'BP_FluxSurface_C_CanRenderInteractions::CanRender' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_FluxSurface_C_BndEvt__BP_FluxSurface_Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ApplySurfaceNiagaraData
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxSurface_C_ApplySurfaceNiagaraData final
{
public:
	class UNiagaraComponent*                      ParticleSystem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RequiredGround;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequiredWave;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ApplySurfaceNiagaraData) == 0x000008, "Wrong alignment on BP_FluxSurface_C_ApplySurfaceNiagaraData");
static_assert(sizeof(BP_FluxSurface_C_ApplySurfaceNiagaraData) == 0x000010, "Wrong size on BP_FluxSurface_C_ApplySurfaceNiagaraData");
static_assert(offsetof(BP_FluxSurface_C_ApplySurfaceNiagaraData, ParticleSystem) == 0x000000, "Member 'BP_FluxSurface_C_ApplySurfaceNiagaraData::ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplySurfaceNiagaraData, RequiredGround) == 0x000008, "Member 'BP_FluxSurface_C_ApplySurfaceNiagaraData::RequiredGround' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplySurfaceNiagaraData, RequiredWave) == 0x000009, "Member 'BP_FluxSurface_C_ApplySurfaceNiagaraData::RequiredWave' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ApplySurfaceMaterialData
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxSurface_C_ApplySurfaceMaterialData final
{
public:
	TArray<class UMaterialInstanceDynamic*>       Materials;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FluxSurface_C_ApplySurfaceMaterialData) == 0x000008, "Wrong alignment on BP_FluxSurface_C_ApplySurfaceMaterialData");
static_assert(sizeof(BP_FluxSurface_C_ApplySurfaceMaterialData) == 0x000010, "Wrong size on BP_FluxSurface_C_ApplySurfaceMaterialData");
static_assert(offsetof(BP_FluxSurface_C_ApplySurfaceMaterialData, Materials) == 0x000000, "Member 'BP_FluxSurface_C_ApplySurfaceMaterialData::Materials' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ApplyMaterialData
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FluxSurface_C_ApplyMaterialData final
{
public:
	TArray<class UMaterialInstanceDynamic*>       Materials;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSurfaceHeight_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSurfaceHeight_SurfaceHeight;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSurfaceHeight_SurfaceHeight_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ApplyMaterialData) == 0x000008, "Wrong alignment on BP_FluxSurface_C_ApplyMaterialData");
static_assert(sizeof(BP_FluxSurface_C_ApplyMaterialData) == 0x0000A0, "Wrong size on BP_FluxSurface_C_ApplyMaterialData");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, Materials) == 0x000000, "Member 'BP_FluxSurface_C_ApplyMaterialData::Materials' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_IsValid_ReturnValue_3) == 0x000013, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, Temp_int_Variable) == 0x000014, "Member 'BP_FluxSurface_C_ApplyMaterialData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, Temp_int_Variable_1) == 0x000018, "Member 'BP_FluxSurface_C_ApplyMaterialData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, Temp_int_Variable_2) == 0x000024, "Member 'BP_FluxSurface_C_ApplyMaterialData::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, Temp_int_Variable_3) == 0x000028, "Member 'BP_FluxSurface_C_ApplyMaterialData::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Get_Item_3) == 0x000068, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Array_Length_ReturnValue_3) == 0x000070, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_Less_IntInt_ReturnValue_3) == 0x000074, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_IsValid_ReturnValue_4) == 0x000075, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_GetSurfaceHeight_ReturnValue) == 0x000078, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_GetSurfaceHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_GetSurfaceHeight_SurfaceHeight) == 0x000080, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_GetSurfaceHeight_SurfaceHeight' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_GetSurfaceHeight_SurfaceHeight_1) == 0x000088, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_GetSurfaceHeight_SurfaceHeight_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000090, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000094, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyMaterialData, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000098, "Member 'BP_FluxSurface_C_ApplyMaterialData::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.ApplyColor
// 0x0038 (0x0038 - 0x0000)
struct BP_FluxSurface_C_ApplyColor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_ApplyColor) == 0x000008, "Wrong alignment on BP_FluxSurface_C_ApplyColor");
static_assert(sizeof(BP_FluxSurface_C_ApplyColor) == 0x000038, "Wrong size on BP_FluxSurface_C_ApplyColor");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_3) == 0x000011, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_GetGameState_ReturnValue_1) == 0x000018, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_4) == 0x000020, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_5) == 0x000021, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_GetGameState_ReturnValue_2) == 0x000028, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_6) == 0x000030, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_7) == 0x000031, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_ApplyColor, CallFunc_IsValid_ReturnValue_8) == 0x000032, "Member 'BP_FluxSurface_C_ApplyColor::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.AddToUnderSurfaceList
// 0x0010 (0x0010 - 0x0000)
struct BP_FluxSurface_C_AddToUnderSurfaceList final
{
public:
	const class USceneComponent*                  Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_AddToUnderSurfaceList) == 0x000008, "Wrong alignment on BP_FluxSurface_C_AddToUnderSurfaceList");
static_assert(sizeof(BP_FluxSurface_C_AddToUnderSurfaceList) == 0x000010, "Wrong size on BP_FluxSurface_C_AddToUnderSurfaceList");
static_assert(offsetof(BP_FluxSurface_C_AddToUnderSurfaceList, Item) == 0x000000, "Member 'BP_FluxSurface_C_AddToUnderSurfaceList::Item' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_AddToUnderSurfaceList, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_FluxSurface_C_AddToUnderSurfaceList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_AddToUnderSurfaceList, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_FluxSurface_C_AddToUnderSurfaceList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.GetVolumeCollision
// 0x0008 (0x0008 - 0x0000)
struct BP_FluxSurface_C_GetVolumeCollision final
{
public:
	class UPrimitiveComponent*                    Volume;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_GetVolumeCollision) == 0x000008, "Wrong alignment on BP_FluxSurface_C_GetVolumeCollision");
static_assert(sizeof(BP_FluxSurface_C_GetVolumeCollision) == 0x000008, "Wrong size on BP_FluxSurface_C_GetVolumeCollision");
static_assert(offsetof(BP_FluxSurface_C_GetVolumeCollision, Volume) == 0x000000, "Member 'BP_FluxSurface_C_GetVolumeCollision::Volume' has a wrong offset!");

// Function BP_FluxSurface.BP_FluxSurface_C.Get Cut Mask
// 0x0160 (0x0160 - 0x0000)
struct BP_FluxSurface_C_Get_Cut_Mask final
{
public:
	struct FVector4                               Mask;                                              // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FluxSurfaceCutMask_C*               K2Node_DynamicCast_AsBP_Flux_Surface_Cut_Mask;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FluxSurfaceCutMask_C*               K2Node_DynamicCast_AsBP_Flux_Surface_Cut_Mask_1;   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0140(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluxSurface_C_Get_Cut_Mask) == 0x000010, "Wrong alignment on BP_FluxSurface_C_Get_Cut_Mask");
static_assert(sizeof(BP_FluxSurface_C_Get_Cut_Mask) == 0x000160, "Wrong size on BP_FluxSurface_C_Get_Cut_Mask");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, Mask) == 0x000000, "Member 'BP_FluxSurface_C_Get_Cut_Mask::Mask' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000028, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, K2Node_DynamicCast_AsBP_Flux_Surface_Cut_Mask) == 0x000030, "Member 'BP_FluxSurface_C_Get_Cut_Mask::K2Node_DynamicCast_AsBP_Flux_Surface_Cut_Mask' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FluxSurface_C_Get_Cut_Mask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, K2Node_DynamicCast_AsBP_Flux_Surface_Cut_Mask_1) == 0x000040, "Member 'BP_FluxSurface_C_Get_Cut_Mask::K2Node_DynamicCast_AsBP_Flux_Surface_Cut_Mask_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_FluxSurface_C_Get_Cut_Mask::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000F8, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000108, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakVector2D_X) == 0x000118, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakVector2D_Y) == 0x000120, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakVector2D_X_1) == 0x000128, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_BreakVector2D_Y_1) == 0x000130, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FluxSurface_C_Get_Cut_Mask, CallFunc_MakeVector4_ReturnValue) == 0x000140, "Member 'BP_FluxSurface_C_Get_Cut_Mask::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

}

