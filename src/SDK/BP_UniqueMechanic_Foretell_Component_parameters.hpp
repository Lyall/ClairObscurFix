#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueMechanic_Foretell_Component

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "EBattleContext_structs.hpp"
#include "SandFall_structs.hpp"
#include "E_UniqueMechanic_Foretell_ChargeType_structs.hpp"
#include "E_UniqueMechanic_Foretell_CardType_structs.hpp"


namespace SDK::Params
{

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddChargeInternal
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal final
{
public:
	E_UniqueMechanic_Foretell_ChargeType          ChargeType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChargeCount;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal) == 0x000018, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal, ChargeType) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal::ChargeType' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal, ChargeCount) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal::ChargeCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal, Reason) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddMoonCharges
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlushImmediately;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges, ChargeCount) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges::ChargeCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges, FlushImmediately) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges::FlushImmediately' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges, Reason) == 0x000005, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges::Reason' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddSunCharges
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_AddSunCharges final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlushImmediately;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_AddSunCharges) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_AddSunCharges");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_AddSunCharges) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_AddSunCharges");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddSunCharges, ChargeCount) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddSunCharges::ChargeCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddSunCharges, FlushImmediately) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddSunCharges::FlushImmediately' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddSunCharges, Reason) == 0x000005, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddSunCharges::Reason' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddTwilightDurationModifier
// 0x0058 (0x0058 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier final
{
public:
	int32                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FSF_ModifierStackEntryHandle           ModifierHandle;                                    // 0x0018(0x0030)(Parm, OutParm)
	struct FGuid                                  local_GUID;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier) == 0x000058, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier, Delta) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier::Delta' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier, DebugName) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier::DebugName' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier, ModifierHandle) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier::ModifierHandle' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier, local_GUID) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier::local_GUID' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddTwilightExtraDamagePercent
// 0x0058 (0x0058 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent final
{
public:
	int32                                         DeltaPercent;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FSF_ModifierStackEntryHandle           ModifierStackHandle;                               // 0x0018(0x0030)(Parm, OutParm)
	struct FGuid                                  local_GUID;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent) == 0x000058, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent, DeltaPercent) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent::DeltaPercent' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent, DebugName) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent::DebugName' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent, ModifierStackHandle) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent::ModifierStackHandle' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent, local_GUID) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent::local_GUID' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ApplyForetell
// 0x00D0 (0x00D0 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ApplyForetell final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlushChargesImmediately;                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_newForetellAttempt;                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_newForetellFinal;                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_foretellsToAdd;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_previousForetell;                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_AddedForetell;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        local_ForetellTarget;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentMaxForetellCount_ReturnValue;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetForetellCountOnCharacter_ReturnValue;  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Select_Default_1;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleBuffInstance_C*>       CallFunc_CreateBuffStack_CreatedInstances;         // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ApplyForetell");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell) == 0x0000D0, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ApplyForetell");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Target) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Target' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, MaxCount) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::MaxCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Reason) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, FlushChargesImmediately) == 0x00000D, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::FlushChargesImmediately' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, local_newForetellAttempt) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::local_newForetellAttempt' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, local_newForetellFinal) == 0x000014, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::local_newForetellFinal' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, local_foretellsToAdd) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::local_foretellsToAdd' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, local_previousForetell) == 0x00001C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::local_previousForetell' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, local_AddedForetell) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::local_AddedForetell' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, local_ForetellTarget) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::local_ForetellTarget' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_GetCharacterBattleBase_IsValid) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Temp_bool_Variable) == 0x000049, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_GetCurrentMaxForetellCount_ReturnValue) == 0x00004C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_GetCurrentMaxForetellCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_IsInTwilightMode_ReturnValue) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Temp_int_Variable) == 0x00005C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Temp_int_Variable_1) == 0x000060, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, Temp_bool_Variable_1) == 0x000064, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, K2Node_Select_Default) == 0x000068, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000070, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000078, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_GetForetellCountOnCharacter_ReturnValue) == 0x00008C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_GetForetellCountOnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, K2Node_Select_Default_1) == 0x000090, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Min_ReturnValue) == 0x000098, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Multiply_IntInt_ReturnValue) == 0x00009C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_CreateBuffStack_CreatedInstances) == 0x0000A8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_CreateBuffStack_CreatedInstances' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetell, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetell::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ApplyForetellFX
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX final
{
public:
	int32                                         NumberToApply;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Targets;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX, NumberToApply) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX::NumberToApply' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX, Targets) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX::Targets' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.BPI_OnAnyCharacterAP_Changed
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed final
{
public:
	class UBP_BattleEvent_APChange_C*             AP_Change;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed, AP_Change) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed::AP_Change' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.BPI_OnAnyCharacterDamaged
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged, BattleDamage) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged::BattleDamage' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.CancelForetellTargetOverride
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        InitialTargetStats;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride, InitialTargetStats) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride::InitialTargetStats' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride, CallFunc_Map_Remove_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ConsumeForetell
// 0x0068 (0x0068 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlushChargesImmediately;                           // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConsumedStacks;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_ForetellToRemoveFinal;                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_ForetellToRemoveAttempt;                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_InitialForetell;                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_ForetellThatShouldBeConsummed;               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetForetellCountOnCharacterStats_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TryRemoveBuffStacks_ConsumedStacks;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell) == 0x000068, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, Target) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::Target' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, MaxCount) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::MaxCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, Reason) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, FlushChargesImmediately) == 0x00000D, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::FlushChargesImmediately' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, ConsumedStacks) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::ConsumedStacks' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, local_ForetellToRemoveFinal) == 0x000014, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::local_ForetellToRemoveFinal' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, local_ForetellToRemoveAttempt) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::local_ForetellToRemoveAttempt' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, Local_InitialForetell) == 0x00001C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::Local_InitialForetell' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, local_ForetellThatShouldBeConsummed) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::local_ForetellThatShouldBeConsummed' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_GetForetellCountOnCharacterStats_ReturnValue) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_GetForetellCountOnCharacterStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_GetCharacterBattleBase_IsValid) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_Min_ReturnValue) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_Round_ReturnValue) == 0x00005C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell, CallFunc_TryRemoveBuffStacks_ConsumedStacks) == 0x000060, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell::CallFunc_TryRemoveBuffStacks_ConsumedStacks' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ConsumeForetellFX
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX final
{
public:
	int32                                         NumberToConsume;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_jRPG_Character_Battle_Base_C* Targets;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX, NumberToConsume) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX::NumberToConsume' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX, Targets) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX::Targets' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.CreatePortraitWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget final
{
public:
	class UUserWidget*                            CreatedUserWidget;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_UniqueMechanicForetellState_C*     CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget) == 0x000020, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget, CreatedUserWidget) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget::CreatedUserWidget' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget, SlotIndex) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.DisableTwilightMode
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode, Temp_int_Variable) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode, Temp_byte_Variable) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_DisableTwilightMode::Temp_byte_Variable' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component
// 0x0358 (0x0358 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_UniqueMechanic_Foretell_C*         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NumberToApply;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Targets_1;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_FXForetellList_C*                   CallFunc_GetOrCreateListFX_List;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetSamplingRegionNames_ReturnValue;       // 0x0090(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NumberToConsume;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_jRPG_Character_Battle_Base_C* K2Node_CustomEvent_Targets;                        // 0x0128(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FXForetellList_C*                   CallFunc_GetOrCreateListFX_List_1;                 // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_2;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_2;           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_2;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleEvent_APChange_C*             K2Node_Event_AP_Change;                            // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    K2Node_Event_BattleDamage;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UAction_AddBuff_C*                K2Node_Event_BuffAddAction;                        // 0x01D0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0218(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_CharacterStats_1;                     // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_TargetCharacter;                      // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_SourceCharacter;                      // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_ReceivedDamages;                      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    K2Node_Event_BattleDamages;                        // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleListener_C> Temp_interface_Variable;                           // 0x02D0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> Temp_interface_Variable_1;                         // 0x02E0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_CharacterStats;                       // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DependencyRefCounter_C*       K2Node_Event_TurnStartDependencies;                // 0x0308(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEngageTwilightMode_Success;            // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTwilightModeExpired_ReturnValue;       // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0317(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldTriggerTwilight_ReturnValue;        // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_2;     // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component) == 0x000358, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, EntryPoint) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_CustomEvent_NumberToApply) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_CustomEvent_NumberToApply' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_CustomEvent_Targets_1) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_CustomEvent_Targets_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetOrCreateListFX_List) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetOrCreateListFX_List' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_Origin) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_BoxExtent) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_SphereRadius) == 0x000070, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000080, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetSamplingRegionNames_ReturnValue) == 0x000090, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetSamplingRegionNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000A8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_Origin_1) == 0x0000E0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_BoxExtent_1) == 0x0000F8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_SphereRadius_1) == 0x000110, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000118, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_CustomEvent_NumberToConsume) == 0x000120, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_CustomEvent_NumberToConsume' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_CustomEvent_Targets) == 0x000128, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_CustomEvent_Targets' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_bool_Has_Been_Initd_Variable) == 0x000130, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetOrCreateListFX_List_1) == 0x000138, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetOrCreateListFX_List_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_Origin_2) == 0x000150, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_Origin_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_BoxExtent_2) == 0x000168, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_BoxExtent_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetComponentBounds_SphereRadius_2) == 0x000180, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetComponentBounds_SphereRadius_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000188, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetOwner_ReturnValue) == 0x000190, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000198, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_AP_Change) == 0x0001A8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_AP_Change' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_BattleDamage) == 0x0001B0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_BuffAddAction) == 0x0001D0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_BuffAddAction' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001D8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_CreateDelegate_OutputDelegate) == 0x0001F0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Normal_ReturnValue) == 0x000200, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_CreateDelegate_OutputDelegate_1) == 0x000218, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000228, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_CharacterStats_1) == 0x000240, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_CharacterStats_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_int_Variable) == 0x000248, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_TargetCharacter) == 0x000250, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_SourceCharacter) == 0x000258, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_ReceivedDamages) == 0x000260, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_ReceivedDamages' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_BattleDamages) == 0x000268, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Subtract_IntInt_ReturnValue) == 0x000270, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000274, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000278, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000280, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000288, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000290, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002A0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Add_IntInt_ReturnValue) == 0x0002A4, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0002A8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_int_Variable_1) == 0x0002AC, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Less_IntInt_ReturnValue) == 0x0002B4, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_object_Variable) == 0x0002B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_object_Variable_1) == 0x0002C0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_bool_Variable) == 0x0002C8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_interface_Variable) == 0x0002D0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_interface_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_interface_Variable_1) == 0x0002E0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_interface_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Select_Default) == 0x0002F0, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0002F8, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_CharacterStats) == 0x000300, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_TurnStartDependencies) == 0x000308, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_TurnStartDependencies' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Array_Add_ReturnValue) == 0x000310, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_TryEngageTwilightMode_Success) == 0x000314, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_TryEngageTwilightMode_Success' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_IsInTwilightMode_ReturnValue) == 0x000315, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_HasTwilightModeExpired_ReturnValue) == 0x000316, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_HasTwilightModeExpired_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_EqualsObjects_ReturnValue) == 0x000317, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetBattleManager_ReturnValue) == 0x000318, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_ShouldTriggerTwilight_ReturnValue) == 0x000320, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_ShouldTriggerTwilight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, Temp_bool_IsClosed_Variable) == 0x000321, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000322, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, K2Node_Event_EndPlayReason) == 0x000323, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_GetBattleManager_ReturnValue_1) == 0x000328, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000330, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000338, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_Divide_DoubleDouble_A_ImplicitCast_2) == 0x000340, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_Divide_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000348, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00034C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000350, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000354, "Member 'BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.FlushQueuedCharges
// 0x0130 (0x0130 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges final
{
public:
	EBattleContext                                Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> local_finalCharges;                            // 0x0008(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> K2Node_MakeVariable_MakeVariableOutput;        // 0x0068(0x0050)()
	class UBP_BattleEvent_ForetellChargeChange_C* CallFunc_SpawnObject_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> CallFunc_GetCurrentChargesDelta_ReturnValue;   // 0x00C0(0x0050)()
	TArray<E_UniqueMechanic_Foretell_ChargeType>  CallFunc_Map_Keys_Keys;                            // 0x0110(0x0010)(ReferenceParm)
	E_UniqueMechanic_Foretell_ChargeType          CallFunc_Array_Get_Item;                           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges) == 0x000130, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, Reason) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, local_finalCharges) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::local_finalCharges' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, K2Node_MakeVariable_MakeVariableOutput) == 0x000068, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_SpawnObject_ReturnValue) == 0x0000B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_GetCurrentChargesDelta_ReturnValue) == 0x0000C0, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_GetCurrentChargesDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Map_Keys_Keys) == 0x000110, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Map_Find_Value) == 0x000128, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Map_Find_ReturnValue) == 0x00012C, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges, CallFunc_Less_IntInt_ReturnValue) == 0x00012D, "Member 'BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GatherNumberOfForetell
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell final
{
public:
	int32                                         ForetellNumber;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_NumberOfForetellOnEnnemies;                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetForetellCountOnCharacter_ReturnValue;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell) == 0x000038, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, ForetellNumber) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::ForetellNumber' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, local_NumberOfForetellOnEnnemies) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::local_NumberOfForetellOnEnnemies' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_GetBattleManager_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_GetForetellCountOnCharacter_ReturnValue) == 0x00002C, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_GetForetellCountOnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetActiveTwilightTurnsLeft
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft final
{
public:
	int32                                         TurnDuration;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft, TurnDuration) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft::TurnDuration' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft, CallFunc_IsInTwilightMode_ReturnValue) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetBonusTwilightDuration
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration, Stack) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration::Stack' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetChargeCount
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetChargeCount final
{
public:
	E_UniqueMechanic_Foretell_ChargeType          ChargeType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetChargeCount) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetChargeCount");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetChargeCount) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetChargeCount");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetChargeCount, ChargeType) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetChargeCount::ChargeType' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetChargeCount, ReturnValue) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetChargeCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetChargeCount, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetChargeCount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetChargeCount, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetChargeCount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetCurrentMaxForetellCount
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount, Temp_bool_Variable) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount, CallFunc_IsInTwilightMode_ReturnValue) == 0x000005, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount, CallFunc_Multiply_IntInt_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount, K2Node_Select_Default) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount::K2Node_Select_Default' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetForetellCountOnCharacter
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetForetellCountOnCharacterStats_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter, Target) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter::Target' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter, ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter, CallFunc_GetForetellCountOnCharacterStats_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter::CallFunc_GetForetellCountOnCharacterStats_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetForetellCountOnCharacterStats
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats) == 0x000018, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats, CharacterStats) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats, ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetMoonAPGainMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier) == 0x000004, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier::ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetOrCreateListFX
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_FXForetellList_C*                   List;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_FXForetellList_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_FXForetellList_C*                   CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX) == 0x000028, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX, Enemy) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX::Enemy' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX, List) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX::List' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetSunAPGainMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier) == 0x000004, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier::ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightDamageBonusForChargeCount
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount final
{
public:
	int32                                         ChargeCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UModifierStack_Float*                   CallFunc_GetTwilightExtraDamagePercent_Stack;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTwilightDamageBonusPerCharge_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount) == 0x000050, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, ChargeCount) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::ChargeCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_GetTwilightExtraDamagePercent_Stack) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_GetTwilightExtraDamagePercent_Stack' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_GetCurrentValue_ReturnValue) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_GetCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_GetTwilightDamageBonusPerCharge_ReturnValue) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_GetTwilightDamageBonusPerCharge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightDamageBonusPerCharge
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTwilightBaseDamageBonusPerCharge_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge, CallFunc_GetTwilightBaseDamageBonusPerCharge_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge::CallFunc_GetTwilightBaseDamageBonusPerCharge_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightDuration
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UModifierStack_Float*                   CallFunc_GetBonusTwilightDuration_Stack;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentValue_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration) == 0x000028, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration, CallFunc_GetBonusTwilightDuration_Stack) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration::CallFunc_GetBonusTwilightDuration_Stack' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration, CallFunc_GetCurrentValue_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration::CallFunc_GetCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration, CallFunc_Round_ReturnValue) == 0x000014, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration, CallFunc_Round_A_ImplicitCast) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration::CallFunc_Round_A_ImplicitCast' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightExtraDamagePercent
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent, Stack) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent::Stack' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.HasCharges
// 0x0090 (0x0090 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_HasCharges final
{
public:
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> Charges_0;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_UniqueMechanic_Foretell_ChargeType>  CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          CallFunc_Array_Get_Item;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_HasCharges) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_HasCharges");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_HasCharges) == 0x000090, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_HasCharges");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, Charges_0) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::Charges_0' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, ReturnValue) == 0x000050, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Map_Find_Value) == 0x000074, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Map_Find_Value_1) == 0x000088, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Map_Find_ReturnValue_1) == 0x00008C, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasCharges, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008D, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasCharges::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.HasTwilightModeExpired
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstanceWrapper_C*        CallFunc_FindWrapper_BuffInstanceWrappers;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasExpired_HasExpired;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired) == 0x000020, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired, CallFunc_FindWrapper_BuffInstanceWrappers) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired::CallFunc_FindWrapper_BuffInstanceWrappers' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired, CallFunc_HasExpired_HasExpired) == 0x000019, "Member 'BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired::CallFunc_HasExpired_HasExpired' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.IsInTwilightMode
// 0x000C (0x000C - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChargeCount_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode) == 0x00000C, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode, CallFunc_GetChargeCount_ReturnValue) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode::CallFunc_GetChargeCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.IsTurnStartInProgress
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress final
{
public:
	bool                                          InProgress;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress) == 0x000001, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress, InProgress) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress::InProgress' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.MarkFXForDestruction
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction) == 0x000020, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction, NiagaraSystem) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterDealtDamages
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Damages;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProcessedDamages;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages) == 0x000018, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages, CharacterStats) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages, Damages) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages::Damages' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages, ProcessedDamages) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages::ProcessedDamages' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterKilled
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled, CharacterStats) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled::CharacterStats' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterReceivedDamages
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ReceivedDamages;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages) == 0x000020, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages, TargetCharacter) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages, SourceCharacter) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages::SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages, ReceivedDamages) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages::ReceivedDamages' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages, BattleDamages) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages::BattleDamages' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterTurnStart
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DependencyRefCounter_C*       TurnStartDependencies;                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart, CharacterStats) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart, TurnStartDependencies) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart::TurnStartDependencies' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnTimerElapsed
// 0x0060 (0x0060 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed final
{
public:
	class UNiagaraComponent*                      local_NiagaraSystemToDestroy;                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTimerHandle>                   CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed) == 0x000060, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, local_NiagaraSystemToDestroy) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::local_NiagaraSystemToDestroy' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Map_Remove_ReturnValue) == 0x000039, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000049, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x00004C, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTimerElapsed::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnTurnEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd final
{
public:
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd) == 0x000001, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTurnEnd::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnTurnStart
// 0x0028 (0x0028 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OnTurnStart final
{
public:
	struct FSoftObjectPath                        Test;                                              // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GatherNumberOfForetell_ForetellNumber;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OnTurnStart) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OnTurnStart");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OnTurnStart) == 0x000028, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OnTurnStart");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTurnStart, Test) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTurnStart::Test' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OnTurnStart, CallFunc_GatherNumberOfForetell_ForetellNumber) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_OnTurnStart::CallFunc_GatherNumberOfForetell_ForetellNumber' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OverrideCardMap
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap final
{
public:
	TMap<E_UniqueMechanic_Foretell_CardType, int32> NewCardMap;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap) == 0x000050, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap, NewCardMap) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap::NewCardMap' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OverrideForetellTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        InitialTargetStats;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        NewTargetStats;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget) == 0x000010, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget, InitialTargetStats) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget::InitialTargetStats' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget, NewTargetStats) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget::NewTargetStats' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ProcessAddBuffAction
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction final
{
public:
	const class UAction_AddBuff_C*                BuffAddAction;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction, BuffAddAction) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction::BuffAddAction' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.QueueCharges
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_QueueCharges final
{
public:
	E_UniqueMechanic_Foretell_ChargeType          ChargeType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_QueueCharges) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_QueueCharges");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_QueueCharges) == 0x000008, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_QueueCharges");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_QueueCharges, ChargeType) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_QueueCharges::ChargeType' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_QueueCharges, Count) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_QueueCharges::Count' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.RemoveChargeBuffs
// 0x0020 (0x0020 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs) == 0x000020, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveChargeBuffs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.RemoveTwilightDurationModifier
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier final
{
public:
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGuid                                  local_GUID;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier) == 0x000040, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier, OutModifierHandle) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier::OutModifierHandle' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier, local_GUID) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier::local_GUID' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.RemoveTwilightExtraDamagePercent
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent final
{
public:
	struct FSF_ModifierStackEntryHandle           ModifierHandle_;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGuid                                  local_GUID;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent) == 0x000040, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent, ModifierHandle_) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent::ModifierHandle_' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent, local_GUID) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent::local_GUID' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetAllChargesInternal
// 0x0080 (0x0080 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal final
{
public:
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> AllCharges;                                    // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_UniqueMechanic_Foretell_ChargeType>  CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          CallFunc_Array_Get_Item;                           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal) == 0x000080, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, AllCharges) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::AllCharges' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000075, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal, CallFunc_Map_Find_ReturnValue) == 0x00007C, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetChargeCountInternal
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal final
{
public:
	E_UniqueMechanic_Foretell_ChargeType          ChargeType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChargeCount;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_previousValue;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal) == 0x000018, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal, ChargeType) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal::ChargeType' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal, ChargeCount) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal::ChargeCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal, Reason) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal, local_previousValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal::local_previousValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetMoonAPGainMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier final
{
public:
	int32                                         NewSunAPGainMultiplier;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier) == 0x000004, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier, NewSunAPGainMultiplier) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier::NewSunAPGainMultiplier' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetSunAPGainMultiplier
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier final
{
public:
	int32                                         NewSunAPGainMultiplier;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier) == 0x000004, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier, NewSunAPGainMultiplier) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier::NewSunAPGainMultiplier' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ShouldTriggerTwilight
// 0x0014 (0x0014 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable;                                // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight) == 0x000014, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, Temp_byte_Variable) == 0x000001, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, Temp_byte_Variable_1) == 0x000002, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_Map_Find_Value) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_Map_Find_Value_1) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_Map_Find_ReturnValue_1) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000012, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryAddChargeTypeInternal
// 0x000C (0x000C - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal final
{
public:
	E_UniqueMechanic_Foretell_ChargeType          ChargeType;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChargeCount;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlushImmediately;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleContext                                Reason;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal) == 0x00000C, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal, ChargeType) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal::ChargeType' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal, ChargeCount) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal::ChargeCount' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal, FlushImmediately) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal::FlushImmediately' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal, Reason) == 0x000009, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal::Reason' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal, CallFunc_IsInTwilightMode_ReturnValue) == 0x00000A, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryChangeActiveTwilightModeDuration
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration final
{
public:
	int32                                         DeltaTurns;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuff_Foretell_Charge_Twilight_C* K2Node_DynamicCast_AsBP_Battle_Buff_Foretell_Charge_Twilight; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration) == 0x000038, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, DeltaTurns) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::DeltaTurns' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, CallFunc_IsInTwilightMode_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, K2Node_DynamicCast_AsBP_Battle_Buff_Foretell_Charge_Twilight) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::K2Node_DynamicCast_AsBP_Battle_Buff_Foretell_Charge_Twilight' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryConsumeCharges
// 0x0138 (0x0138 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges final
{
public:
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> ChargesToConsume;                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Success;                                           // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> local_newCharges;                              // 0x0058(0x0050)(Edit, BlueprintVisible)
	TArray<E_UniqueMechanic_Foretell_ChargeType>  CallFunc_Map_Keys_Keys;                            // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          CallFunc_Array_Get_Item;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> K2Node_MakeVariable_MakeVariableOutput;        // 0x00E8(0x0050)()
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges) == 0x000138, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, ChargesToConsume) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::ChargesToConsume' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, Success) == 0x000050, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::Success' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, local_newCharges) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::local_newCharges' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Map_Keys_Keys) == 0x0000A8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Map_Find_Value) == 0x0000C4, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x0000C9, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0000D0, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Map_Find_Value_1) == 0x0000D8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Map_Find_ReturnValue_1) == 0x0000DC, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges, K2Node_MakeVariable_MakeVariableOutput) == 0x0000E8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryEngageTwilightMode
// 0x00F0 (0x00F0 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_createdTwilightCharges;                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> local_previousCharges;                         // 0x0008(0x0050)(Edit, BlueprintVisible)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable;                                // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable_1;                              // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable_2;                              // 0x0061(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable_3;                              // 0x0062(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable_4;                              // 0x0063(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> K2Node_MakeVariable_MakeVariableOutput;        // 0x0068(0x0050)()
	int32                                         CallFunc_GetTwilightDuration_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable_5;                              // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuff_Foretell_Charge_Twilight_C* CallFunc_SpawnObject_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldTriggerTwilight_ReturnValue;        // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode) == 0x0000F0, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Success) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Success' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, local_createdTwilightCharges) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::local_createdTwilightCharges' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, local_previousCharges) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::local_previousCharges' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_byte_Variable) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_int_Variable) == 0x00005C, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_byte_Variable_1) == 0x000060, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_byte_Variable_2) == 0x000061, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_byte_Variable_3) == 0x000062, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_byte_Variable_4) == 0x000063, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, K2Node_MakeVariable_MakeVariableOutput) == 0x000068, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_GetTwilightDuration_ReturnValue) == 0x0000B8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_GetTwilightDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_int_Variable_1) == 0x0000BC, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, Temp_byte_Variable_5) == 0x0000C0, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_SpawnObject_ReturnValue) == 0x0000C8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_ActivateBuff_Success) == 0x0000D4, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_Map_Find_ReturnValue) == 0x0000DC, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_Map_Find_Value_1) == 0x0000E0, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_Map_Find_ReturnValue_1) == 0x0000E4, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_ShouldTriggerTwilight_ReturnValue) == 0x0000E5, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_ShouldTriggerTwilight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryRemoveUniqueMechanicWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget) == 0x000001, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget) == 0x000001, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryRemoveUniqueMechanicWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryUnlockAchievementScielForetell
// 0x0018 (0x0018 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell final
{
public:
	int32                                         ConsumedForetell;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTwilightMode_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell) == 0x000018, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell, ConsumedForetell) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell::ConsumedForetell' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell, CallFunc_GetAchievementManager_ReturnValue) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell, CallFunc_IsInTwilightMode_ReturnValue) == 0x000011, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell::CallFunc_IsInTwilightMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateChargeBuffs
// 0x0098 (0x0098 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs final
{
public:
	class UClass*                                 local_buffClass;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UniqueMechanic_Foretell_ChargeType          Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_UniqueMechanic_Foretell_ChargeType>  K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	E_UniqueMechanic_Foretell_ChargeType          CallFunc_Array_Get_Item;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleBuffInstance_C*>       CallFunc_CreateBuffStack_CreatedInstances;         // 0x0078(0x0010)(ReferenceParm)
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs) == 0x000098, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, local_buffClass) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::local_buffClass' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_int_Variable) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_byte_Variable) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_class_Variable) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_class_Variable_1) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_class_Variable_2) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_class_Variable_3) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, K2Node_Select_Default) == 0x000068, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Map_Find_ReturnValue) == 0x000074, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Greater_IntInt_ReturnValue) == 0x000075, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_CreateBuffStack_CreatedInstances) == 0x000078, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_CreateBuffStack_CreatedInstances' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateChargeBuffs::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateForetellCardsMap
// 0x0004 (0x0004 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap final
{
public:
	int32                                         Number_of_Foretell;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap) == 0x000004, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap) == 0x000004, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap, Number_of_Foretell) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap::Number_of_Foretell' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateTwilightChargeDamagePercentModifier
// 0x0040 (0x0040 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier final
{
public:
	int32                                         local_twilightDamagePercent;                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier) == 0x000040, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, local_twilightDamagePercent) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::local_twilightDamagePercent' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Map_Find_Value) == 0x000034, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightChargeDamagePercentModifier::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateTwilightDuration
// 0x0050 (0x0050 - 0x0000)
struct BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration final
{
public:
	int32                                         local_twilightDuration;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration) == 0x000008, "Wrong alignment on BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration");
static_assert(sizeof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration) == 0x000050, "Wrong size on BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, local_twilightDuration) == 0x000000, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::local_twilightDuration' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Map_Find_ReturnValue) == 0x000044, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_UniqueMechanic_Foretell_Component_C_UpdateTwilightDuration::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

