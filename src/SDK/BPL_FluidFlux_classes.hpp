#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_FluidFlux

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_FluidFlux.BPL_FluidFlux_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_FluidFlux_C final : public UBlueprintFunctionLibrary
{
public:
	static void SetTexture2DConfig(class UTexture2D* RenderTargetObject, ETextureFilter Filter, bool SRGB, ETextureAddress Address_X, ETextureAddress Address_Y, ETextureMipGenSettings Mip_Gen_Settings, class UObject* __WorldContext);
	static void SetRenderTargetConfig(class UTextureRenderTarget2D* RenderTargetObject, ETextureFilter Filter, bool SRGB, ETextureAddress Address_X, ETextureAddress Address_Y, class UObject* __WorldContext);
	static void SetRectTransform2D(class UMaterialInstanceDynamic*& Target, const struct FTransform& InTransform, class UObject* __WorldContext);
	static void RecreateRenderTarget(class UTextureRenderTarget2D* CurrentTexture, int32 Width, int32 Height, ETextureRenderTargetFormat Format, const struct FLinearColor& ClearColor, uint8 LOD, bool GenerateMipmaps, class UObject* __WorldContext, class UTextureRenderTarget2D** newTexture);
	static void IsValuePowerOfTwo(int32 Value, class UObject* __WorldContext, bool* Result);
	static void IsPointPowerOfTwo(const struct FIntPoint& Value, class UObject* __WorldContext, bool* Result);
	static void GetUndefiniedHeight(class UObject* __WorldContext, double* NewParam);
	static void GetEngineVersionInt(class UObject* __WorldContext, int32* Integer);
	static void CheckRenderTarget(int32 Width, int32 Height, ETextureRenderTargetFormat Format, class UTextureRenderTarget2D* CurrentRenderTarget, class UObject* __WorldContext, bool* TheSame);

	void MakeVolumeLocalTransform(const struct FVector& ExtraSize, const struct FVector& Scale, double ZOffsetScale, class UObject* __WorldContext, struct FTransform* NewParam);

	void GetBordersVector(int32 StateAreaBorders, class UObject* __WorldContext, struct FLinearColor* LinearColor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_FluidFlux_C">();
	}
	static class UBPL_FluidFlux_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_FluidFlux_C>();
	}
};
static_assert(alignof(UBPL_FluidFlux_C) == 0x000008, "Wrong alignment on UBPL_FluidFlux_C");
static_assert(sizeof(UBPL_FluidFlux_C) == 0x000028, "Wrong size on UBPL_FluidFlux_C");

}

