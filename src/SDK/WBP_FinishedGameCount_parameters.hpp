#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_FinishedGameCount

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_FinishedGameCount.WBP_FinishedGameCount_C.SetFinishedGameCount
// 0x0030 (0x0030 - 0x0000)
struct WBP_FinishedGameCount_C_SetFinishedGameCount final
{
public:
	int32                                         InFinishedGameCount;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FinishedGameCount_C_SetFinishedGameCount) == 0x000008, "Wrong alignment on WBP_FinishedGameCount_C_SetFinishedGameCount");
static_assert(sizeof(WBP_FinishedGameCount_C_SetFinishedGameCount) == 0x000030, "Wrong size on WBP_FinishedGameCount_C_SetFinishedGameCount");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, InFinishedGameCount) == 0x000000, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::InFinishedGameCount' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_bool_Variable) == 0x000004, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000006, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000007, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000A, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable) == 0x000020, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_bool_Variable_1) == 0x000022, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, K2Node_Select_Default) == 0x000023, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_2) == 0x000024, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_3) == 0x000025, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_bool_Variable_2) == 0x000026, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, K2Node_Select_Default_1) == 0x000027, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_4) == 0x000028, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_5) == 0x000029, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_6) == 0x00002A, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, K2Node_Select_Default_2) == 0x00002B, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_byte_Variable_7) == 0x00002C, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, Temp_bool_Variable_3) == 0x00002D, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_SetFinishedGameCount, K2Node_Select_Default_3) == 0x00002E, "Member 'WBP_FinishedGameCount_C_SetFinishedGameCount::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_FinishedGameCount.WBP_FinishedGameCount_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_FinishedGameCount_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FinishedGameCount_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_FinishedGameCount_C_PreConstruct");
static_assert(sizeof(WBP_FinishedGameCount_C_PreConstruct) == 0x000001, "Wrong size on WBP_FinishedGameCount_C_PreConstruct");
static_assert(offsetof(WBP_FinishedGameCount_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_FinishedGameCount_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_FinishedGameCount.WBP_FinishedGameCount_C.ExecuteUbergraph_WBP_FinishedGameCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount) == 0x000004, "Wrong alignment on WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount");
static_assert(sizeof(WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount) == 0x000008, "Wrong size on WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount");
static_assert(offsetof(WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount, EntryPoint) == 0x000000, "Member 'WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_FinishedGameCount_C_ExecuteUbergraph_WBP_FinishedGameCount::K2Node_Event_IsDesignTime' has a wrong offset!");

}

