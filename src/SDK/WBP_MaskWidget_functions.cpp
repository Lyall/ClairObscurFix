#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MaskWidget

#include "Basic.hpp"

#include "WBP_MaskWidget_classes.hpp"
#include "WBP_MaskWidget_parameters.hpp"


namespace SDK
{

// Function WBP_MaskWidget.WBP_MaskWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_MaskWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.ExecuteUbergraph_WBP_MaskWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::ExecuteUbergraph_WBP_MaskWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "ExecuteUbergraph_WBP_MaskWidget");

	Params::WBP_MaskWidget_C_ExecuteUbergraph_WBP_MaskWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.GetMaskColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const E_Transform_Masks_Mechanic&       Mask                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::GetMaskColor(const E_Transform_Masks_Mechanic& Mask, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "GetMaskColor");

	Params::WBP_MaskWidget_C_GetMaskColor Parms{};

	Parms.Mask = Mask;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.OnSetMask
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Transform_Masks_Mechanic              PreviousMask                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Transform_Masks_Mechanic              NewMask                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewMeter                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::OnSetMask(E_Transform_Masks_Mechanic PreviousMask, E_Transform_Masks_Mechanic NewMask, int32 NewMeter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "OnSetMask");

	Params::WBP_MaskWidget_C_OnSetMask Parms{};

	Parms.PreviousMask = PreviousMask;
	Parms.NewMask = NewMask;
	Parms.NewMeter = NewMeter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "PreConstruct");

	Params::WBP_MaskWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.SetBrushFromLazyTexture
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>& InactiveTexture                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        ActiveTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    IsActiveAtStart                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::SetBrushFromLazyTexture(const TSoftObjectPtr<class UTexture2D>& InactiveTexture, TSoftObjectPtr<class UTexture2D> ActiveTexture, bool IsActiveAtStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "SetBrushFromLazyTexture");

	Params::WBP_MaskWidget_C_SetBrushFromLazyTexture Parms{};

	Parms.InactiveTexture = InactiveTexture;
	Parms.ActiveTexture = ActiveTexture;
	Parms.IsActiveAtStart = IsActiveAtStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.SetCurrentMask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Transform_Masks_Mechanic              CurrentMask                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActiveAtStart                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::SetCurrentMask(E_Transform_Masks_Mechanic CurrentMask, bool IsActiveAtStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "SetCurrentMask");

	Params::WBP_MaskWidget_C_SetCurrentMask Parms{};

	Parms.CurrentMask = CurrentMask;
	Parms.IsActiveAtStart = IsActiveAtStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.SetIsActive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::SetIsActive(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "SetIsActive");

	Params::WBP_MaskWidget_C_SetIsActive Parms{};

	Parms.IsActive_0 = IsActive_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWidget.WBP_MaskWidget_C.SetMaskComponent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_UniqueMechanic_TransformMasks_Component_C*TransformMaskComponent_0                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWidget_C::SetMaskComponent(class UBP_UniqueMechanic_TransformMasks_Component_C* TransformMaskComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWidget_C", "SetMaskComponent");

	Params::WBP_MaskWidget_C_SetMaskComponent Parms{};

	Parms.TransformMaskComponent_0 = TransformMaskComponent_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

