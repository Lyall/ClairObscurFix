#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameAction_CharacterJoinGroup

#include "Basic.hpp"

#include "BP_GameAction_CharacterJoinGroup_classes.hpp"
#include "BP_GameAction_CharacterJoinGroup_parameters.hpp"


namespace SDK
{

// Function BP_GameAction_CharacterJoinGroup.BP_GameAction_CharacterJoinGroup_C.BPI_GetDependencies
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>*    Classes                                                (Parm, OutParm)
// TArray<TSoftObjectPtr<class UObject>>*  Assets                                                 (Parm, OutParm)
// TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>*ExternalDependencies                                   (Parm, OutParm)

void UBP_GameAction_CharacterJoinGroup_C::BPI_GetDependencies(TArray<TSoftClassPtr<class UClass>>* Classes, TArray<TSoftObjectPtr<class UObject>>* Assets, TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>* ExternalDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameAction_CharacterJoinGroup_C", "BPI_GetDependencies");

	Params::BP_GameAction_CharacterJoinGroup_C_BPI_GetDependencies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Classes != nullptr)
		*Classes = std::move(Parms.Classes);

	if (Assets != nullptr)
		*Assets = std::move(Parms.Assets);

	if (ExternalDependencies != nullptr)
		*ExternalDependencies = std::move(Parms.ExternalDependencies);
}


// Function BP_GameAction_CharacterJoinGroup.BP_GameAction_CharacterJoinGroup_C.GetInstanceClass
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UGameActionInstance>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

TSubclassOf<class UGameActionInstance> UBP_GameAction_CharacterJoinGroup_C::GetInstanceClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameAction_CharacterJoinGroup_C", "GetInstanceClass");

	Params::BP_GameAction_CharacterJoinGroup_C_GetInstanceClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameAction_CharacterJoinGroup.BP_GameAction_CharacterJoinGroup_C.ValidateGameAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString&                          PropertyPath                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// bool&                                   ExploreAssetChildren                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameAction_CharacterJoinGroup_C::ValidateGameAction(TArray<class FText>& ErrorMessages, class FString& PropertyPath, bool& ExploreAssetChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameAction_CharacterJoinGroup_C", "ValidateGameAction");

	Params::BP_GameAction_CharacterJoinGroup_C_ValidateGameAction Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);
	Parms.PropertyPath = std::move(PropertyPath);
	Parms.ExploreAssetChildren = ExploreAssetChildren;

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);
	PropertyPath = std::move(Parms.PropertyPath);
	ExploreAssetChildren = Parms.ExploreAssetChildren;
}

}

