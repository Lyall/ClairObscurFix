#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Monolith

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_QuestStatus_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Monolith.BP_Monolith_C
// 0x0060 (0x02F0 - 0x0290)
class ABP_Monolith_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_33monolith;                                     // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   hair_mesh;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   paintress_pose;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   monolith;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        VeinsGlow;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Number_Glow;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Three3_Progress;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Glow;                                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNumberMaterialMasked;                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void RefreshMonolith();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_Monolith(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Monolith_C">();
	}
	static class ABP_Monolith_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Monolith_C>();
	}
};
static_assert(alignof(ABP_Monolith_C) == 0x000008, "Wrong alignment on ABP_Monolith_C");
static_assert(sizeof(ABP_Monolith_C) == 0x0002F0, "Wrong size on ABP_Monolith_C");
static_assert(offsetof(ABP_Monolith_C, UberGraphFrame) == 0x000290, "Member 'ABP_Monolith_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, SM_33monolith) == 0x000298, "Member 'ABP_Monolith_C::SM_33monolith' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, hair_mesh) == 0x0002A0, "Member 'ABP_Monolith_C::hair_mesh' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, paintress_pose) == 0x0002A8, "Member 'ABP_Monolith_C::paintress_pose' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, monolith) == 0x0002B0, "Member 'ABP_Monolith_C::monolith' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_Monolith_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, VeinsGlow) == 0x0002C0, "Member 'ABP_Monolith_C::VeinsGlow' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, Number_Glow) == 0x0002C8, "Member 'ABP_Monolith_C::Number_Glow' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, Three3_Progress) == 0x0002D0, "Member 'ABP_Monolith_C::Three3_Progress' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, Glow) == 0x0002D8, "Member 'ABP_Monolith_C::Glow' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, DynamicMaterialInstance) == 0x0002E0, "Member 'ABP_Monolith_C::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_Monolith_C, IsNumberMaterialMasked) == 0x0002E8, "Member 'ABP_Monolith_C::IsNumberMaterialMasked' has a wrong offset!");

}

