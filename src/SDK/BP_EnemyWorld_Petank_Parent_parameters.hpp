#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyWorld_Petank_Parent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_PetankType_structs.hpp"


namespace SDK::Params
{

// Function BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C.BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature final
{
public:
	class ABP_FleePoint_C*                        Previous;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FleePoint_C*                        Current;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature");
static_assert(sizeof(BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature) == 0x000010, "Wrong size on BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature, Previous) == 0x000000, "Member 'BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature::Previous' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature, Current) == 0x000008, "Member 'BP_EnemyWorld_Petank_Parent_C_BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature::Current' has a wrong offset!");

// Function BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C.ExecuteUbergraph_BP_EnemyWorld_Petank_Parent
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FleePoint_C*                        K2Node_ComponentBoundEvent_Previous;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FleePoint_C*                        K2Node_ComponentBoundEvent_Current;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent) == 0x000008, "Wrong alignment on BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent");
static_assert(sizeof(BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent) == 0x000018, "Wrong size on BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent, EntryPoint) == 0x000000, "Member 'BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent, K2Node_ComponentBoundEvent_Previous) == 0x000008, "Member 'BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent::K2Node_ComponentBoundEvent_Previous' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent, K2Node_ComponentBoundEvent_Current) == 0x000010, "Member 'BP_EnemyWorld_Petank_Parent_C_ExecuteUbergraph_BP_EnemyWorld_Petank_Parent::K2Node_ComponentBoundEvent_Current' has a wrong offset!");

// Function BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C.GetPetankColor
// 0x0094 (0x0094 - 0x0000)
struct BP_EnemyWorld_Petank_Parent_C_GetPetankColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PetankType                                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor) == 0x000004, "Wrong alignment on BP_EnemyWorld_Petank_Parent_C_GetPetankColor");
static_assert(sizeof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor) == 0x000094, "Wrong size on BP_EnemyWorld_Petank_Parent_C_GetPetankColor");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, ReturnValue) == 0x000000, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_byte_Variable) == 0x000010, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable) == 0x000014, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable_1) == 0x000024, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable_2) == 0x000034, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable_3) == 0x000044, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable_4) == 0x000054, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable_5) == 0x000064, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, Temp_struct_Variable_6) == 0x000074, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_GetPetankColor, K2Node_Select_Default) == 0x000084, "Member 'BP_EnemyWorld_Petank_Parent_C_GetPetankColor::K2Node_Select_Default' has a wrong offset!");

// Function BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C.OnBattleFled
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyWorld_Petank_Parent_C_OnBattleFled final
{
public:
	struct FTransform                             CallFunc_GetInitialTransform_ReturnValue;          // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyWorld_Petank_Parent_C_OnBattleFled) == 0x000010, "Wrong alignment on BP_EnemyWorld_Petank_Parent_C_OnBattleFled");
static_assert(sizeof(BP_EnemyWorld_Petank_Parent_C_OnBattleFled) == 0x000070, "Wrong size on BP_EnemyWorld_Petank_Parent_C_OnBattleFled");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_OnBattleFled, CallFunc_GetInitialTransform_ReturnValue) == 0x000000, "Member 'BP_EnemyWorld_Petank_Parent_C_OnBattleFled::CallFunc_GetInitialTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_OnBattleFled, CallFunc_GetCustomGI_ReturnValue) == 0x000060, "Member 'BP_EnemyWorld_Petank_Parent_C_OnBattleFled::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_OnBattleFled, CallFunc_GetGlobalObjectID_ObjectID) == 0x000068, "Member 'BP_EnemyWorld_Petank_Parent_C_OnBattleFled::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");

// Function BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C.ShouldEncounterCapsuleGenerateOverlaps
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldEncounterCapsuleGenerateOverlaps_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FleePoint_C*                        CallFunc_GetCurrentFleePoint_FleePoint;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps) == 0x000008, "Wrong alignment on BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps");
static_assert(sizeof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps) == 0x000018, "Wrong size on BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps, ReturnValue) == 0x000000, "Member 'BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_ShouldEncounterCapsuleGenerateOverlaps_ReturnValue) == 0x000001, "Member 'BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_ShouldEncounterCapsuleGenerateOverlaps_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_GetCurrentFleePoint_FleePoint) == 0x000008, "Member 'BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_GetCurrentFleePoint_FleePoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_EnemyWorld_Petank_Parent_C_ShouldEncounterCapsuleGenerateOverlaps::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyWorld_Petank_Parent_C_UserConstructionScript final
{
public:
	struct FLinearColor                           CallFunc_GetPetankColor_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyWorld_Petank_Parent_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_EnemyWorld_Petank_Parent_C_UserConstructionScript");
static_assert(sizeof(BP_EnemyWorld_Petank_Parent_C_UserConstructionScript) == 0x000010, "Wrong size on BP_EnemyWorld_Petank_Parent_C_UserConstructionScript");
static_assert(offsetof(BP_EnemyWorld_Petank_Parent_C_UserConstructionScript, CallFunc_GetPetankColor_ReturnValue) == 0x000000, "Member 'BP_EnemyWorld_Petank_Parent_C_UserConstructionScript::CallFunc_GetPetankColor_ReturnValue' has a wrong offset!");

}

