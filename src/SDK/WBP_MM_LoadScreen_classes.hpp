#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MM_LoadScreen

#include "Basic.hpp"

#include "EModalUIResponse_structs.hpp"
#include "Engine_structs.hpp"
#include "FLevelDataEntry_structs.hpp"
#include "CommonUI_classes.hpp"
#include "E_jRPG_YesNoQuestions_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MM_LoadScreen.WBP_MM_LoadScreen_C
// 0x0110 (0x0540 - 0x0430)
class UWBP_MM_LoadScreen_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_MM_BackupSavesBox_C*               BackupSavesBox;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonListView*                        SaveSlotsListView;                                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HeadingText_C*                     ScreenHeading;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Back;                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_DeleteSave;            // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_ExpandSlot;            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_LoadSave;              // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnModalPopupOpened;                                // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnModalPopupClosed;                                // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDataTableRowHandle                    SDPopUp;                                           // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void()>              OnBackToTitlePressed;                              // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsNewGame;                                         // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FocusedBackUpSave;                                 // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UBP_SaveSlotViewItem_C*                 FocusedSaveSlotItem;                               // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnNewSlotSelected;                                 // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   NewGameTitleText;                                  // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   LoadGameTitleText;                                 // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(bool IsFound, const struct FFLevelDataEntry& LevelData)> OnFocusedLevelChanged; // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDataTableRowHandle                    SDLoadGame;                                        // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class UBP_SaveGameData_C*>             BackupSaveDatas;                                   // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         BackupSaveNames;                                   // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ShowSaveModalPopup(const class FText& PopupTitle, const class FText& PopupMessage, E_jRPG_YesNoQuestions DecisionToMake, bool IsHoldConfirm, class UWBP_ModalPopup_C** ModalPopup);
	void SetIsNewGameState(bool IsNewGame_0);
	void SetFocusedSaveSlot(class UBP_SaveSlotViewItem_C* SaveSlotItem, const struct FVector2D& AbsolutePos);
	void SetFocusedBackUpSave(const class FString& FocusedSave);
	void RetrieveBackupSaveDatasIfNeeded();
	void OnSaveSlotNavigated(class UBP_SaveSlotViewItem_C* SaveSlotItem, const struct FVector2D& AbsolutePos);
	void OnSaveSlotClicked(class UCommonButtonBase* Button);
	void OnNextTick();
	void OnNewSaveResponse(bool IsAccepted);
	void OnLoadResponse(bool IsAccepted);
	void OnLoadingErrorPopupClosed(EModalUIResponse InUserResponse);
	void OnFinished_BFB71B59418CAC9687E579AFC80ADD7E();
	void OnDeleteResponse(bool IsAccepted);
	void OnActionBarRebuild(class UWBP_CommonActionBarContainer_C* ActionBarContainerWidget);
	void NextTickAfterClosing();
	void LoadSave();
	void LoadAvailableSaves();
	class UWBP_CommonActionBarContainer_C* GetActionBar();
	void ExecuteUbergraph_WBP_MM_LoadScreen(int32 EntryPoint);
	void Continue_after_saving_SaveContainer();
	void CloseModal();
	void BP_OnDeactivated();
	void BP_OnActivated();
	void BndEvt__WBP_MM_LoadScreen_WBP_CommonBoundActionButton_LoadSave_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_MM_LoadScreen_WBP_CommonBoundActionButton_ExpandSlot_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_MM_LoadScreen_WBP_CommonBoundActionButton_DeleteSave_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_MM_LoadScreen_WBP_CommonBoundActionButton_Back_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_MM_LoadScreen_SaveSlotsListView_K2Node_ComponentBoundEvent_1_OnListEntryGeneratedDynamic__DelegateSignature(class UUserWidget* Widget);
	void BndEvt__WBP_MM_LoadScreen_BackupSavesBox_K2Node_ComponentBoundEvent_6_OnBackupSaveClicked__DelegateSignature(const class FString& Save);
	void BndEvt__WBP_MM_LoadScreen_BackupSavesBox_K2Node_ComponentBoundEvent_4_OnBackupSaveNavigated__DelegateSignature(const class FString& Save);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MM_LoadScreen_C">();
	}
	static class UWBP_MM_LoadScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MM_LoadScreen_C>();
	}
};
static_assert(alignof(UWBP_MM_LoadScreen_C) == 0x000008, "Wrong alignment on UWBP_MM_LoadScreen_C");
static_assert(sizeof(UWBP_MM_LoadScreen_C) == 0x000540, "Wrong size on UWBP_MM_LoadScreen_C");
static_assert(offsetof(UWBP_MM_LoadScreen_C, UberGraphFrame) == 0x000430, "Member 'UWBP_MM_LoadScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, BackupSavesBox) == 0x000438, "Member 'UWBP_MM_LoadScreen_C::BackupSavesBox' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, SaveSlotsListView) == 0x000440, "Member 'UWBP_MM_LoadScreen_C::SaveSlotsListView' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, ScreenHeading) == 0x000448, "Member 'UWBP_MM_LoadScreen_C::ScreenHeading' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, WBP_CommonBoundActionButton_Back) == 0x000450, "Member 'UWBP_MM_LoadScreen_C::WBP_CommonBoundActionButton_Back' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, WBP_CommonBoundActionButton_DeleteSave) == 0x000458, "Member 'UWBP_MM_LoadScreen_C::WBP_CommonBoundActionButton_DeleteSave' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, WBP_CommonBoundActionButton_ExpandSlot) == 0x000460, "Member 'UWBP_MM_LoadScreen_C::WBP_CommonBoundActionButton_ExpandSlot' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, WBP_CommonBoundActionButton_LoadSave) == 0x000468, "Member 'UWBP_MM_LoadScreen_C::WBP_CommonBoundActionButton_LoadSave' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, OnModalPopupOpened) == 0x000470, "Member 'UWBP_MM_LoadScreen_C::OnModalPopupOpened' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, OnModalPopupClosed) == 0x000480, "Member 'UWBP_MM_LoadScreen_C::OnModalPopupClosed' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, SDPopUp) == 0x000490, "Member 'UWBP_MM_LoadScreen_C::SDPopUp' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, OnBackToTitlePressed) == 0x0004A0, "Member 'UWBP_MM_LoadScreen_C::OnBackToTitlePressed' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, IsNewGame) == 0x0004B0, "Member 'UWBP_MM_LoadScreen_C::IsNewGame' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, FocusedBackUpSave) == 0x0004B8, "Member 'UWBP_MM_LoadScreen_C::FocusedBackUpSave' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, FocusedSaveSlotItem) == 0x0004C8, "Member 'UWBP_MM_LoadScreen_C::FocusedSaveSlotItem' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, OnNewSlotSelected) == 0x0004D0, "Member 'UWBP_MM_LoadScreen_C::OnNewSlotSelected' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, NewGameTitleText) == 0x0004E0, "Member 'UWBP_MM_LoadScreen_C::NewGameTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, LoadGameTitleText) == 0x0004F0, "Member 'UWBP_MM_LoadScreen_C::LoadGameTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, OnFocusedLevelChanged) == 0x000500, "Member 'UWBP_MM_LoadScreen_C::OnFocusedLevelChanged' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, SDLoadGame) == 0x000510, "Member 'UWBP_MM_LoadScreen_C::SDLoadGame' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, BackupSaveDatas) == 0x000520, "Member 'UWBP_MM_LoadScreen_C::BackupSaveDatas' has a wrong offset!");
static_assert(offsetof(UWBP_MM_LoadScreen_C, BackupSaveNames) == 0x000530, "Member 'UWBP_MM_LoadScreen_C::BackupSaveNames' has a wrong offset!");

}

