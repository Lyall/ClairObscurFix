#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueMechanic_Foretell_Component

#include "Basic.hpp"

#include "BP_UniqueMechanic_Foretell_Component_classes.hpp"
#include "BP_UniqueMechanic_Foretell_Component_parameters.hpp"


namespace SDK
{

// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddChargeInternal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const E_UniqueMechanic_Foretell_ChargeTypeChargeType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChargeCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::AddChargeInternal(const E_UniqueMechanic_Foretell_ChargeType ChargeType, int32 ChargeCount, EBattleContext Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "AddChargeInternal");

	Params::BP_UniqueMechanic_Foretell_Component_C_AddChargeInternal Parms{};

	Parms.ChargeType = ChargeType;
	Parms.ChargeCount = ChargeCount;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddMoonCharges
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargeCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlushImmediately                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::AddMoonCharges(int32 ChargeCount, bool FlushImmediately, EBattleContext Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "AddMoonCharges");

	Params::BP_UniqueMechanic_Foretell_Component_C_AddMoonCharges Parms{};

	Parms.ChargeCount = ChargeCount;
	Parms.FlushImmediately = FlushImmediately;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddSunCharges
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargeCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlushImmediately                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::AddSunCharges(int32 ChargeCount, bool FlushImmediately, EBattleContext Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "AddSunCharges");

	Params::BP_UniqueMechanic_Foretell_Component_C_AddSunCharges Parms{};

	Parms.ChargeCount = ChargeCount;
	Parms.FlushImmediately = FlushImmediately;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddTwilightDurationModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FSF_ModifierStackEntryHandle*    ModifierHandle                                         (Parm, OutParm)

void UBP_UniqueMechanic_Foretell_Component_C::AddTwilightDurationModifier(int32 Delta, const class FString& DebugName, struct FSF_ModifierStackEntryHandle* ModifierHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "AddTwilightDurationModifier");

	Params::BP_UniqueMechanic_Foretell_Component_C_AddTwilightDurationModifier Parms{};

	Parms.Delta = Delta;
	Parms.DebugName = std::move(DebugName);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifierHandle != nullptr)
		*ModifierHandle = std::move(Parms.ModifierHandle);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.AddTwilightExtraDamagePercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DeltaPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FSF_ModifierStackEntryHandle*    ModifierStackHandle                                    (Parm, OutParm)

void UBP_UniqueMechanic_Foretell_Component_C::AddTwilightExtraDamagePercent(int32 DeltaPercent, const class FString& DebugName, struct FSF_ModifierStackEntryHandle* ModifierStackHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "AddTwilightExtraDamagePercent");

	Params::BP_UniqueMechanic_Foretell_Component_C_AddTwilightExtraDamagePercent Parms{};

	Parms.DeltaPercent = DeltaPercent;
	Parms.DebugName = std::move(DebugName);

	UObject::ProcessEvent(Func, &Parms);

	if (ModifierStackHandle != nullptr)
		*ModifierStackHandle = std::move(Parms.ModifierStackHandle);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ApplyForetell
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlushChargesImmediately                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ApplyForetell(class UAC_jRPG_CharacterBattleStats_C* Target, int32 MaxCount, EBattleContext Reason, bool FlushChargesImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ApplyForetell");

	Params::BP_UniqueMechanic_Foretell_Component_C_ApplyForetell Parms{};

	Parms.Target = Target;
	Parms.MaxCount = MaxCount;
	Parms.Reason = Reason;
	Parms.FlushChargesImmediately = FlushChargesImmediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ApplyForetellFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumberToApply                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_jRPG_Character_Battle_Base_C* Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ApplyForetellFX(int32 NumberToApply, class ABP_jRPG_Character_Battle_Base_C* Targets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ApplyForetellFX");

	Params::BP_UniqueMechanic_Foretell_Component_C_ApplyForetellFX Parms{};

	Parms.NumberToApply = NumberToApply;
	Parms.Targets = Targets;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.BPI_OnAnyCharacterAP_Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleEvent_APChange_C*       AP_Change                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::BPI_OnAnyCharacterAP_Changed(class UBP_BattleEvent_APChange_C* AP_Change)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "BPI_OnAnyCharacterAP_Changed");

	Params::BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterAP_Changed Parms{};

	Parms.AP_Change = AP_Change;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.BPI_OnAnyCharacterDamaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::BPI_OnAnyCharacterDamaged(class UBP_BattleDamages_C* BattleDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "BPI_OnAnyCharacterDamaged");

	Params::BP_UniqueMechanic_Foretell_Component_C_BPI_OnAnyCharacterDamaged Parms{};

	Parms.BattleDamage = BattleDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.BPI_OnBattleStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::BPI_OnBattleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "BPI_OnBattleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.BPI_OnReserveTeamSent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::BPI_OnReserveTeamSent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "BPI_OnReserveTeamSent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.CancelForetellTargetOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  InitialTargetStats                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::CancelForetellTargetOverride(class UAC_jRPG_CharacterBattleStats_C* InitialTargetStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "CancelForetellTargetOverride");

	Params::BP_UniqueMechanic_Foretell_Component_C_CancelForetellTargetOverride Parms{};

	Parms.InitialTargetStats = InitialTargetStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.Card_ApplyBuff
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::Card_ApplyBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "Card_ApplyBuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ClearOverrideCardMap
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::ClearOverrideCardMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ClearOverrideCardMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ConsumeForetell
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlushChargesImmediately                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ConsumedStacks                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ConsumeForetell(class UAC_jRPG_CharacterBattleStats_C* Target, int32 MaxCount, EBattleContext Reason, bool FlushChargesImmediately, int32* ConsumedStacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ConsumeForetell");

	Params::BP_UniqueMechanic_Foretell_Component_C_ConsumeForetell Parms{};

	Parms.Target = Target;
	Parms.MaxCount = MaxCount;
	Parms.Reason = Reason;
	Parms.FlushChargesImmediately = FlushChargesImmediately;

	UObject::ProcessEvent(Func, &Parms);

	if (ConsumedStacks != nullptr)
		*ConsumedStacks = Parms.ConsumedStacks;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ConsumeForetellFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumberToConsume                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class ABP_jRPG_Character_Battle_Base_C*Targets                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ConsumeForetellFX(int32 NumberToConsume, const class ABP_jRPG_Character_Battle_Base_C* Targets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ConsumeForetellFX");

	Params::BP_UniqueMechanic_Foretell_Component_C_ConsumeForetellFX Parms{};

	Parms.NumberToConsume = NumberToConsume;
	Parms.Targets = Targets;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.CreatePortraitWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget**                     CreatedUserWidget                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32*                                  SlotIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::CreatePortraitWidget(class UUserWidget** CreatedUserWidget, int32* SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "CreatePortraitWidget");

	Params::BP_UniqueMechanic_Foretell_Component_C_CreatePortraitWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CreatedUserWidget != nullptr)
		*CreatedUserWidget = Parms.CreatedUserWidget;

	if (SlotIndex != nullptr)
		*SlotIndex = Parms.SlotIndex;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.DisableTwilightMode
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::DisableTwilightMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "DisableTwilightMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component");

	Params::BP_UniqueMechanic_Foretell_Component_C_ExecuteUbergraph_BP_UniqueMechanic_Foretell_Component Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.FlushQueuedCharges
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::FlushQueuedCharges(EBattleContext Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "FlushQueuedCharges");

	Params::BP_UniqueMechanic_Foretell_Component_C_FlushQueuedCharges Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GatherNumberOfForetell
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  ForetellNumber                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::GatherNumberOfForetell(int32* ForetellNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GatherNumberOfForetell");

	Params::BP_UniqueMechanic_Foretell_Component_C_GatherNumberOfForetell Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ForetellNumber != nullptr)
		*ForetellNumber = Parms.ForetellNumber;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetActiveTwilightTurnsLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  TurnDuration                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::GetActiveTwilightTurnsLeft(int32* TurnDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetActiveTwilightTurnsLeft");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetActiveTwilightTurnsLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnDuration != nullptr)
		*TurnDuration = Parms.TurnDuration;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetBonusTwilightDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UModifierStack_Float**            Stack                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::GetBonusTwilightDuration(class UModifierStack_Float** Stack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetBonusTwilightDuration");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetBonusTwilightDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stack != nullptr)
		*Stack = Parms.Stack;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetChargeCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const E_UniqueMechanic_Foretell_ChargeTypeChargeType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetChargeCount(const E_UniqueMechanic_Foretell_ChargeType ChargeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetChargeCount");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetChargeCount Parms{};

	Parms.ChargeType = ChargeType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetCurrentMaxForetellCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetCurrentMaxForetellCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetCurrentMaxForetellCount");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetCurrentMaxForetellCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetForetellCountOnCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetForetellCountOnCharacter(class ABP_jRPG_Character_Battle_Base_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetForetellCountOnCharacter");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacter Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetForetellCountOnCharacterStats
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetForetellCountOnCharacterStats(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetForetellCountOnCharacterStats");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetForetellCountOnCharacterStats Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetMoonAPGainMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetMoonAPGainMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetMoonAPGainMultiplier");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetMoonAPGainMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetOrCreateListFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_FXForetellList_C**            List                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::GetOrCreateListFX(class ABP_jRPG_Character_Battle_Base_C* Enemy, class UBP_FXForetellList_C** List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetOrCreateListFX");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetOrCreateListFX Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = Parms.List;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetSunAPGainMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetSunAPGainMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetSunAPGainMultiplier");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetSunAPGainMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightDamageBonusForChargeCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ChargeCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_UniqueMechanic_Foretell_Component_C::GetTwilightDamageBonusForChargeCount(int32 ChargeCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetTwilightDamageBonusForChargeCount");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusForChargeCount Parms{};

	Parms.ChargeCount = ChargeCount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightDamageBonusPerCharge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_UniqueMechanic_Foretell_Component_C::GetTwilightDamageBonusPerCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetTwilightDamageBonusPerCharge");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetTwilightDamageBonusPerCharge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_UniqueMechanic_Foretell_Component_C::GetTwilightDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetTwilightDuration");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetTwilightDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.GetTwilightExtraDamagePercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UModifierStack_Float**            Stack                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::GetTwilightExtraDamagePercent(class UModifierStack_Float** Stack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "GetTwilightExtraDamagePercent");

	Params::BP_UniqueMechanic_Foretell_Component_C_GetTwilightExtraDamagePercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stack != nullptr)
		*Stack = Parms.Stack;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.HasCharges
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>&Charges_0                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UniqueMechanic_Foretell_Component_C::HasCharges(const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>& Charges_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "HasCharges");

	Params::BP_UniqueMechanic_Foretell_Component_C_HasCharges Parms{};

	Parms.Charges_0 = std::move(Charges_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.HasTwilightModeExpired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UniqueMechanic_Foretell_Component_C::HasTwilightModeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "HasTwilightModeExpired");

	Params::BP_UniqueMechanic_Foretell_Component_C_HasTwilightModeExpired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.IsInTwilightMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UniqueMechanic_Foretell_Component_C::IsInTwilightMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "IsInTwilightMode");

	Params::BP_UniqueMechanic_Foretell_Component_C_IsInTwilightMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.IsTurnStartInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InProgress                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::IsTurnStartInProgress(bool* InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "IsTurnStartInProgress");

	Params::BP_UniqueMechanic_Foretell_Component_C_IsTurnStartInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InProgress != nullptr)
		*InProgress = Parms.InProgress;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.MarkFXForDestruction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::MarkFXForDestruction(class UNiagaraComponent* NiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "MarkFXForDestruction");

	Params::BP_UniqueMechanic_Foretell_Component_C_MarkFXForDestruction Parms{};

	Parms.NiagaraSystem = NiagaraSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnBattleStop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnBattleStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnBattleStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterDealtDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 ProcessedDamages                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::OnCharacterDealtDamages(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, double Damages, double* ProcessedDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnCharacterDealtDamages");

	Params::BP_UniqueMechanic_Foretell_Component_C_OnCharacterDealtDamages Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.Damages = Damages;

	UObject::ProcessEvent(Func, &Parms);

	if (ProcessedDamages != nullptr)
		*ProcessedDamages = Parms.ProcessedDamages;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterKilled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::OnCharacterKilled(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnCharacterKilled");

	Params::BP_UniqueMechanic_Foretell_Component_C_OnCharacterKilled Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterReceivedDamages
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  SourceCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  ReceivedDamages                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleDamages_C*              BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::OnCharacterReceivedDamages(class UAC_jRPG_CharacterBattleStats_C* TargetCharacter, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter, double ReceivedDamages, class UBP_BattleDamages_C* BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnCharacterReceivedDamages");

	Params::BP_UniqueMechanic_Foretell_Component_C_OnCharacterReceivedDamages Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.SourceCharacter = SourceCharacter;
	Parms.ReceivedDamages = ReceivedDamages;
	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterResurrected
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnCharacterResurrected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnCharacterResurrected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnCharacterTurnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class UBP_DependencyRefCounter_C*&TurnStartDependencies                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::OnCharacterTurnStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, const class UBP_DependencyRefCounter_C*& TurnStartDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnCharacterTurnStart");

	Params::BP_UniqueMechanic_Foretell_Component_C_OnCharacterTurnStart Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.TurnStartDependencies = TurnStartDependencies;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnSuccessfulDodge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnSuccessfulDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnSuccessfulDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnSuccessfulParry
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnSuccessfulParry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnSuccessfulParry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnTimerElapsed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnTimerElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnTimerElapsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnTurnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnTurnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OnTurnStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OnTurnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OnTurnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OverrideCardEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OverrideCardEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OverrideCardEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OverrideCardMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_UniqueMechanic_Foretell_CardType, int32>&NewCardMap                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_UniqueMechanic_Foretell_Component_C::OverrideCardMap(const TMap<E_UniqueMechanic_Foretell_CardType, int32>& NewCardMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OverrideCardMap");

	Params::BP_UniqueMechanic_Foretell_Component_C_OverrideCardMap Parms{};

	Parms.NewCardMap = std::move(NewCardMap);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OverrideForetellTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  InitialTargetStats                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  NewTargetStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::OverrideForetellTarget(class UAC_jRPG_CharacterBattleStats_C* InitialTargetStats, class UAC_jRPG_CharacterBattleStats_C* NewTargetStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OverrideForetellTarget");

	Params::BP_UniqueMechanic_Foretell_Component_C_OverrideForetellTarget Parms{};

	Parms.InitialTargetStats = InitialTargetStats;
	Parms.NewTargetStats = NewTargetStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.OverrideNextTurnCard
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::OverrideNextTurnCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "OverrideNextTurnCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ProcessAddBuffAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UAction_AddBuff_C*&         BuffAddAction                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ProcessAddBuffAction(const class UAction_AddBuff_C*& BuffAddAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ProcessAddBuffAction");

	Params::BP_UniqueMechanic_Foretell_Component_C_ProcessAddBuffAction Parms{};

	Parms.BuffAddAction = BuffAddAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.QueueCharges
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_UniqueMechanic_Foretell_ChargeType    ChargeType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32&                            Count                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::QueueCharges(E_UniqueMechanic_Foretell_ChargeType ChargeType, const int32& Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "QueueCharges");

	Params::BP_UniqueMechanic_Foretell_Component_C_QueueCharges Parms{};

	Parms.ChargeType = ChargeType;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ReceiveEndPlay");

	Params::BP_UniqueMechanic_Foretell_Component_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.RemoveChargeBuffs
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::RemoveChargeBuffs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "RemoveChargeBuffs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.RemoveTwilightDurationModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSF_ModifierStackEntryHandle&    OutModifierHandle                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_UniqueMechanic_Foretell_Component_C::RemoveTwilightDurationModifier(struct FSF_ModifierStackEntryHandle& OutModifierHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "RemoveTwilightDurationModifier");

	Params::BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightDurationModifier Parms{};

	Parms.OutModifierHandle = std::move(OutModifierHandle);

	UObject::ProcessEvent(Func, &Parms);

	OutModifierHandle = std::move(Parms.OutModifierHandle);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.RemoveTwilightExtraDamagePercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSF_ModifierStackEntryHandle&    ModifierHandle_                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_UniqueMechanic_Foretell_Component_C::RemoveTwilightExtraDamagePercent(struct FSF_ModifierStackEntryHandle& ModifierHandle_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "RemoveTwilightExtraDamagePercent");

	Params::BP_UniqueMechanic_Foretell_Component_C_RemoveTwilightExtraDamagePercent Parms{};

	Parms.ModifierHandle_ = std::move(ModifierHandle_);

	UObject::ProcessEvent(Func, &Parms);

	ModifierHandle_ = std::move(Parms.ModifierHandle_);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetAllChargesInternal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>&AllCharges                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_UniqueMechanic_Foretell_Component_C::SetAllChargesInternal(const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>& AllCharges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "SetAllChargesInternal");

	Params::BP_UniqueMechanic_Foretell_Component_C_SetAllChargesInternal Parms{};

	Parms.AllCharges = std::move(AllCharges);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetChargeCountInternal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const E_UniqueMechanic_Foretell_ChargeTypeChargeType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChargeCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::SetChargeCountInternal(const E_UniqueMechanic_Foretell_ChargeType ChargeType, int32 ChargeCount, EBattleContext Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "SetChargeCountInternal");

	Params::BP_UniqueMechanic_Foretell_Component_C_SetChargeCountInternal Parms{};

	Parms.ChargeType = ChargeType;
	Parms.ChargeCount = ChargeCount;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetMoonAPGainMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSunAPGainMultiplier                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::SetMoonAPGainMultiplier(int32 NewSunAPGainMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "SetMoonAPGainMultiplier");

	Params::BP_UniqueMechanic_Foretell_Component_C_SetMoonAPGainMultiplier Parms{};

	Parms.NewSunAPGainMultiplier = NewSunAPGainMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.SetSunAPGainMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSunAPGainMultiplier                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::SetSunAPGainMultiplier(int32 NewSunAPGainMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "SetSunAPGainMultiplier");

	Params::BP_UniqueMechanic_Foretell_Component_C_SetSunAPGainMultiplier Parms{};

	Parms.NewSunAPGainMultiplier = NewSunAPGainMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.ShouldTriggerTwilight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UniqueMechanic_Foretell_Component_C::ShouldTriggerTwilight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "ShouldTriggerTwilight");

	Params::BP_UniqueMechanic_Foretell_Component_C_ShouldTriggerTwilight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryAddChargeTypeInternal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const E_UniqueMechanic_Foretell_ChargeTypeChargeType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChargeCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlushImmediately                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBattleContext                          Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::TryAddChargeTypeInternal(const E_UniqueMechanic_Foretell_ChargeType ChargeType, int32 ChargeCount, bool FlushImmediately, EBattleContext Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "TryAddChargeTypeInternal");

	Params::BP_UniqueMechanic_Foretell_Component_C_TryAddChargeTypeInternal Parms{};

	Parms.ChargeType = ChargeType;
	Parms.ChargeCount = ChargeCount;
	Parms.FlushImmediately = FlushImmediately;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryChangeActiveTwilightModeDuration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DeltaTurns                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::TryChangeActiveTwilightModeDuration(int32 DeltaTurns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "TryChangeActiveTwilightModeDuration");

	Params::BP_UniqueMechanic_Foretell_Component_C_TryChangeActiveTwilightModeDuration Parms{};

	Parms.DeltaTurns = DeltaTurns;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryConsumeCharges
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>&ChargesToConsume                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::TryConsumeCharges(const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>& ChargesToConsume, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "TryConsumeCharges");

	Params::BP_UniqueMechanic_Foretell_Component_C_TryConsumeCharges Parms{};

	Parms.ChargesToConsume = std::move(ChargesToConsume);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryEngageTwilightMode
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::TryEngageTwilightMode(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "TryEngageTwilightMode");

	Params::BP_UniqueMechanic_Foretell_Component_C_TryEngageTwilightMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryRemoveUniqueMechanicWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::TryRemoveUniqueMechanicWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "TryRemoveUniqueMechanicWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.TryUnlockAchievementScielForetell
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ConsumedForetell                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::TryUnlockAchievementScielForetell(int32 ConsumedForetell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "TryUnlockAchievementScielForetell");

	Params::BP_UniqueMechanic_Foretell_Component_C_TryUnlockAchievementScielForetell Parms{};

	Parms.ConsumedForetell = ConsumedForetell;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateCardColor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::UpdateCardColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "UpdateCardColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateChargeBuffs
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::UpdateChargeBuffs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "UpdateChargeBuffs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateForetellCardsMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Number_of_Foretell                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueMechanic_Foretell_Component_C::UpdateForetellCardsMap(int32 Number_of_Foretell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "UpdateForetellCardsMap");

	Params::BP_UniqueMechanic_Foretell_Component_C_UpdateForetellCardsMap Parms{};

	Parms.Number_of_Foretell = Number_of_Foretell;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateTwilightChargeDamagePercentModifier
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::UpdateTwilightChargeDamagePercentModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "UpdateTwilightChargeDamagePercentModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueMechanic_Foretell_Component.BP_UniqueMechanic_Foretell_Component_C.UpdateTwilightDuration
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueMechanic_Foretell_Component_C::UpdateTwilightDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueMechanic_Foretell_Component_C", "UpdateTwilightDuration");

	UObject::ProcessEvent(Func, nullptr);
}

}

