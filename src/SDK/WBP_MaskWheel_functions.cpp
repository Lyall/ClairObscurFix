#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MaskWheel

#include "Basic.hpp"

#include "WBP_MaskWheel_classes.hpp"
#include "WBP_MaskWheel_parameters.hpp"


namespace SDK
{

// Function WBP_MaskWheel.WBP_MaskWheel_C.CreateMaskWheel
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MaskWheel_C::CreateMaskWheel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "CreateMaskWheel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.EndRefresh
// (BlueprintCallable, BlueprintEvent)

void UWBP_MaskWheel_C::EndRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "EndRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.ExecuteUbergraph_WBP_MaskWheel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWheel_C::ExecuteUbergraph_WBP_MaskWheel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "ExecuteUbergraph_WBP_MaskWheel");

	Params::WBP_MaskWheel_C_ExecuteUbergraph_WBP_MaskWheel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.FX_FeedbackExplosion
// (BlueprintCallable, BlueprintEvent)

void UWBP_MaskWheel_C::FX_FeedbackExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "FX_FeedbackExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.GetAngleForMeter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   InMeter                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWheel_C::GetAngleForMeter(int32 InMeter, double* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "GetAngleForMeter");

	Params::WBP_MaskWheel_C_GetAngleForMeter Parms{};

	Parms.InMeter = InMeter;

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.GetAngleFromProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UWBP_MaskWheel_C::GetAngleFromProgress(double Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "GetAngleFromProgress");

	Params::WBP_MaskWheel_C_GetAngleFromProgress Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.LoadMasksWheel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<E_Transform_Masks_Mechanic>&     MaskList                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_MaskWheel_C::LoadMasksWheel(TArray<E_Transform_Masks_Mechanic>& MaskList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "LoadMasksWheel");

	Params::WBP_MaskWheel_C_LoadMasksWheel Parms{};

	Parms.MaskList = std::move(MaskList);

	UObject::ProcessEvent(Func, &Parms);

	MaskList = std::move(Parms.MaskList);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWheel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "PreConstruct");

	Params::WBP_MaskWheel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.RefreshCurrentMeter
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_MaskWheel_C::RefreshCurrentMeter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "RefreshCurrentMeter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.SetArrowAnimationProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWheel_C::SetArrowAnimationProgress(double NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "SetArrowAnimationProgress");

	Params::WBP_MaskWheel_C_SetArrowAnimationProgress Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_MaskWheel.WBP_MaskWheel_C.SetCurrentMeter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentMeter_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_MaskWheel_C::SetCurrentMeter(int32 CurrentMeter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_MaskWheel_C", "SetCurrentMeter");

	Params::WBP_MaskWheel_C_SetCurrentMeter Parms{};

	Parms.CurrentMeter_0 = CurrentMeter_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

