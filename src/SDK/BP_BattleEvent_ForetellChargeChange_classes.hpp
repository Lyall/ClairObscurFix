#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleEvent_ForetellChargeChange

#include "Basic.hpp"

#include "EBattleContext_structs.hpp"
#include "E_UniqueMechanic_Foretell_ChargeType_structs.hpp"
#include "BP_BattleEvent_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleEvent_ForetellChargeChange.BP_BattleEvent_ForetellChargeChange_C
// 0x00A8 (0x00D0 - 0x0028)
class UBP_BattleEvent_ForetellChargeChange_C final : public UBP_BattleEvent_Base_C
{
public:
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> InitialChargesDelta;                           // 0x0028(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> CurrentChargesDelta;                           // 0x0078(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	EBattleContext                                Reason;                                            // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanDoChanges;                                      // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeChargeType(const E_UniqueMechanic_Foretell_ChargeType PreviousChargeType, const E_UniqueMechanic_Foretell_ChargeType NewChargeType, bool SumWithExistingCharges);
	void EnsureCanChange();
	void Finalize();
	EBattleContext GetChangeReason();
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> GetCurrentChargesDelta();
	TMap<E_UniqueMechanic_Foretell_ChargeType, int32> GetInitialChargesDelta();
	void Init();
	void OverrideChargesDelta(const TMap<E_UniqueMechanic_Foretell_ChargeType, int32>& NewCharges);
	void RemoveChargeType(const E_UniqueMechanic_Foretell_ChargeType ChargeType);
	void SetChargeQuantity(const E_UniqueMechanic_Foretell_ChargeType ChargeType, const int32 NewQuantity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleEvent_ForetellChargeChange_C">();
	}
	static class UBP_BattleEvent_ForetellChargeChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BattleEvent_ForetellChargeChange_C>();
	}
};
static_assert(alignof(UBP_BattleEvent_ForetellChargeChange_C) == 0x000008, "Wrong alignment on UBP_BattleEvent_ForetellChargeChange_C");
static_assert(sizeof(UBP_BattleEvent_ForetellChargeChange_C) == 0x0000D0, "Wrong size on UBP_BattleEvent_ForetellChargeChange_C");
static_assert(offsetof(UBP_BattleEvent_ForetellChargeChange_C, InitialChargesDelta) == 0x000028, "Member 'UBP_BattleEvent_ForetellChargeChange_C::InitialChargesDelta' has a wrong offset!");
static_assert(offsetof(UBP_BattleEvent_ForetellChargeChange_C, CurrentChargesDelta) == 0x000078, "Member 'UBP_BattleEvent_ForetellChargeChange_C::CurrentChargesDelta' has a wrong offset!");
static_assert(offsetof(UBP_BattleEvent_ForetellChargeChange_C, Reason) == 0x0000C8, "Member 'UBP_BattleEvent_ForetellChargeChange_C::Reason' has a wrong offset!");
static_assert(offsetof(UBP_BattleEvent_ForetellChargeChange_C, CanDoChanges) == 0x0000C9, "Member 'UBP_BattleEvent_ForetellChargeChange_C::CanDoChanges' has a wrong offset!");

}

