#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluxDataAudioComponent

#include "Basic.hpp"

#include "BP_FluxDataAudioComponent_classes.hpp"
#include "BP_FluxDataAudioComponent_parameters.hpp"


namespace SDK
{

// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.UpdateSource
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataAudioComponent_C::UpdateSource(const struct FVector& Location, double Velocity, int32 Index_0, double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "UpdateSource");

	Params::BP_FluxDataAudioComponent_C_UpdateSource Parms{};

	Parms.Location = std::move(Location);
	Parms.Velocity = Velocity;
	Parms.Index_0 = Index_0;
	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.SetFluidDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CameraNearSurface                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataAudioComponent_C::SetFluidDistance(double CameraNearSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "SetFluidDistance");

	Params::BP_FluxDataAudioComponent_C_SetFluidDistance Parms{};

	Parms.CameraNearSurface = CameraNearSurface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataAudioComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "ReceiveTick");

	Params::BP_FluxDataAudioComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FBasicParticleData>&Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataAudioComponent_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "ReceiveParticleData");

	Params::BP_FluxDataAudioComponent_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_FluxDataAudioComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.ExecuteUbergraph_BP_FluxDataAudioComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FluxDataAudioComponent_C::ExecuteUbergraph_BP_FluxDataAudioComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "ExecuteUbergraph_BP_FluxDataAudioComponent");

	Params::BP_FluxDataAudioComponent_C_ExecuteUbergraph_BP_FluxDataAudioComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.DrawDebugSource
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_FluxDataAudioComponent_C::DrawDebugSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "DrawDebugSource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FluxDataAudioComponent.BP_FluxDataAudioComponent_C.ApplyNiagaraParameters
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_FluxDataAudioComponent_C::ApplyNiagaraParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FluxDataAudioComponent_C", "ApplyNiagaraParameters");

	UObject::ProcessEvent(Func, nullptr);
}

}

