#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyWorld_Petank_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_PetankType_structs.hpp"
#include "BP_jRPG_Enemy_World_Base_Seamless_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnemyWorld_Petank_Parent.BP_EnemyWorld_Petank_Parent_C
// 0x0020 (0x0D10 - 0x0CF0)
class ABP_EnemyWorld_Petank_Parent_C : public ABP_jRPG_Enemy_World_Base_Seamless_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_EnemyWorld_Petank_Parent_C;      // 0x0CF0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBT_FleeAiComponent_C*                  BT_FleeAiComponent;                                // 0x0CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x0D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_PetankType                                  PetankType;                                        // 0x0D08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_EnemyWorld_Petank_Parent_BT_FleeAiComponent_K2Node_ComponentBoundEvent_1_OnCurrentFleePointChanged__DelegateSignature(class ABP_FleePoint_C* Previous, class ABP_FleePoint_C* Current);
	void ExecuteUbergraph_BP_EnemyWorld_Petank_Parent(int32 EntryPoint);
	struct FLinearColor GetPetankColor();
	void OnBattleFled();
	bool ShouldEncounterCapsuleGenerateOverlaps();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnemyWorld_Petank_Parent_C">();
	}
	static class ABP_EnemyWorld_Petank_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EnemyWorld_Petank_Parent_C>();
	}
};
static_assert(alignof(ABP_EnemyWorld_Petank_Parent_C) == 0x000010, "Wrong alignment on ABP_EnemyWorld_Petank_Parent_C");
static_assert(sizeof(ABP_EnemyWorld_Petank_Parent_C) == 0x000D10, "Wrong size on ABP_EnemyWorld_Petank_Parent_C");
static_assert(offsetof(ABP_EnemyWorld_Petank_Parent_C, UberGraphFrame_BP_EnemyWorld_Petank_Parent_C) == 0x000CF0, "Member 'ABP_EnemyWorld_Petank_Parent_C::UberGraphFrame_BP_EnemyWorld_Petank_Parent_C' has a wrong offset!");
static_assert(offsetof(ABP_EnemyWorld_Petank_Parent_C, BT_FleeAiComponent) == 0x000CF8, "Member 'ABP_EnemyWorld_Petank_Parent_C::BT_FleeAiComponent' has a wrong offset!");
static_assert(offsetof(ABP_EnemyWorld_Petank_Parent_C, Niagara) == 0x000D00, "Member 'ABP_EnemyWorld_Petank_Parent_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_EnemyWorld_Petank_Parent_C, PetankType) == 0x000D08, "Member 'ABP_EnemyWorld_Petank_Parent_C::PetankType' has a wrong offset!");

}

